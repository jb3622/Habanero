Using System
Using System.Text
Using System.Data

DclNameSpace Disney.SRR

BegClass BuildMANSTWallocations Access(*Public)

	DclDB PgmDB DBName("TDST")
	
	DclDiskFile Name(IPSTRTB)         Type(*Input)  Org(*Indexed) File('IPSTRTB')  Db(PgmDB) ImpOpen(*No)
	DclDiskFile Name(IPSTORE)         Type(*Input)  Org(*Indexed) File('IPSTORE')  Db(PgmDB) ImpOpen(*No)
	DclDiskFile Name(DSSTORE)         Type(*Input)  Org(*Indexed) File('DSSTORE')  Db(PgmDB) ImpOpen(*No)
	DclDiskFile Name(DSAPPALC)        Type(*Input)  Org(*Indexed) File('DSAPPALC') Db(PgmDB) ImpOpen(*No)
	DclDiskFile Name(DSAPPALC_Output) Type(*Output) Org(*Arrival) File('DSAPPALC') Db(PgmDB) ImpOpen(*No) Rnmfmt(RDSSRALC:ALC_OUTPUT)
	DclDiskFile Name(IPITHDR)         Type(*Input)  Org(*Indexed) File('IPITHDR')  Db(PgmDB) ImpOpen(*No)
	
	DclFld ds         Type(DataSet)
	DclFld dt	      Type(DataTable)
	DclFld dcStores   Type(DataColumn) 
	DclFld drStores   Type(DataRow)
	DclFld User_Key   Type(String)
	DclArray Name(StoresArray) Dim(999) Type(*Char) Len(1) Inz(' ') 
	
	DclDs	     Name(Str)
	DclDsFld     Name(Str1) Type(*Char) Len(1) Dim(999)
		
	
	BegConstructor Access(*Public)
		DclSrParm PgmDB Type(ASNA.VisualRPG.Runtime.Database)
		
		*this.PgmDB = PgmDB
	EndConstructor
	
		
	BegFunc BuildData Access(*Public) Type(DataSet)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Vendor Type(*Zoned) Len(5,0)
		DclSrParm Style  Type(*Zoned) Len(4,0)
		DclSrParm Colour Type(*Zoned) Len(3,0)
		DclSrParm Size   Type(*Zoned) Len(4,0)	
	
		DclFld ds        Type(DataSet)
		DclFld StoreList Type(DataTable)
		DclFld dr        Type(DataRow)
		DclFld RowIndex  Type(*Integer2)
		DclFld StoreNum  Type(*Integer2)	
		
		
		
		
		ds = *New DataSet("MANalloc")
						
		StoreList = *New DataTable("StoreList")
						
		StoreList.Columns.Add(*New DataColumn("Market", *TypeOf(System.String)))
		StoreList.Columns["Market"].ReadOnly = *True
	
		StoreList.Columns.Add(*New DataColumn("Store", *TypeOf(System.Int16)))
		StoreList.Columns["Store"].ReadOnly = *True
		
		StoreList.Columns.Add(*New DataColumn("StoreName", *TypeOf(System.String)))
		StoreList.Columns["StoreName"].ReadOnly = *True
					
		StoreList.Columns.Add(*New DataColumn("ReleaseQty", *TypeOf(System.Int32)))
		
		StoreList.Columns.Add(*New DataColumn("SRRallocation", *TypeOf(System.Boolean)))
		StoreList.Columns["SRRallocation"].ReadOnly = *True
		
		
		If Not IPSTRTB.IsOpen
			Open IPSTRTB 
		EndIf
		
		If Not IPSTORE.IsOpen
			Open IPSTORE 
		EndIf
		
		If Not DSSTORE.IsOpen
			Open DSSTORE 
		EndIf
		
		If Not DSAPPALC.IsOpen
			Open DSAPPALC
		EndIf
	
		//Chain to IPSTRTB
		Chain From(IPSTRTB) Key('USTW') Access(*NoLock)
			If %Found 
				Str = SARR
				StoresArray = Str1
				Do FromVal(0) Toval(998) Index(RowIndex)
					If StoresArray(RowIndex) = '1'
						StoreNum = RowIndex + 1  //SARR is a field of length 999 starting at 1. The array starts at 0
						dr = StoreList.NewRow()
												
						dr.Item["Store"] = StoreNum
						
						Chain From(DSSTORE) Key(StoreNum) Access(*NoLock)
							If %Found
								dr.Item["Market"] = DCTR
							Endif
						Chain From(IPSTORE) Key(StoreNum) Access(*NoLock)
							If %Found	
								dr.Item["StoreName"] = SNAM
							Endif
						
						dr.Item["ReleaseQty"] = 0
				
						Chain From(DSAPPALC) Key('P',Class,Vendor,Style,Colour,Size,StoreNum,'S')
							If DSAPPALC.IsFound
								dr.Item["SRRallocation"] = *True
							Else
								dr.Item["SRRallocation"] = *False
							EndIf
				
					StoreList.Rows.Add(dr)			
					EndIf
				EndDo
			Endif
		
		Close DSAPPALC
		Close IPSTRTB
		Close IPSTORE
		Close DSSTORE
		
		ds.Tables.Add(StoreList)
		
		LeaveSR ds
	EndFunc
	
	BegSr Update_DB Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Vendor Type(*Zoned) Len(5,0)
		DclSrParm Style  Type(*Zoned) Len(4,0)
		DclSrParm Colour Type(*Zoned) Len(3,0)
		DclSrParm Size   Type(*Zoned) Len(4,0)
		DclSrParm dv     Type(DataView)
		
		If Not IPITHDR.IsOpen
			Open IPITHDR
		EndIf
		
		Chain From(IPITHDR) Key(Class,Vendor,Style,Colour,Size)
		If Not IPITHDR.IsFound
			Throw *New System.Exception('Missing IPITHDR')
			LeaveSR
		EndIf
		
		Close IPITHDR
					
		If Not DSAPPALC_Output.IsOpen
			Open DSAPPALC_Output
		EndIf		

		ForEach drv Collection(dv) Type(DataRowView)
			IASTS    = *Blank
			IAORIGIN = 'M'
			IADEPT   = IDPT
			IACLS    = Class
			IAVEN    = Vendor
			IASTY    = Style
			IACLR    = Colour
			IASIZ    = Size
			IAUPC    = IUPD
			IASTR    = drv.Item["Store"] *As System.Int16
			IASTRDSC = drv.Item["StoreName"] *as System.String
			IAMKT    = drv.Item["Market"] *as System.String
			IAGRADE  = '999'
			IASYSQTY = *Zero
			IARLSQTY = drv.Item["ReleaseQty"] *as System.Int32
			IARLSYN  = 'Y'
			IASRRUNT = *Zero
			IARLSDAT = DateTime.Now
			IARLSUSR = PgmDB.User.ToUpper()
				
			Write ALC_OUTPUT
		EndFor
		
		Close DSAPPALC_Output
	EndSr
EndClass
