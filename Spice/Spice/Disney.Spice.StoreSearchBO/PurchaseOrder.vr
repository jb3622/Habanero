Using System
Using System.Text
Using System.Data
Using System.IO
Using System.Windows.Forms
Using Disney.DA.IP400

BegClass PurchaseOrder Access(*Public)

/Region Declares 
	DclFld PgmDB		      Type(ASNA.VisualRPG.Runtime.Database) Access(*Private)
	DclFld User			      Type(Disney.Menu.Users)               Access(*Private)
	DclFld Stores		      Type(Stores)
	DclFld IPSTRTBcls	      Type(IPSTRTBcls)
	DclFld Environment        Type(Disney.Menu.Environments)
	DclFld FilterString		  Type(String)
	DclFld dtStoresClone	  Type(DataTable)
	DclFld Selection	      Type(Boolean)
	DclFld dsMarketDC		  Type(DataSet)
	DclFld dtMarketDC		  Type(DataTable)
	DclFld dvMarketDC         Type(DataView)
	DclFld dsAdditional		  Type(DataSet)
	DclFld dtAdditional		  Type(DataTable)
	DclFld dvAdditional       Type(DataView)
	DclFld DCCode			  Type(String)	
	DclFld DCCodeNum		  Type(Int16)	
	DclFld AdditionalCode	  Type(String)	
	DclFld AdditionalCodeNum  Type(Int16)	
	DclFld dvStoresClone      Type(DataView)
	DclFld QryString          Type(StringBuilder)
	DclFld FilterString		  Type(String)
/EndRegion

/Region Constructor
	BegConstructor Access(*Public)
		DclSrParm PgmDB        Type(ASNA.VisualRPG.Runtime.Database)
		DclSrParm User         Type(Disney.Menu.Users)
		DclSrParm Environment  Type(Disney.Menu.Environments)
				
		*this.PgmDB = PgmDB
		*this.User  = User
		*this.Environment = Environment
	EndConstructor
/EndRegion	

/Region Functions
	//Stores Market
	BegFunc	StoresMarket Type(DataView) Access(*Public)
		DclSrparm Domain       Type(String)
		DclSrParm MarketSelect Type(String)
		
		DclFld dtStoresMarket         Type(DataTable)
		DclFld dvStoresMarket         Type(DataView)
		DclFld drStoresMarket         Type(DataRow)
		
		//Instance Class Stores Store File
		If  Stores = *Nothing
			Stores = *New Stores(PgmDB, Environment)
			dtStoresClone = Stores.GetStoreTbl() 
		Endif
		
		dvStoresClone = *New DataView(dtStoresClone)
		QryString = *New StringBuilder()
		
		QryString.Append("Status <> 'D'")
		QryString.Append(" And ")
		QryString.Append("Market = '")
		QryString.Append(MarketSelect)
		QryString.Append("'")
		FilterString = QryString.ToString()
		dvStoresClone.RowFilter = FilterString
									
		dtStoresMarket = dvStoresClone.ToTable()
		
		dsMarketDC = *New DataSet("dsMarketDC")
		dsMarketDC.ReadXml(Path.Combine(Environment.PathToEnvironmentXML,"MarketDC.xml"))
		dtMarketDC = dsMarketDC.Tables[0]
		dvMarketDC = *New DataView(dtMarketDC)
		
		dsAdditional = *New DataSet("dsAdditional")
		dsAdditional.ReadXml(Path.Combine(Environment.PathToEnvironmentXML,"AdditionalStores.xml"))
		dtAdditional = dsAdditional.Tables[0]
		dvAdditional = *New DataView(dtAdditional)
		
		QryString = *New StringBuilder()
		
		QryString.Append("Domain = '")
		QryString.Append(Domain)
		QryString.Append("'")
		QryString.Append(" And ")
		QryString.Append("IPMarket = '")
		QryString.Append(MarketSelect)
		QryString.Append("'")
		FilterString = QryString.ToString()
		dvMarketDC.RowFilter = FilterString
		dvAdditional.RowFilter = FilterString
					
		dvStoresMarket = *New DataView(dtStoresMarket)	
		
		ForEach DCRow Collection(dvMarketDC) Type(DataRowView)
			DCCode	  = DCRow.Item["DCCode"].ToString()
			DCCodeNum = Convert.ToInt16(DCRow.Item["DCCode"])
			dvStoresMarket.RowFilter = "Store = '" + DCCode + "'"
			If dvStoresMarket.Count = 0
				Stores.GetStore(DCCodeNum)
				
				drStoresMarket = dtStoresMarket.NewRow()
				drStoresMarket.Item["Store"]            = DCCode
				drStoresMarket.Item["Description"]      = Stores.StoreDescription
				drStoresMarket.Item["StoreDescription"] = drStoresMarket.Item["Store"] + " " + "-" + " " + drStoresMarket.Item["Description"]
				drStoresMarket.Item["Status"]           = "S"
				drStoresMarket.Item["Market"]           = MarketSelect
				dtStoresMarket.Rows.Add(drStoresMarket)
			Endif
		EndFor
		
		ForEach AdditionalRow Collection(dvAdditional) Type(DataRowView)
			AdditionalCode	  = AdditionalRow.Item["StoreCode"].ToString()
			AdditionalCodeNum = Convert.ToInt16(AdditionalRow.Item["StoreCode"])
			dvStoresMarket.RowFilter = "Store = '" + AdditionalCode + "'"
			If dvStoresMarket.Count = 0
				Stores.GetStore(AdditionalCodeNum)
				
				drStoresMarket = dtStoresMarket.NewRow()
				drStoresMarket.Item["Store"]            = AdditionalCode
				drStoresMarket.Item["Description"]      = AdditionalRow.Item["StoreDesc"].ToString()
				drStoresMarket.Item["StoreDescription"] = drStoresMarket.Item["Store"] + " " + "-" + " " + drStoresMarket.Item["Description"]
				drStoresMarket.Item["Status"]           = "S"
				drStoresMarket.Item["Market"]           = MarketSelect
				dtStoresMarket.Rows.Add(drStoresMarket)
			Endif
		EndFor
					
		drStoresMarket = dtStoresMarket.NewRow()
		drStoresMarket.Item["Store"]            = 0
		drStoresMarket.Item["Description"]      = "All Stores"
		drStoresMarket.Item["StoreDescription"] = drStoresMarket.Item["Description"]
		drStoresMarket.Item["Status"]           = "S"
		drStoresMarket.Item["Market"]           = MarketSelect
		dtStoresMarket.Rows.Add(drStoresMarket)
		
		dvStoresMarket = *New DataView(dtStoresMarket)				
		dvStoresMarket.Sort() = "Store"
		
		LeaveSR dvStoresMarket
	EndFunc				
		
	//Creates a DataSet/DataTable accessed by Market. This is for the Store selection forms
	BegFunc Store_DataSetClass Type(DataTable) Access(*Public)
		DclSrParm Market	   Type(String)	   
		DclSrParm dtSelections Type(DataTable)
		
		DclFld dsStores        Type(DataSet)
		DclFld dtStores		   Type( DataTable )
		DclFld dcStores	       Type( DataColumn ) 
		DclFld drStores		   Type( DataRow )
		DclFld Store_String	   Type(*String)
		DclFld dvStoresClone   Type(DataView)
			
		dsStores = *New DataSet("Spice")
		dtStores = *New DataTable("Stores")	
		dsStores.Tables.Add(dtStores)	
													
		//Create Selection Column
		dcStores = *New DataColumn( 'clmSelect' )
		dcStores.DataType = System.Type.GetType("System.Boolean")
		dcStores.ColumnName = "clmSelect"
		dcStores.Caption = "Select"
		dtStores.Columns.Add(dcStores)
	
		//Create Store Number Column
		dcStores = *New DataColumn( 'clmSSTR' )
		dcStores.DataType = System.Type.GetType("System.String")
		dcStores.ColumnName = "clmSSTR"
		dcStores.Caption = "Store"
		dtStores.Columns.Add(dcStores)
			
		//Create Store Name Column
		dcStores = *New DataColumn( 'clmSNAM' )
		dcStores.DataType = System.Type.GetType("System.String")
		dcStores.ColumnName = "clmSNAM"
		dcStores.Caption = "Store Name"
		dtStores.Columns.Add(dcStores)
		
		//Get Stores by Market DataView
		dvStoresClone = StoresMarket(Environment.Domain, Market)
		
		ForEach Data_Row_View Collection(dvStoresClone) Type(DataRowView)
			Store_String = Data_Row_View.Item["Store"].ToString()
			DataSet_Selections(Store_String, dtSelections)
			
			If Data_Row_View.Item["Store"].ToString() <> '0' and Selection = *False
			    drStores = dtStores.NewRow()
				drStores.Item[0] = *False	
				drStores.Item[1] = Data_Row_View.Item["Store"].ToString() 
				drStores.Item[2] = Data_Row_View.Item["Description"].ToString() 
				dtStores.Rows.Add(drStores)
			Endif
		EndFor
			
		LeaveSR dtStores
	EndFunc
		
	//Creates a DataSet/DataTable for Store_Group Search with Market.
	BegFunc Store_DataSet_Market Type(DataTable) Access(*Public)
		DclSrParm dtSelections Type(DataTable)
		DclSrParm dtStoreGroup Type(DataTable)
		DclSrParm Market	   Type(*Char)	   Len(2)
	
		DclFld dsStores        Type(DataSet)
		DclFld dtStores		   Type( DataTable )
		DclFld dcStores	       Type( DataColumn ) 
		DclFld drStores		   Type( DataRow )
		DclFld Store_String	   Type(*String)
		DclFld dvStoreGroup    Type(DataView)
		DclFld dvStoresClone   Type(DataView)
		
		//Get Stores by Market DataView
		dvStoresClone = StoresMarket(Environment.Domain, Market)
									
		dsStores = *New DataSet("Spice")
		dtStores = *New DataTable("Stores")	
		dsStores.Tables.Add(dtStores)	
				
		//Create Selection Column
		dcStores = *New DataColumn( 'clmSelect' )
		dcStores.DataType = System.Type.GetType("System.Boolean")
		dcStores.ColumnName = "clmSelect"
		dcStores.Caption = "Select"
		dtStores.Columns.Add(dcStores)
	
		//Create Store Number Column
		dcStores = *New DataColumn( 'clmSSTR' )
		dcStores.DataType = System.Type.GetType("System.String")
		dcStores.ColumnName = "clmSSTR"
		dcStores.Caption = "Store"
		dtStores.Columns.Add(dcStores)
			
		//Create Store Name Column
		dcStores = *New DataColumn( 'clmSNAM' )
		dcStores.DataType = System.Type.GetType("System.String")
		dcStores.ColumnName = "clmSNAM"
		dcStores.Caption = "Store Name"
		dtStores.Columns.Add(dcStores)
		
		dvStoreGroup = *New DataView(dtStoreGroup) 
					
		//Read through the Datatable and create Stores List
		ForEach Data_Row_View Collection(dvStoreGroup) Type(DataRowView)
			Store_String = Data_Row_View.Item['clmStore'].ToString()
			   DataSet_Selections(Store_String, dtSelections)
			   If Selection = *False
				  ForEach StoreNum Collection(dvStoresClone) Type(DataRowView)	
					If StoreNum.Item["Store"].ToString() = Data_Row_View.Item['clmStore'].ToString() 
						drStores = dtStores.NewRow()
						drStores.Item[0] = *False	
						drStores.Item[1] = Data_Row_View.Item["clmStore"].ToString() 
						drStores.Item[2] = StoreNum.Item["Description"].ToString()
						dtStores.Rows.Add(drStores)
				    Endif
				  EndFor  
			   Endif	
		EndFor			
					
		LeaveSR dtStores
	EndFunc
	
	//Creates a DataSet/DataTable Search accessed by Market.
	BegFunc Store_DataSetClassSearch Type(DataTable) Access(*Public)
		DclSrParm Market	   Type(String)
		DclSrParm dtSelections Type(DataTable)
		DclSrParm Store_Desc   Type(String)
		
		DclFld dsStores        Type(DataSet)
		DclFld dtStores		   Type(DataTable)
		DclFld dcStores	       Type(DataColumn) 
		DclFld drStores		   Type(DataRow)
		DclFld Store_String	   Type(String)
		DclFld dvStoresClone   Type(DataView)
				
		dsStores = *New DataSet("Spice")
		dtStores = *New DataTable("Stores")	
		dsStores.Tables.Add(dtStores)					
							
		//Create Selection Column
		dcStores = *New DataColumn( 'clmSelect' )
		dcStores.DataType = System.Type.GetType("System.Boolean")
		dcStores.ColumnName = "clmSelect"
		dcStores.Caption = "Select"
		dtStores.Columns.Add(dcStores)
	
		//Create Store Number Column
		dcStores = *New DataColumn( 'clmSSTR' )
		dcStores.DataType = System.Type.GetType("System.String")
		dcStores.ColumnName = "clmSSTR"
		dcStores.Caption = "Store"
		dtStores.Columns.Add(dcStores)
			
		//Create Store Name Column
		dcStores = *New DataColumn( 'clmSNAM' )
		dcStores.DataType = System.Type.GetType("System.String")
		dcStores.ColumnName = "clmSNAM"
		dcStores.Caption = "Store Name"
		dtStores.Columns.Add(dcStores)
		
		//Get Stores by Market DataView
		dvStoresClone = StoresMarket(Environment.Domain, Market)
		dvStoresClone.RowFilter = "Description Like '" + Store_Desc.Trim() + "%'"

		ForEach Data_Row_View Collection(dvStoresClone) Type(DataRowView)
			Store_String = Data_Row_View.Item["Store"].ToString()
			DataSet_Selections(Store_String, dtSelections)
			
			If Data_Row_View.Item["Store"].ToString() <> '0' and Selection = *False
			    drStores = dtStores.NewRow()
				drStores.Item[0] = *False	
				drStores.Item[1] = Data_Row_View.Item["Store"].ToString() 
				drStores.Item[2] = Data_Row_View.Item["Description"].ToString() 
				dtStores.Rows.Add(drStores)
			Endif
		EndFor
			
		LeaveSR dtStores
	EndFunc
				
	//Function checking whether this store has already been selected previously.
	//This has to be reflected in the DataTable being sent to the Store Selection Class
	BegFunc DataSet_Selections Type(*Boolean) Access(*Public)
		DclSrParm Store_String Type(*String)
		DclSrParm dtSelections Type(DataTable)	
		
		DclFld dvSelections	   Type(DataView)
		DclFld dtSelections    Type(DataTable)
		
		dvSelections = *New DataView(dtSelections) 
						
		Selection = *False
							
		ForEach Data_Row_View Collection(dvSelections) Type(DataRowView)
			If Data_Row_View.Item["clmStore"] *as *String = Store_String
				Selection = *True
				Leave
			Endif
		Endfor
		
		LeaveSr Selection
	EndFunc
		
	BegFunc Check_Record_Key Type(*Boolean) Access(*Public)
		DclSrParm Record_Key Type(String) 
		DclSrParm Market	 Type(String)
	
		DclFld Store_Group_Error Type(*Boolean)
		
		//Instance Class IPSTRTBcls
		If  IPSTRTBcls = *Nothing
			IPSTRTBcls = *New IPSTRTBcls(PgmDB, Market)
		Endif
		
		Store_Group_Error = IPSTRTBcls.Check_Record_Key(Record_key)
				
		LeaveSR Store_Group_Error
	EndFunc		
	
	//Creates a DataSet/DataTable accessed by Record Key.
	BegFunc Get_Stores_By_Record_Key Type(DataTable) Access(*Public)
		DclSrParm Record_Key	     Type(String)
		DclSrParm Market			 Type(String)
	
		DclFld dtStores	 Type( DataTable )
		
		//Instance Class IPSTRTBcls
		If  IPSTRTBcls = *Nothing
			IPSTRTBcls = *New IPSTRTBcls(PgmDB, Market)
		Endif
		
		dtStores = IPSTRTBcls.Get_Stores_By_Record_Key(Record_Key)																			
		
		LeaveSR dtStores
	EndFunc
	
	//Creates a DataSet/DataTable for all User Store Groups
	BegFunc GetStoreGroupDataSet Type(DataTable) Access(*Public)
		DclSrParm Market	     Type(String)
			
		DclFld dtStoreGroups Type(DataTable)
								
		//Instance Class IPSTRTBcls
		If  IPSTRTBcls = *Nothing
			IPSTRTBcls = *New IPSTRTBcls(PgmDB, Market)
		Endif
		
		dtStoreGroups = IPSTRTBcls.GetStoreGroupDataSet()
	
		LeaveSR dtStoreGroups
	EndFunc

	//Creates a DataSet/DataTable as above but accessed by Description Search
	BegFunc GetStoreGroupDataSetSearch Type(DataTable) Access(*Public)
		DclSrParm KeyDesc Type(String)
		DclSrParm Market  Type(String)
			
		DclFld dtStoreGroups Type(DataTable)
								
		//Instance Class IPSTRTBcls
		If  IPSTRTBcls = *Nothing
			IPSTRTBcls = *New IPSTRTBcls(PgmDB, Market)
		Endif
		
		dtStoreGroups = IPSTRTBcls.GetStoreGroupDataSetSearch(KeyDesc)
		
		LeaveSR dtStoreGroups
	EndFunc
/EndRegion
	
EndClass