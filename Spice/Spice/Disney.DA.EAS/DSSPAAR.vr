// ===============================================
// Joseph Urbina
// 18th December 2009
// DSSPAAR	Approver Approval Requests
// Data Access Layer - Spice EAS
//------------------------------------------------
// Modification
// Clayton Jones
// 5 January 2010
// Added GetApprovalRequests Class and associated bits
//================================================

Using System
Using System.Text
Using System.Data
Using System.Collections
Using System.IO
Using System.Diagnostics

BegClass DSSPAAR Access(*Public)

	/Region Declares
	DclFld User Type(Disney.Menu.Users) Access(*Private)

	DclDB Name(PgmDB) DbName("TDST") Access(*Private)
	DclDiskFile Name(DSSPAARL1) Type(*Input) Org(*Indexed) ImpOpen(*No) DB(PgmDB) Access(*Private)
	DclDiskFile Name(DSSPAARL4) Type(*Input) Org(*Indexed) ImpOpen(*No) DB(PgmDB) Access(*Private) RnmFmt(RDSSPAAR:AAR4)
	DclDiskFile Name(DSSPAPRL2) Type(*input) Org(*Indexed) ImpOpen(*No) DB(PgmDB) Access(*Private)
	DclDiskFile Name(DSSPAPRL1) Type(*Input) Org(*Indexed) ImpOpen(*No) DB(PgmDB) Access(*Private) RnmFmt(RDSSPAPR:Apr1)

	BegConstructor Access(*Public)
		DclSrParm PgmDB Type(ASNA.VisualRPG.Runtime.Database)
		DclSrParm User  Type(Disney.Menu.Users)	
			
		*This.PgmDB = PgmDB
		*This.User  = User
	EndConstructor
	/EndRegion
						
	/Region Methods
	
	BegFunc GetStatusDetails Type(String) Access(*Public)
		DclSrParm RequestID  Type(Int64) 
					
		DclFld ApproveStatus Type(String)
											
		If Not DSSPAARL1.IsOpen
			Open DSSPAARL1
		EndIf
		
		Chain From(DSSPAARL1) Key(RequestID) Access(*NoLock)
		If %Found
			Select
				When AARSTS = *Blank
					ApproveStatus  = "OutStanding"
				When AARSTS = 'R'
					ApproveStatus  = "Rejected"
				When AARSTS = 'A'
					ApproveStatus  = "Approved"
				When AARSTS = 'O'
					 ApproveStatus = "Overridden"	 
				When AARSTS = 'L'
					 ApproveStatus = "Overridden"	
			EndSL
		EndIf
		
		LeaveSR ApproveStatus
	EndFunc
	
	BegFunc GetRequestApproverStatus Type(String) Access(*Public)
		DclSrParm RequestID  Type(Int64) 
					
		DclFld ApproveStatus Type(String)
		DclFld ApproverID    Type(Int16)
		DclFld UserID        Type(String)
		
		//Get Approver ID
		UserID = User.UserID.ToUpper()
		Open DSSPAPRL2
		Chain From(DSSPAPRL2) Key(UserID)
		If DSSPAPRL2.IsFound
			ApproverID = APRID
		EndIf
		Close DSSPAPRL2	
											
		If Not DSSPAARL4.IsOpen
			Open DSSPAARL4
		EndIf
		
		Chain From(DSSPAARL4) Key(RequestID, ApproverID) Access(*NoLock)
		If %Found
		
			Select
			When AARSTS = *Blank
				ApproveStatus  = "OutStanding"
				
			When AARSTS = 'R'
				ApproveStatus  = "Rejected"
				
			When AARSTS = 'A'
				ApproveStatus  = "Approved"
				
			When AARSTS = 'O'
				ApproveStatus = "Overridden"
				
			When AARSTS = 'L'
				ApproveStatus = "Overridden"
				
			EndSL
		EndIf
		
		LeaveSR ApproveStatus
	EndFunc
				
	//Returns the whole File as a DataTable Keyed by Request ID
	BegFunc GetApprovers Type(Datatable) Access(*Public)
		DclSrParm RequestID Type(Int64) 
		
		DclFld dtApprovers Type(DataTable)
		DclFld dcApprovers Type(DataColumn) 
		DclFld drApprovers Type(DataRow)
		
		If Not DSSPAARL1.IsOpen
			Open DSSPAARL1
		EndIf
		
		If Not DSSPAPRL1.IsOpen
			Open DSSPAPRL1
		EndIf
		
		//Create Approvers DataTable
				
		dtApprovers = *New DataTable("dtApprovers")
				
		//Request ID
		dcApprovers = *New DataColumn('RequestID')
		dcApprovers.DataType = System.Type.GetType("System.Int64")
		dcApprovers.ColumnName = "RequestID"
		dtApprovers.Columns.Add(dcApprovers)
		
		//Approver 
		dcApprovers = *New DataColumn('Approver')
		dcApprovers.DataType = System.Type.GetType("System.String")
		dcApprovers.ColumnName = "Approver"
		dtApprovers.Columns.Add(dcApprovers)
		
		//Approver Group
		dcApprovers = *New DataColumn('ApproverGroup')
		dcApprovers.DataType = System.Type.GetType("System.Int32")
		dcApprovers.ColumnName = "ApproverGroup"
		dtApprovers.Columns.Add(dcApprovers)
		
		//Approval Level
		dcApprovers = *New DataColumn('ApprovalLevel')
		dcApprovers.DataType = System.Type.GetType("System.Int16")
		dcApprovers.ColumnName = "ApprovalLevel"
		dtApprovers.Columns.Add(dcApprovers)
		
		//Approval Sub Level
		dcApprovers = *New DataColumn('ApprovalSubLevel')
		dcApprovers.DataType = System.Type.GetType("System.Int16")
		dcApprovers.ColumnName = "ApprovalSubLevel"
		dtApprovers.Columns.Add(dcApprovers)
		
		//Active
		dcApprovers = *New DataColumn('Active')
		dcApprovers.DataType = System.Type.GetType("System.String")
		dcApprovers.ColumnName = "Active"
		dtApprovers.Columns.Add(dcApprovers)
		
		//Override Lower Level
		dcApprovers = *New DataColumn('OverrideLowerLevel')
		dcApprovers.DataType = System.Type.GetType("System.String")
		dcApprovers.ColumnName = "OverrideLowerLevel"
		dtApprovers.Columns.Add(dcApprovers)
		
		//Status
		dcApprovers = *New DataColumn('Status')
		dcApprovers.DataType = System.Type.GetType("System.String")
		dcApprovers.ColumnName = "Status"
		dtApprovers.Columns.Add(dcApprovers)
		
		//Create User
		dcApprovers = *New DataColumn('CreateUser')
		dcApprovers.DataType = System.Type.GetType("System.String")
		dcApprovers.ColumnName = "CreateUser"
		dtApprovers.Columns.Add(dcApprovers)
		
		//Create Date
		dcApprovers = *New DataColumn('CreateDateTime')
		dcApprovers.DataType = System.Type.GetType("System.DateTime")
		dcApprovers.ColumnName = "CreateDateTime"
		dtApprovers.Columns.Add(dcApprovers)
		
		//Change User
		dcApprovers = *New DataColumn('ChangeUser')
		dcApprovers.DataType = System.Type.GetType("System.String")
		dcApprovers.ColumnName = "ChangeUser"
		dtApprovers.Columns.Add(dcApprovers)
		
		//Change Date
		dcApprovers = *New DataColumn('ChangeDateTime')
		dcApprovers.DataType = System.Type.GetType("System.DateTime")
		dcApprovers.ColumnName = "ChangeDateTime"
		dtApprovers.Columns.Add(dcApprovers)
		
		//Rejection Reason
		dcApprovers = *New DataColumn('RejectionReason')
		dcApprovers.DataType = System.Type.GetType("System.String")
		dcApprovers.ColumnName = "RejectionReason"
		dtApprovers.Columns.Add(dcApprovers)
							
		Setll DSSPAARL1 Key(RequestID)
		DoUntil DSSPAARL1.IsEof
			ReadE DSSPAARL1 Key(RequestID) Access(*NoLock)
			If not DSSPAARL1.IsEof
				drApprovers = dtApprovers.NewRow()
				
				//Get Approver
				Chain From(DSSPAPRL1) Key(AARAID)
				If DSSPAPRL1.IsFound
					drApprovers.Item["Approver"]   = APRUSR
				Endif		
								
				drApprovers.Item["RequestID"]          = AARID
				drApprovers.Item["ApproverGroup"]      = AARAGP
				drApprovers.Item["ApprovalLevel"]      = AARLVL
				drApprovers.Item["ApprovalSubLevel"]   = AARSLV
				drApprovers.Item["Active"]             = AARACT
				drApprovers.Item["OverrideLowerLevel"] = AAROVR
				
				//Status Description
				Select
				When AARSTS = *Blank
					 drApprovers.Item["Status"] = "OutStanding"
					 
				When AARSTS = 'R'
					 drApprovers.Item["Status"] = "Rejected"
					 
				When AARSTS = 'A'
					 drApprovers.Item["Status"] = "Approved"
					 
				When AARSTS = 'O'
					 drApprovers.Item["Status"] = "Overridden"
					 
				When AARSTS = 'L'
					 drApprovers.Item["Status"] = "Overridden"
					 
				EndSL
								
				drApprovers.Item["CreateUser"]         = AARCRU
				drApprovers.Item["CreateDateTime"]     = CvtToDateTime(AARCRD,AARCRT)
				drApprovers.Item["ChangeUser"]         = AARCHU
				drApprovers.Item["ChangeDateTime"]     = CvtToDateTime(AARCHD,AARCHT)
				drApprovers.Item["RejectionReason"]    = AARREJ
				
				dtApprovers.Rows.Add(drApprovers)				
			Endif
		Enddo
				
		LeaveSR dtApprovers
	EndFunc
	
	BegFunc GetApprovalRequests Type(DataTable) Access(*Public)
		DclSrParm ApproveStatus Type(System.Windows.Forms.CheckedListBox)
		DclSrParm FromID        Type(Int32)
		DclSrParm ToID          Type(Int32)
		DclSrParm DisplayAll    Type(Boolean)		
		
		DclFld ApproverID   Type(Int16)
		DclFld UserID       Type(String)
		Dclfld QryString    Type(StringBuilder)
		DclFld ItemCount    Type(Int16)
		DclFld ApproversDR  Type(DataRow)
		DclFld ApproversTbl Type(DataTable)
		
		//Get Approver ID
		UserID = User.UserID.ToUpper()
		Open DSSPAPRL2
		Chain From(DSSPAPRL2) Key(UserID)
		If DSSPAPRL2.IsFound
			ApproverID = APRID
		EndIf
		Close DSSPAPRL2	
		
		QryString = *New StringBuilder()
		
		// Select approver
		QryString.Append("(AARAID = ")
		QryString.Append(ApproverID.ToString())
		
		// Select Approval Status
	    If ApproveStatus.CheckedItems.Count <> *Zero
			For Index(ItemCount = 0) To(ApproveStatus.CheckedItems.Count - 1)
				If ItemCount = *Zero
					If QryString.Length <> *Zero
						QryString.Append(") *And ")
					EndIf
				
					Select
					When ApproveStatus.CheckedItems[ItemCount].ToString() = "Outstanding" 
						 
						QryString.Append("(AARSTS = ' '")

					When ApproveStatus.CheckedItems[ItemCount].ToString() = "Approved"
						QryString.Append("(AARSTS = 'A'")

					When ApproveStatus.CheckedItems[ItemCount].ToString() = "Rejected"
						QryString.Append("(AARSTS = 'R'")

					EndSL
				Else
					Select
					When ApproveStatus.CheckedItems[ItemCount].ToString() = "Outstanding"
						QryString.Append(" *Or AARSTS = ' '")

					When ApproveStatus.CheckedItems[ItemCount].ToString() = "Approved"
						QryString.Append(" *Or AARSTS = 'A'")

					When ApproveStatus.CheckedItems[ItemCount].ToString() = "Rejected"
						QryString.Append(" *Or AARSTS = 'R'")

					EndSL
				EndIf
			EndFor
	    EndIf
	    
	    //Request ID Range
	    If FromID <> 0
			If QryString.Length <> *Zero
				QryString.Append(") *And ")
			EndIf
		
			QryString.Append("(AARID >= '")
			QryString.Append(FromID)
			QryString.Append("'  *And ")
			QryString.Append("AARID <= '")
			QryString.Append(ToID)
			QryString.Append("'")
	    Endif
	    
	    //Display All Flag
	    If DisplayAll = *False
	    
			If QryString.Length <> *Zero
				QryString.Append(") *And ")
			EndIf
			
			QryString.Append("(AARACT = 'Y'")
		Endif
	    
		// Close brackets
	    If QryString.Length <> *Zero
			QryString.Append(")")
		EndIf
				
		If DSSPAARL1.IsOpen
			Close DSSPAARL1
		EndIf
		
		DSSPAARL1.QrySelect = QryString.ToString()
		Open DSSPAARL1
		DSSPAARL1.QrySelect = String.Empty
		
		DoUntil DSSPAARL1.IsEof
			Read DSSPAARL1
			If Not DSSPAARL1.IsEof
			
				If ApproversTbl = *Nothing
					ApproversTbl = CreateApproversTbl()
				EndIf
				
				ApproversDR = ApproversTbl.NewRow()
				
				ApproversDR["RequestID"] = AARID
								
				Select
				When AARSTS = *Blank
					 ApproversDR["Status"] = "OutStanding"
				When AARSTS = 'R'
					 ApproversDR["Status"] = "Rejected"
				When AARSTS = 'A'
					 ApproversDR["Status"] = "Approved"
				When AARSTS = 'O'
					 ApproversDR["Status"] = "Overridden"	 
				When AARSTS = 'L'
					 ApproversDR["Status"] = "Overridden"		
				EndSL
				
				ApproversDR["ActiveFlag"] = AARACT
							
				ApproversTbl.Rows.Add(ApproversDR)
			EndIf
		EndDo
		
		Close DSSPAARL1
		LeaveSR ApproversTbl
	EndFunc
	
	BegFunc CreateApproversTbl Type(DataTable) Access(*Private)
	
		DclFld ApproversTbl Type(DataTable)
	
		ApproversTbl = *New DataTable("ApproversTbl")
		ApproversTbl.Columns.Add(*New DataColumn('RequestID',  *TypeOf(Int64)))
		ApproversTbl.Columns.Add(*New DataColumn('Status',     *TypeOf(String)))
		ApproversTbl.Columns.Add(*New DataColumn('ActiveFlag', *TypeOf(String)))
				
		LeaveSR ApproversTbl
	EndFunc

	BegFunc CvtToDateTime Type(DateTime) Access(*Private)
		DclSrParm IPDate Type(Int32)
		DclSrParm IPTime Type(Int32)
		
		DclFld DTstring   Type(String)
		DclFld ConvertedDateTime Type(DateTime)
		DclFld dtfi Type(System.Globalization.DateTimeFormatInfo)
		
		If IPDate = *Zero
			IPdate = 00010101
		EndIf
		
		DTstring = IPDate.ToString("0000/00/00") + ' ' + IPTime.ToString("00:00:00")
		
		dtfi = *New System.Globalization.DateTimeFormatInfo()
		ConvertedDateTime = DateTime.ParseExact(DTstring,"yyyy/MM/dd HH:mm:ss",dtfi)
		
		LeaveSR ConvertedDateTime
	EndFunc
	/EndRegion
EndClass