// ===============================================
// Tarnjit Bhambra
// 24 June 2009
// DSSPSHRDcls	
// Data Access Layer - Shipping Route Information
//------------------------------------------------
// Modification
//================================================

Using System
Using System.Text

BegClass DSSPSHRDcls Access(*Public)

	DclFld memRecords Type(*Integer4)

	DclDB Name(DB) DbName("TDST")
	DclDiskFile Name(DSSPSHRD) Type(*Update) Org(*Indexed) ImpOpen(*No) DB(DB) AddRec(*Yes) RnmFmt(DSSPSDR:R_DSSPSDR)
	DclDiskFile Name(DSSPSHRJ) Type(*Input) Org(*Indexed) ImpOpen(*No) DB(DB) AddRec(*No) RnmFmt(rDSSPSHRJ:R_rDSSPSHRDJ) netBlockFactor(*Calc)
	
	DclMemoryFile Name(mDSSPSHRJ) DBdesc(DB) Filedesc('DSSPSHRJ') RnmFmt(RDSSPSHRJ, mRDSSPSHRJ) ImpOpen(*No)
	
	BegConstructor Access(*Public)
		DclSrParm DB Type(ASNA.VisualRPG.Runtime.Database)
		
		*this.DB = DB
	EndConstructor
	
	BegConstructor Access(*Public)
		DclSrParm DB    Type(ASNA.VisualRPG.Runtime.Database)
		DclSrParm ShippingRoute Type(*Zoned) Len(5,0)
		
		*this.DB = DB
		
		GetShippingRoute(ShippingRoute)
	EndConstructor
	
	//Properties
	BegProp Shipping_Route Type(*Zoned) Len(5,0) Access(*Public)
		BegGet
			LeaveSR SDRRID
		EndGet
	EndProp
	
	BegProp Route_Of_Departure Type(*Char) Len(10) Access(*Public)
		BegGet
			LeaveSR SHRPDP
		EndGet
		
		BegSet
			SHRPDP = *PropVal
		EndSet
	EndProp
	
	BegProp Route_Of_Departure_Desc Type(*Char) Len(30) Access(*Public)
		BegGet
			LeaveSR SHRPDD 
		EndGet
		
		BegSet
			SHRPDD  = *PropVal
		EndSet
	EndProp
	
	BegProp Route_Of_Entry Type(*Char) Len(10) Access(*Public)
		BegGet
			LeaveSR SHRPEN
		EndGet
		
		BegSet
			SHRPEN = *PropVal
		EndSet
	EndProp
	
	BegProp Route_Of_Entry_Desc Type(*Char) Len(30) Access(*Public)
		BegGet
			LeaveSR SHRPED 
		EndGet
		
		BegSet
			SHRPED  = *PropVal
		EndSet
	EndProp
	
	BegProp From_Date Type(*Date) Access(*Public)
		BegGet
			LeaveSR SDRFRD 
		EndGet
		
		BegSet
			SDRFRD  = *PropVal
		EndSet
	EndProp
		
	BegProp To_Date Type(*Date) Access(*Public)
		BegGet
			LeaveSR SDRTOD 
		EndGet
		
		BegSet
			SDRTOD  = *PropVal
		EndSet
	EndProp
	
	BegProp Monday_Sailing Type(*Char) Len(1) Access(*Public)
		BegGet
			LeaveSR SDRMON
		EndGet
		
		BegSet
			SDRMON  = *PropVal
		EndSet
	EndProp
	
	BegProp Tuesday_Sailing Type(*Char) Len(1) Access(*Public)
		BegGet
			LeaveSR SDRTUE
		EndGet
		
		BegSet
			SDRTUE  = *PropVal
		EndSet
	EndProp
	
	BegProp Wednesday_Sailing Type(*Char) Len(1) Access(*Public)
		BegGet
			LeaveSR SDRWED
		EndGet
		
		BegSet
			SDRWED  = *PropVal
		EndSet
	EndProp
	
	BegProp Thursday_Sailing Type(*Char) Len(1) Access(*Public)
		BegGet
			LeaveSR SDRTHU
		EndGet
		
		BegSet
			SDRTHU  = *PropVal
		EndSet
	EndProp
	
	BegProp Friday_Sailing Type(*Char) Len(1) Access(*Public)
		BegGet
			LeaveSR SDRFRI
		EndGet
		
		BegSet
			SDRFRI  = *PropVal
		EndSet
	EndProp
	
	BegProp Saturday_Sailing Type(*Char) Len(1) Access(*Public)
		BegGet
			LeaveSR SDRSAT
		EndGet
		
		BegSet
			SDRSAT  = *PropVal
		EndSet
	EndProp
	
	BegProp Sunday_Sailing Type(*Char) Len(1) Access(*Public)
		BegGet
			LeaveSR SDRSUN
		EndGet
		
		BegSet
			SDRSUN  = *PropVal
		EndSet
	EndProp
	
	BegProp Sailing_Days Type(*Zoned) Len(3,0) Access(*Public)
		BegGet
			LeaveSR SDRSLD
		EndGet
		
		BegSet
			SDRSLD  = *PropVal
		EndSet
	EndProp
	
	BegProp DataSet_Record_Count Type(*Integer4) Access(*Public)
		BegGet
			LeaveSR memRecords
		EndGet
	EndProp
	
	
	// Methods
	BegFunc GetShippingRoute Type(*Boolean) Access(*Public)
		DclSrParm ShippingRoute Type(*Zoned) Len(5,0)
		
		If Not DSSPSHRD.IsOpen
			Open DSSPSHRD
		EndIf
		
		Chain From(DSSPSHRD) Key(ShippingRoute) Access(*NoLock)
		If %Found
			LeaveSR *Off
		Else
			LeaveSR *On
		EndIf
	EndFunc
	
	BegFunc GetShippingRouteForUpdate Type(*Boolean) Access(*Public)
		DclSrParm ShippingRoute Type(*Zoned) Len(5,0)
		
		If Not DSSPSHRD.IsOpen
			Open DSSPSHRD
		EndIf
		
		Chain From(DSSPSHRD) Key(ShippingRoute) Access(*DFT) Err(*Extended)
		If not %Found
			LeaveSR *On
		EndIf
		
		If %Error = *On
			Throw *New System.Exception('Failed to get record for update (DSSPSHRD)')
			LeaveSR *On
		EndIf
		
		LeaveSR *Off
	EndFunc
	
	BegSR WriteShippingRoute Access(*Public)
		DclSrParm ShippingRoute Type(*Zoned) Len(5,0)
	
		If Not DSSPSHRD.IsOpen
			Open DSSPSHRD
		EndIf
		
		SDRRID = ShippingRoute
		
		Write R_DSSPSDR Err(*Extended)
		If %Error = *On
			Throw *New System.Exception('Failed to write record (DSSPSHRD)')
		EndIf
		
		LeaveSR
	EndSR
	
	BegFunc UpdateShippingRoute Type(*Boolean) Access(*Public) 
		DclSrParm ShippingRoute Type(*Zoned) Len(5,0)
		
		Update R_DSSPSDR Err(*Extended)
		If %Error = *On
			Throw *New System.Exception('Failed to update record (DSSPSHRD)')
			LeaveSR *True
		EndIf
		
		LeaveSR *Off
	EndFunc
	
	BegFunc DeleteShippingRoute Type(*Boolean) Access(*Public)
		DclSrParm ShippingRoute Type(*Zoned) Len(5,0)
		
		If Not DSSPSHRD.IsOpen
			Open DSSPSHRD
		EndIf
		
		Delete From(R_DSSPSDR) Key(ShippingRoute) Err(*Extended)
		If %Error = *On
			LeaveSR *True
		EndIf
		
		LeaveSR *False
	EndFunc

	/region Memory files
	
	BegFunc setMemDSSPSHRJ Type(*Boolean) Access(*Public)
	
		If Not DSSPSHRJ.IsOpen
			Open DSSPSHRJ
		EndIf
	
	 	If Not mDSSPSHRJ.IsOpen
	 		Open mDSSPSHRJ
		Endif	
		
		mDSSPSHRJ.DataSet.Clear()
		memRecords = *Zero
	
		SetLL DSSPSHRJ key(*Start)
		DoUntil DSSPSHRJ.IsEof
			Read DSSPSHRJ Access(*NoLock)
			If (Not DSSPSHRJ.IsEof)
			   Write mDSSPSHRJ
			   memRecords += 1
		    Endif
		Enddo
	    
	    Close DSSPSHRJ
	
		LeaveSR *True
	
	EndFunc	
	
	BegFunc ReadDSSPSHRJ Type(*Boolean) Access(*Public)
		DclSrParm wIdx Type(*Integer2)
		
		If wIdx > memRecords 
		   LeaveSR *True
		Endif   
		
		Chain mDSSPSHRJ key(wIdx)
		If mDSSPSHRJ.IsEof
		   Unlock mDSSPSHRJ
		   LeaveSR *True
		Endif
		
		LeaveSR *false   
	
	EndFunc
	
	/endregion

EndClass
