// ===============================================
// Tarnjit Bhambra
// 08 April 2009
// DSSPSGDcls	
// Data Access Layer - Size group Detail File
//------------------------------------------------
// Modification
//================================================


//================================================

Using System
Using System.Text
Using System.Data
Using System.Collections

BegClass DSSPSGDcls Access(*Public)

	
	DclDB Name(DB) DbName("TDST")
	DclDiskFile Name(DSSPSGD)    Type(*Output)		         ImpOpen(*No) DB(DB)              RnmFmt(RDSSPSGD:R_RDSSPSGD)  
	DclDiskFile Name(DSSPSGDL01) Type(*Update) Org(*Indexed) ImpOpen(*No) DB(DB) AddRec(*Yes) RnmFmt(RDSSPSGD:R_RDSSPSGD1)
	DclDiskFile Name(DSSPSGDL02) Type(*Input)  Org(*Indexed) ImpOpen(*No) DB(DB) AddRec(*No)  RnmFmt(RDSSPSGD:R_RDSSPSGD2) NetBlockFactor(*Calc)
	
	
	BegConstructor Access(*Public)
		DclSrParm DB Type(ASNA.VisualRPG.Runtime.Database)
		
		*this.DB = DB
	EndConstructor
	
	BegConstructor Access(*Public)
		DclSrParm DB    Type(ASNA.VisualRPG.Runtime.Database)
		DclSrParm SizeGroupID Type(*Zoned) Len(4,0)
		
		*this.DB = DB
		
		GetSizeGroupID(SizeGroupID)
	EndConstructor
	
		
	//Properties
	BegProp Size_Group_ID Type(*Zoned) Len(4,0) Access(*Public)
		BegGet
			LeaveSR SGDSGC
		EndGet
	EndProp
	
	BegProp Size_Code Type(*Zoned) Len(4,0) Access(*Public)
		BegGet
			LeaveSR SGDSIZ
		EndGet
		
		BegSet
			SGDSIZ = *PropVal
		EndSet
	EndProp
	
	BegProp Default_Code Type(*Char) Len(1) Access(*Public)
		BegGet
			LeaveSR SGDDYN
		EndGet
		
		BegSet
			SGDDYN = *PropVal
		EndSet
	EndProp
	
	BegProp Create_Date Type(*Zoned ) Len(8,0) Access(*Public)
		BegGet
			LeaveSR SGDCRD
		EndGet
		
		BegSet
			SGDCRD = *PropVal
		EndSet
	EndProp
	
	BegProp Create_Time Type(*Zoned ) Len(6,0) Access(*Public)
		BegGet
			LeaveSR SGDCRT
		EndGet
		
		BegSet
			SGDCRT = *PropVal
		EndSet
	EndProp
	
	
	BegProp Create_User Type(*Char ) len(10) Access(*Public)
		BegGet
			LeaveSR SGDCRU
		EndGet
		
		BegSet
			SGDCRU = *PropVal
		EndSet
	EndProp
	
	
	BegProp Changed_Date Type(*Zoned ) Len(8,0) Access(*Public)
		BegGet
			LeaveSR SGDCHD
		EndGet
		
		BegSet
			SGDCHD = *PropVal
		EndSet
	EndProp
	
	BegProp Changed_Time Type(*Zoned ) Len(6,0) Access(*Public)
		BegGet
			LeaveSR SGDCHT 
		EndGet
		
		BegSet
			SGDCHT  = *PropVal
		EndSet
	EndProp
	
	BegProp Changed_User Type(*Char ) len(10) Access(*Public)
		BegGet
			LeaveSR SGDCHU 
		EndGet
		
		BegSet
			SGDCHU = *PropVal
		EndSet
	EndProp
	
		
	// Methods
	BegFunc GetSizeGroupID Type(*Boolean) Access(*Public)
		DclSrParm SizeGroupID Type(*Zoned) len(4,0)
		
		If Not DSSPSGDL01.IsOpen
			Open DSSPSGDL01
		EndIf
		
		Chain From(DSSPSGDL01) Key(SizeGroupID) Access(*NoLock)
		If %Found
			LeaveSR *Off
		Else
			LeaveSR *On
		EndIf
	EndFunc
	
	BegFunc GetSizeGroupIDForUpdate Type(*Boolean) Access(*Public)
		DclSrParm SizeGroupID Type(*Zoned) Len(4,0)
		DclSrparm SizeCode	  Type(*Zoned) Len(4,0)	
		
		If Not DSSPSGDL01.IsOpen
			Open DSSPSGDL01
		EndIf
		
		Chain From(DSSPSGDL01) Key(SizeGroupID, SizeCode) Access(*DFT) Err(*Extended)
		If Not %Found
			LeaveSR *On
		EndIf
		
		If %Error = *On
			Throw *New System.Exception('Failed to get record for update (DSSPSGDL01)')
			LeaveSR *On
		EndIf
		
		LeaveSR *Off
	EndFunc
		
	//Writes new records. 	
	BegFunc WriteSizeGroupRecord Type(*Boolean)	Access(*Public)
		DclSrParm Size_GroupID		Type(*Zoned)	    Len(4,0)
		DclSrParm DataView  		Type(DataView)
			
		DclFld DataView			    Type(DataView)
		DclFld Data_Row_View	    Type(DataRowView)
						
		//Open the files if not already done so.
		If Not DSSPSGD.IsOpen
			Open DSSPSGD
		EndIf
		
			Create_Date = %Date
			Create_Time = %Time
			Create_User = db.User().toUpper()
					
		//Read through the Dataview table to determine Select and Default counts
		ForEach Data_Row_View Collection(DataView) Type(DataRowView)
		
						
			If Data_Row_View.Item["clmDefault"] *as *Boolean = *True
				SGDDYN = 'Y'
			Else		
				SGDDYN = *Blanks
			Endif
				
			Size_Code = Data_Row_View.Item["clmSSIZ"] *as Int32
		
				
			//Set new record data		
			
			SGDSGC      = Size_GroupID
	    
			//Write the record
			Write R_RDSSPSGD Err(*Extended)
			If %Error = *On
				Throw *New System.Exception('Failed to write record (DSSPSGD)')
			EndIf
			
		EndFor
		
 		LeaveSR *False
	EndFunc
	
	//Writes new record Single. 	
	BegFunc WriteSizeGroupRecordSingle Type(*Boolean) Access(*Public)
		DclSrParm Size_GroupID		Type(*Zoned)	    Len(4,0)
		DclSrparm SizeCode		    Type(*Zoned)		Len(4,0)
		DclSrparm Default_Column    Type(*Char)		    Len(1)
			
								
		//Open the files if not already done so.
		If Not DSSPSGDL01.IsOpen
			Open DSSPSGDL01
		EndIf
		
			Create_Date = %Date
			Create_Time = %Time
			Create_User = db.User().toUpper()
						
			SGDSGC      = Size_GroupID
			SGDSIZ		= SizeCode
			SGDDYN		= Default_Column
	    
		//Write the record
		Write R_RDSSPSGD1 Err(*Extended)
			If %Error = *On
				Throw *New System.Exception('Failed to write record (DSSPSGD)')
			EndIf
			
 		LeaveSR *False
	EndFunc
		
	BegFunc UpdateSizeGroupID Type(*Boolean) Access(*Public) 
		DclSrParm Default_Column Type(*Char) Len(1)
				
		SGDDYN = Default_Column
		SGDCHD = %Date
		SGDCHT = %Time
		SGDCHU = db.User().toUpper()
				
		Update R_RDSSPSGD1 Err(*Extended)
		If %Error = *On
			Throw *New System.Exception('Failed to update record (DSSPSGDL01)')
			LeaveSR *True
		EndIf
		
		LeaveSR *Off
	EndFunc
	
	BegFunc DeleteSizeGroupID Type(*Boolean) Access(*Public)
		DclSrParm SizeGroupID Type(*Zoned) len(4,0)
		
		If Not DSSPSGDL01.IsOpen
			Open DSSPSGDL01
		EndIf
				
		DoUntil Not DSSPSGDL01.IsFound
			 Delete From(R_RDSSPSGD1) Key(SizeGroupID) Err(*Extended)
		Enddo
		
		LeaveSR *False
	EndFunc
	
	BegFunc DeleteSizeGroupIDSingle Type(*Boolean) Access(*Public)
		DclSrParm SizeGroupID Type(*Zoned) len(4,0)
		DclSrparm SizeCode	  Type(*Zoned) Len(4,0)
		
		If Not DSSPSGDL01.IsOpen
			Open DSSPSGDL01
		EndIf
				
		Delete From(R_RDSSPSGD1) Key(SizeGroupID,SizeCode) Err(*Extended)
				
		LeaveSR *False
	EndFunc
	
	//Creates a DataSet/DataTable accessed by Size Group ID.
	BegFunc GetSizeGroupIDDataSet Type(DataTable) Access(*Public)
		DclSrParm SizeGroupID Type(*Zoned) len(4,0)
	
		DclFld dt Type( DataTable ) New()
		DclFld dc Type( DataColumn ) 
		DclFld dr Type( DataRow )
												
		If Not DSSPSGDL02.IsOpen
			Open DSSPSGDL02
		EndIf
		
		//Create Size Group ID Column
		dc = *New DataColumn( 'clmSGDSGC' )
		dc.DataType = System.Type.GetType("System.Int32")
		dc.ColumnName = "clmSGdSGc"
		dc.Caption = "Size Group ID"
		dt.Columns.Add(dc)
		
		//Create Size Column
		dc = *New DataColumn( 'clmSGDSIZ' )
		dc.DataType = System.Type.GetType("System.Int32")
		dc.ColumnName = "clmSGDSIZ"
		dc.Caption = "Size"
		dt.Columns.Add(dc)
				
		//Create Defaults Column
		dc = *New DataColumn( 'clmSGDDYN' )
		dc.DataType = System.Type.GetType("System.String")
		dc.ColumnName = "clmSGDDYN"
		dc.Caption = "Defaults Flag"
		dt.Columns.Add(dc)
				
		//Read file by Key and create rows in DataTable				
		Setll DSSPSGDL02 Key(SizeGroupID)
		DoUntil DSSPSGDL02.IsEof
			ReadE DSSPSGDL02 Key(SizeGroupID)
			If not DSSPSGDL02.IsEof
				dr = dt.NewRow()
				dr.Item[0] = SGDSGC
				dr.Item[1] = SGDSIZ
				dr.Item[2] = SGDDYN
								
				dt.Rows.Add( dr )
			Endif
		Enddo
		
		LeaveSR dt
	EndFunc
	
	//Update/Delete/Write DSSPSGD Records
	BegFunc Upd_Dlt_Wrt_SizeGroupRecord	Type(*Boolean)	Access(*Public)
		DclSrParm Size_GroupID			Type(*Zoned)	Len(4,0)
		DclSrParm DataView_Grid			Type(DataView)
		DclSrParm SizeGroupDesc			Type(*Char)     Len(50)
		DclSrParm ClassCodeNum			Type(*Zoned)    Len(4,0)
				
		DclFld DataView_Grid			Type(DataView)
		DclFld Data_Row_View			Type(DataRowView)
		DclFld Default_Column			Type(*String)
		DclFld Check_Failure			Type(*Boolean)
		DclFld Name(DSSPSGHcls)			Type(DSSPSGHcls)
								
		//Open the files if not already done so.
		If Not DSSPSGDL01.IsOpen
			Open DSSPSGDL01
		EndIf
		
		If  DSSPSGHcls = *Nothing
			DSSPSGHcls = *New DSSPSGHcls(DB) 
		Endif
		
		//Remove all records and rebuild
		Setll DSSPSGDL01 Key(Size_GroupID)
		DoUntil DSSPSGDL01.IsEof
			ReadE DSSPSGDL01 Key(Size_GroupID)
				If not DSSPSGDL01.IsEof
					 Delete From(R_RDSSPSGD1) Key(Size_GroupID) Err(*Extended)
				Endif
		Enddo	
											
		//Read through the Dataview_Grid table Checking the DSSPSGD table
		ForEach Data_Row_View Collection(DataView_Grid) Type(DataRowView)
		    
		    //Convert Size_Code Column   
	        Size_Code = Data_Row_View.Item["clmSSIZ"] *As Int32
	        	        
	        //Two When statements performing three tests.
	        //1. If the row has been selected and the data has changed Perform an Update
	        //2. If the row has been selected but the record has not been found in the DB Perform a Write
	              	                  	        	
 			Select
				When Data_Row_View.Item["clmSelect"].ToString()    = 'True' 
					If Data_Row_View.Item["clmDefault"].ToString() = 'True'
						Default_Column = 'Y'
					Else
						Default_Column = ' '
					Endif
					
					//Update
					Chain From(DSSPSGDL01) Key(Size_GroupID,Size_Code) 
						If DSSPSGDL01.IsFound and Default_Column <> SGDDYN
							Check_Failure = *This.GetSizeGroupIDForUpdate(Size_GroupID, Size_Code)
							If Check_Failure = *Off
								*This.UpdateSizeGroupID(Default_Column)
							Endif
						Endif
						
						//Write
						If Not DSSPSGDL01.IsFound
						   *This.WriteSizeGroupRecordSingle(Size_GroupID, Size_Code, Default_Column) 	
						Endif
			EndSL
		
		EndFor
		
		//Update the Header Record
		Check_failure = DSSPSGHcls.GetSizeGroupIDForUpdate(ClassCodeNum, Size_GroupID)
		If Check_Failure = *Off
			DSSPSGHcls.UpdateClassSizeGroupIDCounts(Size_GroupID, SizeGroupDesc)
		Endif
		
 		LeaveSR *False
	EndFunc
EndClass
