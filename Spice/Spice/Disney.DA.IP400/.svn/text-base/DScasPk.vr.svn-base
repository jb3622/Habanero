Using System
Using System.Data
Using System.IO
Using System.Text

BegClass DScasPk Access(*Public)

	DclDB Name(PgmDB) DbName("TDST")
	DclDiskFile Name(DSCASPK) Type(*Input) Org(*Indexed) ImpOpen(*No) DB(PgmDB)

	DclFld CasePackTbl Type(DataTable)
	
	DclFld pCasePackCode Type(String)
	DclFld pDescription  Type(String)
	DclFld pHeight       Type(Decimal)
	DclFld pWidth        Type(Decimal)
	DclFld pLength       Type(Decimal)
	DclFld pWeight       Type(Decimal)
	DclFld pOverride     Type(String)
	DclFld pXMLpath      Type(String)
			
	BegConstructor Access(*Public)
		DclSrParm PgmDB Type(ASNA.VisualRPG.Runtime.Database)
		DclSrParm Environment Type(Disney.Menu.Environments)
	
		*this.PgmDB = PgmDB
		
		pXMLpath = Path.Combine(Environment.PathToApplicationXML,"DScasePack.xml")
		LoadDataTableFromXML()	
	EndConstructor

	/Region Properties
	BegProp CasePackCode Type(String) Access(*Public)
		BegGet
			LeaveSR pCasePackCode
		EndGet
	EndProp
	
	BegProp Description Type(String) Access(*Public)
		BegGet
			LeaveSR pDescription
		EndGet
	EndProp
	
	BegProp Height Type(Decimal) Access(*Public)
		BegGet
			LeaveSR pHeight
		EndGet
	EndProp
	
	BegProp Width Type(Decimal) Access(*Public)
		BegGet
			LeaveSR pWidth
		EndGet
	EndProp
	
	BegProp Length Type(Decimal) Access(*Public)
		BegGet
			LeaveSR pLength
		EndGet
	EndProp
	
	BegProp Weight Type(Decimal) Access(*Public)
		BegGet
			LeaveSR pWeight
		EndGet
	EndProp

	BegProp Overrideable Type(String) Access(*Public)
		BegGet
			LeaveSR pOverride
		EndGet
	Endprop
	/EndRegion

	BegSR LoadDataTableFromXML Access(*Private)
			
		If CasePackTbl = *Nothing
			CreateTbl()
			If Not File.Exists(pXMLpath)
				CreateCasePackXML()
			Else
				CasePackTbl.ReadXml(pXMLpath)
			EndIf
		EndIf
	EndSR
	
	BegSr CreateTbl Access(*Private)
	
		DclArray Keys Type(DataColumn) Rank(1)
		
		CasePackTbl = *New DataTable("CasePack")

		CasePackTbl.Columns.Add(*New DataColumn("CasePackCode", *TypeOf(String)))
		CasePackTbl.Columns["CasePackCode"].ReadOnly = *True

		CasePackTbl.Columns.Add(*New DataColumn("Description", *TypeOf(String)))
		CasePackTbl.Columns["Description"].ReadOnly = *True

		CasePackTbl.Columns.Add(*New DataColumn("PackCodeDescription", *TypeOf(String)))
		CasePackTbl.Columns["PackCodeDescription"].Expression = "CasePackCode + ' - ' + Description"
		CasePackTbl.Columns["PackCodeDescription"].ReadOnly = *True
		
		CasePackTbl.Columns.Add(*New DataColumn("PackHeight", *TypeOf(Decimal)))
		CasePackTbl.Columns["PackHeight"].ReadOnly = *True
		
		CasePackTbl.Columns.Add(*New DataColumn("PackWidth", *TypeOf(Decimal)))
		CasePackTbl.Columns["PackWidth"].ReadOnly = *True
		
		CasePackTbl.Columns.Add(*New DataColumn("PackLength", *TypeOf(Decimal)))
		CasePackTbl.Columns["PackLength"].ReadOnly = *True		
		
		CasePackTbl.Columns.Add(*New DataColumn("PackWeight", *TypeOf(Decimal)))
		CasePackTbl.Columns["PackWeight"].ReadOnly = *True		
		
		CasePackTbl.Columns.Add(*New DataColumn("PackOverrideable", *TypeOf(String)))
		CasePackTbl.Columns["PackOverrideable"].ReadOnly = *True		
		
		Keys = *New DataColumn[] {CasePackTbl.Columns("CasePackCode")}
		CasePackTbl.PrimaryKey = Keys
	EndSr
	
	BegSr CreateCasePackXML Access(*Private)
	
		DclFld dr Type(DataRow)
		
		If Not DSCASPK.IsOpen
			Open DSCASPK
		EndIf
		
		DoUntil DSCASPK.IsEof
			Read DSCASPK
			If Not DSCASPK.IsEof And CACTIV = "Y"
				dr = CasePackTbl.NewRow()
				
				dr.Item["CasePackCode"] = CACOD.Trim()
				dr.Item["Description"]  = CADES.Trim()
				dr.Item("PackHeight")   = CACPHT
				dr.Item("PackWidth")    = CACPWI
				dr.Item("PackLength")   = CACPLN
				dr.Item("PackWeight")   = CACPWG
				dr.Item("PackOverrideable") = CAOVER.Trim()

				CasePackTbl.Rows.Add(dr)
			EndIf
		EndDo
		
		CasePackTbl.WriteXml(pXMLpath)
		
		Close DSCASPK
	EndSr
	
	BegFunc GetCasePackTbl Type(DataTable) Access(*Public)
		
		LeaveSR CasePackTbl
	EndFunc
	
	BegFunc GetCasePackDetails Type(*Boolean) Access(*Public)
		DclSrParm CasePack Type(String)
		
		DclFld dr Type(DataRow)
		
		dr = CasePackTbl.Rows.Find(CasePack)
		If dr <> *Nothing

			pCasePackCode = dr.Item["CasePackCode"] *As String
			pDescription  = dr.Item["Description"]  *As String
			pHeight       = dr.Item("PackHeight")   *As Decimal
			pWidth        = dr.Item("PackWidth")    *As Decimal
			pLength       = dr.Item("PackLength")   *As Decimal
			pWeight       = dr.Item("PackWeight")   *As Decimal
			pOverride     = dr.Item("Overrideable") *As String
				
			LeaveSR *True
		Else
			LeaveSR *False
		EndIf
	EndFunc
EndClass