Using System
Using System.Data
Using System.Text
Using System.IO
Using System.Xml

BegClass DSSBCLScls Access(*Public)
		
	DclDB Name(PgmDB) DbName("TDST")
	DclDiskFile Name(DSSBCLSJ) Type(*Input) Org(*Indexed) ImpOpen(*No) DB(PgmDB) RnmFmt(RDSSBCLSJ)
	
	DclFld SubClassTbl   Type(DataTable) Access(*Private)
	DclFld pSubClassCode Type(String)    Access(*Private)
	DclFld pDescription  Type(String)    Access(*Private)
	DclFld pClassCode    Type(Int16)     Access(*Private)
	DclFld pStatus       Type(Boolean)   Access(*Private)
	DclFld pXMLpath      Type(String)    Access(*Private)
			
	BegConstructor Access(*Public)
		DclSrParm PgmDB       Type(ASNA.VisualRPG.Runtime.Database)
		DclSrParm Environment Type(Disney.Menu.Environments)
		
		*this.PgmDB = PgmDB
		
		pXMLpath = Path.Combine(Environment.PathToApplicationXML,"SubClass.xml")
		LoadDataTableFromXML()
	EndConstructor
	
	/Region Properties
	BegProp SubClassCode Type(String) Access(*Public)
		BegGet
			LeaveSR pSubClassCode
		EndGet
	EndProp
	
	BegProp SubClassDescription Type(String) Access(*Public)
		BegGet
			LeaveSR pDescription
		EndGet
	EndProp
	
	BegProp ClassCode Type(Int16) Access(*Public)
		BegGet
			LeaveSR pClassCode
		EndGet
	EndProp
	
	BegProp Status Type(Boolean) Access(*Public)
		BegGet
			LeaveSR pStatus
		EndGet
	EndProp
	/EndRegion
	
	BegSr LoadDataTableFromXML Access(*Private)
			
		If SubClassTbl = *Nothing
			CreateTbl()
			If Not File.Exists(pXMLpath)
				PopulateDataTable()
			Else
				SubClassTbl.ReadXml(pXMLpath)
			EndIf
		EndIf
	EndSr
	
	BegSr CreateTbl Access(*Private)
	
		SubClassTbl = *New DataTable("SubClass")

		SubClassTbl.Columns.Add(*New DataColumn("SubClassCode", *TypeOf(String)))
		SubClassTbl.Columns["SubClassCode"].ReadOnly = *True

		SubClassTbl.Columns.Add(*New DataColumn("Description", *TypeOf(String)))
		SubClassTbl.Columns["Description"].ReadOnly = *True
		
		SubClassTbl.Columns.Add(*New DataColumn("ClassCode", *TypeOf(Int16)))
		SubClassTbl.Columns["ClassCode"].ReadOnly = *True
		
		SubClassTbl.Columns.Add(*New DataColumn("Status", *TypeOf(Boolean)))
		SubClassTbl.Columns["Status"].ReadOnly = *True
	EndSr
	
	BegSr PopulateDataTable Access(*Private)
	
		DclFld dr Type(DataRow)
		
		If Not DSSBCLSJ.IsOpen
			Open DSSBCLSJ
		EndIf
		
		DoUntil DSSBCLSJ.IsEof
			Read DSSBCLSJ
			If Not DSSBCLSJ.IsEof
				dr = SubClassTbl.NewRow()
				
				dr.Item("SubClassCode") = MSSBCL
				dr.Item["Description"]  = SCDESC.Trim()
				dr.Item["ClassCode"]    = MSCLS
				
				If MSSTS.Equals('Y')
					dr.Item["Status"] = *true
				Else
					dr.Item["Status"] = *False
				EndIf
				
				SubClassTbl.Rows.Add(dr)
			EndIf
		EndDo
		
		SubClassTbl.WriteXml(pXMLpath)
		Close DSSBCLSJ
	EndSr
	
	BegFunc GetSubclassCode Type(*Boolean) Access(*Public)
		DclSrParm ClassCode    Type(Int16)
		DclSrParm SubClassCode Type(String)
		
		DclFld dv Type(DataView)
		
		dv = *New DataView(SubClassTbl)
		dv.RowFilter = "ClassCode = " + ClassCode.ToString() + " and SubClassCode = '" + SubClassCode + "'"
		If dv.Count > 0
			ForEach dvr Collection(dv) Type(DataRowView)
				pSubClassCode = dvr.Item("SubClassCode") *As String
				pDescription  = dvr.Item("Description")  *As String
				pClassCode    = dvr.Item("ClassCode")    *As Int16
				pStatus       = dvr.item["Status"]       *As Boolean
				
				LeaveSR *True
			EndFor
		Else
			LeaveSR *False
		EndIf
	EndFunc
	
	BegFunc GetSubClassTbl Type(DataTable) Access(*Public)
		
		LeaveSR SubClassTbl
	EndFunc
EndClass