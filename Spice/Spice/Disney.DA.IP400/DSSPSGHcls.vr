// ===============================================
// Tarnjit Bhambra
// 08 April 2009
// DSSPSGHcls	
// Data Access Layer - Size group Header File
//------------------------------------------------
// Modification
//================================================

Using System
Using System.Text
Using System.Data
Using System.Collections

BegClass DSSPSGHcls Access(*Public)

	DclDB Name(DB) DbName("TDST")
	DclDiskFile Name(DSSPSGHL01) Type(*Update) Org(*Indexed) ImpOpen(*No) DB(DB) AddRec(*Yes) RnmFmt(RDSSPSGH:R_RDSSPSGH)
	DclDiskFile Name(DSSPSGHL03) Type(*Input)  Org(*Indexed) ImpOpen(*No) DB(DB)  RnmFmt(RDSSPSGH:R_RDSSPSGH3) NetBlockFactor(*Calc)
	DclDiskFile Name(DSSPSGHL04) Type(*Input)  Org(*Indexed) ImpOpen(*No) DB(DB)  RnmFmt(RDSSPSGH:R_RDSSPSGH4) NetBlockFactor(*Calc)
	DclDiskFile Name(DSSPSGHL05) Type(*Input)  Org(*Indexed) ImpOpen(*No) DB(DB)  RnmFmt(RDSSPSGH:R_RDSSPSGH5) NetBlockFactor(*Calc)
	DclDiskFile Name(DSSPSGDL02) Type(*Input)  Org(*Indexed) ImpOpen(*No) DB(DB)  RnmFmt(RDSSPSGD:R_RDSSPSGD2) NetBlockFactor(*Calc)
		
	BegConstructor Access(*Public)
		DclSrParm DB Type(ASNA.VisualRPG.Runtime.Database)
		
		*this.DB = DB
	EndConstructor
	
	BegConstructor Access(*Public)
		DclSrParm DB    Type(ASNA.VisualRPG.Runtime.Database)
		DclSrParm ClassID     Type(*Zoned) len(4,0)
		
		*this.DB = DB
		
		GetSizeGroupID(ClassID)
	EndConstructor
	
	BegConstructor Access(*Public)
		DclSrParm DB    Type(ASNA.VisualRPG.Runtime.Database)
		DclSrParm ClassID     Type(*Zoned) len(4,0)
		DclSrParm SizeGroupID Type(*Zoned) Len(4,0)
		
		*this.DB = DB
		
		GetSizeGroupID(ClassID,SizeGroupID)
	EndConstructor
	
	/Region Properties
	BegProp Class_ID Type(*Zoned) Len(4,0) Access(*Public)
		BegGet
			LeaveSR SGHCLS
		EndGet
	EndProp
	
	BegProp Size_Group_ID Type(*Zoned) Len(4,0) Access(*Public)
		BegGet
			LeaveSR SGHSGC
		EndGet
		
		BegSet
			SGHSGC = *PropVal
		EndSet
	EndProp
	
	BegProp Size_Group_Header_Desc Type(*Char) Len(50) Access(*Public)
		BegGet
			LeaveSR SGHSGD
		EndGet
		
		BegSet
			SGHSGD = *PropVal
		EndSet
	EndProp
	
	BegProp Number_Of_Sizes Type(*Zoned) Len(3,0) Access(*Public)
		BegGet
			LeaveSR SGH#SZ
		EndGet
		
		BegSet
			SGH#SZ = *PropVal
		EndSet
	EndProp
	
	BegProp Number_Of_Defaults Type(*Zoned) Len(3,0) Access(*Public)
		BegGet
			LeaveSR SGH#DF
		EndGet
		
		BegSet
			SGH#DF = *PropVal
		EndSet
	EndProp
	
	BegProp Create_Date Type(*Zoned ) Len(8,0) Access(*Public)
		BegGet
			LeaveSR SGHCRD
		EndGet
		
		BegSet
			SGHCRD = *PropVal
		EndSet
	EndProp
	
	BegProp Create_Time Type(*Zoned ) Len(6,0) Access(*Public)
		BegGet
			LeaveSR SGHCRT
		EndGet
		
		BegSet
			SGHCRT = *PropVal
		EndSet
	EndProp
	
	BegProp Create_User Type(*Char ) len(10) Access(*Public)
		BegGet
			LeaveSR SGHCRU
		EndGet
		
		BegSet
			SGHCRU = *PropVal
		EndSet
	EndProp
	
	
	BegProp Changed_Date Type(*Zoned ) Len(8,0) Access(*Public)
		BegGet
			LeaveSR SGHCHD
		EndGet
		
		BegSet
			SGHCHD = *PropVal
		EndSet
	EndProp
	
	BegProp Changed_Time Type(*Zoned ) Len(6,0) Access(*Public)
		BegGet
			LeaveSR SGHCHT 
		EndGet
		
		BegSet
			SGHCHT  = *PropVal
		EndSet
	EndProp
	
	BegProp Changed_User Type(*Char ) len(10) Access(*Public)
		BegGet
			LeaveSR SGHCHU 
		EndGet
		
		BegSet
			SGHCHU  = *PropVal
		EndSet
	EndProp
	/EndRegion
		
	BegFunc GetSizeGroupID Type(*Boolean) Access(*Public)
		DclSrParm ClassID     Type(*Zoned) len(4,0)
		
		If Not DSSPSGHL01.IsOpen
			Open DSSPSGHL01
		EndIf
		
		Chain From(DSSPSGHL01) Key(ClassID) Access(*NoLock)
		If %Found
			LeaveSR *Off
		Else
			LeaveSR *On
		EndIf
	EndFunc
	
	BegFunc GetSizeGroupID Type(*Boolean) Access(*Public)
		DclSrParm ClassID     Type(*Zoned) len(4,0)
		DclSrParm SizeGroupID Type(*Zoned) len(4,0)
		
		If Not DSSPSGHL01.IsOpen
			Open DSSPSGHL01
		EndIf
		
		Chain From(DSSPSGHL01) Key(ClassID,SizeGroupID) Access(*NoLock)
		If %Found
			LeaveSR *Off
		Else
			LeaveSR *On
		EndIf
	EndFunc
	
	BegFunc CheckClassSizeGroupDescUnique Type(*Boolean) Access(*Public)
		DclSrParm ClassID       Type(*Zoned) Len(4,0)
		DclSrParm SizeGroupDesc Type(*Char)  Len(50)
		
		If Not DSSPSGHL05.IsOpen
			Open DSSPSGHL05
		EndIf
		
		Chain From(DSSPSGHL05) Key(ClassID,SizeGroupDesc) Access(*NoLock)
		If %Found
			LeaveSR *On
		Else
			LeaveSR *Off
		EndIf
	EndFunc
	
	/Region CRUD
	BegFunc GetSizeGroupIDForUpdate Type(*Boolean) Access(*Public)
		DclSrParm ClassID     Type(*Zoned) len(4,0)
		
		If Not DSSPSGHL01.IsOpen
			Open DSSPSGHL01
		EndIf
		
		Chain From(DSSPSGHL01) Key(ClassID) Access(*DFT) Err(*Extended)
		If Not %Found
			LeaveSR *On
		EndIf
		
		If %Error = *On
			Throw *New System.Exception('Failed to get record for update (DSSPSGHL01)')
			LeaveSR *On
		EndIf
		
		LeaveSR *Off
	EndFunc
	
	BegFunc GetSizeGroupIDForUpdate Type(*Boolean) Access(*Public)
		DclSrParm ClassID     Type(*Zoned) len(4,0)
		DclSrParm SizeGroupID Type(*Zoned) len(4,0)
		
		If Not DSSPSGHL01.IsOpen
			Open DSSPSGHL01
		EndIf
		
		Chain From(DSSPSGHL01) Key(ClassID,SizeGroupID) Access(*DFT) Err(*Extended)
		If Not %Found
			LeaveSR *On
		EndIf
		
		If %Error = *On
			Throw *New System.Exception('Failed to get record for update (DSSPSGHL01)')
			LeaveSR *On
		EndIf
		
		LeaveSR *Off
	EndFunc
	
	BegFunc UpdateSizeGroupID Type(*Boolean) Access(*Public)
		DclSrParm ClassID     Type(*Zoned) len(4,0)
		
		Update R_RDSSPSGH Err(*Extended)
		If %Error = *On
			Throw *New System.Exception('Failed to update record (DSSPSGHL01)')
			LeaveSR *True
		EndIf
		
		LeaveSR *Off
	EndFunc
	
	BegFunc UpdateSizeGroupID Type(*Boolean) Access(*Public)
		DclSrParm ClassID     Type(*Zoned) len(4,0)
		DclSrParm SizeGroupID Type(*Zoned) len(4,0)
				
		If Not DSSPSGDL02.IsOpen
			Open DSSPSGDL02
		EndIf
				
		Update R_RDSSPSGH Err(*Extended)
		If %Error = *On
			Throw *New System.Exception('Failed to update record (DSSPSGHL01)')
			LeaveSR *True
		EndIf
		
		LeaveSR *Off
	EndFunc
	
	//Update Header record from DSSPSGD
	BegFunc UpdateClassSizeGroupIDCounts Type(*Boolean) Access(*Public)
			DclSrParm SizeGroupID		 Type(*Zoned)	Len(4,0)
			DclSrParm SizeGroupDesc		 Type(*Char)    Len(50)
		
			DclFld Record_Count		Type(Int32)
			DclFld Default_Count	Type(Int32)
		    
		    If Not DSSPSGDL02.IsOpen
				Open DSSPSGDL02
			EndIf
		
			//Read DSSPSGD to determine counts				
			Setll DSSPSGDL02 Key(SizeGroupID)
			DoUntil DSSPSGDL02.IsEof
				ReadE DSSPSGDL02 Key(SizeGroupID)
					If Not DSSPSGDL02.IsEof
					   Record_Count +=1
						If SGDDYN = 'Y'
						   Default_Count +=1
						Endif 			
					Endif
			Enddo
			
			SGHSGD = SizeGroupDesc
			SGH#SZ = Record_Count
			SGH#DF = Default_Count
			SGHCHD =  %Date
			SGHCHT = %Time
			SGHCHU = db.User().toUpper()
				
			
			Update R_RDSSPSGH Err(*Extended)
			If %Error = *On
				Throw *New System.Exception('Failed to update record (DSSPSGHL01)')
				LeaveSR *True
			EndIf
			
			LeaveSR *Off
	EndFunc
	
	BegFunc DeleteSizeGroupID Type(*Boolean) Access(*Public)
		DclSrParm ClassCode     Type(*Zoned) Len(4,0)
		DclSrParm SizeGroupID   Type(*Zoned) Len(4,0)
		
		If Not DSSPSGHL01.IsOpen
			Open DSSPSGHL01
		EndIf
		
		Delete From(R_RDSSPSGH) Key(ClassCode, SizeGroupID) Err(*Extended)
		If %Error = *On
			LeaveSR *True
		EndIf
		
		LeaveSR *False
	EndFunc
			
	//Creates a DataSet/DataTable accessed by Class Code Key.
	BegFunc GetSizeGroupDataSetClass Type(DataTable) Access(*Public)
		DclSrParm Class_ID Type(*Zoned) len(4,0)
	
		DclFld dt Type( DataTable ) New()
		DclFld dc Type( DataColumn ) 
		DclFld dr Type( DataRow )
		
										
		If Not DSSPSGHL03.IsOpen
			Open DSSPSGHL03
		EndIf
		
		//Create Size Group Description Column
		dc = *New DataColumn( 'clmSGHSGD' )
		dc.DataType = System.Type.GetType("System.String")
		dc.ColumnName = "clmSGHSGD"
		dc.Caption = "Size Group Description"
		dt.Columns.Add(dc)
		
		//Create Sizes Column
		dc = *New DataColumn( 'clmSGH#SZ' )
		dc.DataType = System.Type.GetType("System.Int32")
		dc.ColumnName = "clmSGH#SZ"
		dc.Caption = "Sizes"
		dt.Columns.Add(dc)
				
		//Create Defaults Column
		dc = *New DataColumn( 'clmSGH#DF' )
		dc.DataType = System.Type.GetType("System.Int32")
		dc.ColumnName = "clmSGH#DF"
		dc.Caption = "Defaults"
		dt.Columns.Add(dc)
		
		//Create Size Group ID Column
		dc = *New DataColumn( 'clmSGHSGC' )
		dc.DataType = System.Type.GetType("System.Int32")
		dc.ColumnName = "clmSGHSGC"
		dc.Caption = "Size Group ID"
		dt.Columns.Add(dc)
		
		//Read file by Key and create rows in DataTable				
		Setll DSSPSGHL03 Key(Class_ID)
		DoUntil DSSPSGHL03.IsEof
			ReadE DSSPSGHL03 Key(Class_ID)
			If not DSSPSGHL03.IsEof
				dr = dt.NewRow()
				dr.Item[0] = SGHSGD
				dr.Item[1] = SGH#SZ
				dr.Item[2] = SGH#DF
				dr.Item[3] = SGHSGC
				
				dt.Rows.Add( dr )
			Endif
		Enddo
		
		LeaveSR dt
	EndFunc
	
	//Writes new record. This method works out the next ID number.			
	BegFunc WriteSizeGroupRecord Type(*Zoned) Len(4,0) Access(*Public)
		DclSrParm Size_Group_Class	Type(*Zoned)	Len(4,0)
		DclSrParm Size_Group_Desc	Type(*Char)		Len(50)
		DclSrParm DataView  		Type(DataView)
			
		
		DclFld DataView			    Type(DataView)
		DclFld Data_Row_View	    Type(DataRowView)
		DclFld Sizes_Count		    Type(*Zoned)    Len(3,0)
		DclFld Default_Count        Type(*Zoned)    Len(3,0)
		
		//Open the files if not already done so.
		If Not DSSPSGHL01.IsOpen
			Open DSSPSGHL01
		EndIf
		
		If Not DSSPSGHL04.IsOpen
			Open DSSPSGHL04
		EndIf
		
		//Get last available ID Number
		SetGT File(DSSPSGHL04) Key(*Hival)
		ReadP DSSPSGHL04
		
		If %Error = *On
			Throw *New System.Exception('Record Locked')
		EndIf
		
		//As we have previously read a record we don't want any data hanging arouond.
		clear R_RDSSPSGH4 *NoKey
		
		//Increment the ID	
		If Not %Eof(DSSPSGHL04)
			SGHSGC += 1
		  Else
		   SGHSGC  = 1	
		Endif
				
		//Read through the Dataview table to determine Select and Default counts
		ForEach Data_Row_View Collection(DataView) Type(DataRowView)
		
			If Data_Row_View.Item["clmSelect"] *as *Boolean = *True
				Sizes_Count +=1
			Endif
		
			If Data_Row_View.Item["clmDefault"] *as *Boolean = *True
				Default_Count +=1
			Endif
		
		EndFor
		
		//Set new record data		
		Create_Date = %Date
	    Create_Time = %Time
	    Create_User = db.User().toUpper()
	    SGHCLS      = Size_Group_Class
	    SGHSGD		= Size_Group_Desc
	    SGH#SZ	    = Sizes_Count
	    SGH#DF		= Default_Count

//		//Write the record
		Write R_RDSSPSGH Err(*Extended)
		If %Error = *On
			Throw *New System.Exception('Failed to write record (DSSPSGH)')
		EndIf
		
 		LeaveSR SGHSGC
	EndFunc
	/EndRegion
EndClass