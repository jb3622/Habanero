Using System
Using System.Text
Using System.Data
Using Disney.DA.IP400

BegClass CasePack Access(*Public)

	DclFld PgmDB       Type(ASNA.VisualRPG.Runtime.Database)
	DclFld Environment Type(Disney.Menu.Environments)
	DclFld CasePackTbl Type(DataTable)

	BegConstructor Access(*Public)
		DclSrParm PgmDB Type(ASNA.VisualRPG.Runtime.Database)
		DclSrParm Environment Type(Disney.Menu.Environments)
		
		*this.PgmDB = PgmDB
		*this.Environment = Environment
	EndConstructor
	
	/Region Properties
	DclFld pPackCode Type(String) Access(*Private) Inz(String.Empty)
	BegProp PackCode Type(String) Access(*Public)
		BegGet
			LeaveSR pPackCode
		EndGet
		BegSet
			pPackCode = *PropVal
		EndSet
	EndProp
	
	DclFld pPackDesc Type(String) Access(*Private) Inz(String.Empty)
	BegProp PackDescription Type(String) Access(*Public)
		BegGet
			LeaveSR pPackDesc
		EndGet
	EndProp
		
	DclFld pPackHeight Type(Decimal) Access(*Private) Inz(0)
	BegProp PackHeight Type(Decimal) Access(*Public)
		BegGet
			LeaveSR pPackHeight
		EndGet
		BegSet
			pPackHeight = *PropVal
		EndSet
	EndProp
	
	DclFld pPackWidth Type(Decimal) Access(*Private) Inz(0)
	BegProp PackWidth Type(Decimal) Access(*Public)
		BegGet
			LeaveSR pPackWidth
		EndGet
		BegSet
			pPackWidth = *PropVal
		EndSet
	EndProp
	
	DclFld pPackLength Type(Decimal) Access(*Private) Inz(0)
	BegProp PackLength Type(Decimal) Access(*Public)
		BegGet
			LeaveSR pPackLength
		EndGet
		BegSet
			pPackLength = *PropVal
		EndSet
	EndProp
	
	DclFld pPackWeight Type(Decimal) Access(*Private) Inz(0)
	BegProp PackWeight Type(Decimal) Access(*Public)
		BegGet
			LeaveSR pPackWeight
		EndGet
		BegSet
			pPackWeight = *PropVal
		EndSet
	EndProp
	
	DclFld pPackOverride Type(String) Access(*Private) Inz(String.Empty)
	BegProp PackOverrideable Type(String) Access(*Public)
		BegGet
			LeaveSR pPackOverride
		EndGet
	EndProp
	
	DclFld pPackCodeDesc Type(String) Access(*Private) Inz(String.Empty)
	BegProp PackCodeDescription Type(String) Access(*Public)
		BegGet
			LeaveSR pPackCodeDesc
		EndGet
	EndProp
	
	DclFld pErrorMessage Type(String) Access(*Private) Inz(String.Empty)
	BegProp ErrorMessage Type(String) Access(*Public)
		BegGet
			LeaveSR pErrorMessage
		EndGet
	EndProp
	/EndRegion
	
	BegFunc GetCasePackTbl Type(DataTable) Access(*Public) 
		
		DclFld CasePack Type(DScasPk)

		If CasePack = *Nothing
			CasePack = *New DScasPk(PgmDB,Environment)
		EndIf
		
		CasePackTbl = CasePack.GetCasePackTbl()

		LeaveSR CasePackTbl
	EndFunc
	
	BegFunc GetCasePack Type(Boolean) Access(*Public)
		DclSrParm CasePack Type(String)

		DclFld dr Type(DataRow)
		
		If CasePackTbl = *Nothing
			GetCasePackTbl()
		EndIf
		
		dr = CasePackTbl.Rows.Find(CasePack)
		If dr <> *Nothing
			pPackCode     = dr["CasePackCode"]     *As String
			pPackDesc     = dr["Description"]      *As String
			pPackHeight   = dr["PackHeight"]       *As Decimal
			pPackWidth    = dr["PackWidth"]        *As Decimal
			pPackLength   = dr["PackLength"]       *As Decimal
			pPackWeight   = dr["PackWeight"]       *As Decimal
			pPackOverride = dr["PackOverrideable"] *As String
			pPackCodeDesc = dr["PackCodeDescription"] *As String
			
			LeaveSR *True
		Else
			LeaveSR *False
		EndIf
	EndFunc
	
	BegFunc GetPackDescription Type(String) Access(*Public)
		DclSrParm CasePack Type(String)
		
		DclFld dr Type(DataRow)
		
		If CasePackTbl = *Nothing
			GetCasePackTbl()
		EndIf
		
		dr = CasePackTbl.Rows.Find(CasePack)
		If dr <> *Nothing
			LeaveSR dr["Description"] *As String
		Else
			LeaveSR String.Empty
		EndIf
	EndFunc
	
	BegFunc IsWeightValid Type(Boolean) Access(*Public)
		DclSrParm PackWeight Type(String)
		
		DclFld Weight Type(Decimal)
		
		pErrorMessage = String.Empty
		If Not Decimal.TryParse(PackWeight, *ByRef Weight)
			pErrorMessage = "Invalid number"
			LeaveSR *False
		EndIf
			
		If Weight < .01 Or Weight > 9999.99
			pErrorMessage = "Pack Weight must be between .01 and 9999.99"
			LeaveSR *False
		Else
			*this.pPackWeight = Weight
			LeaveSR *True
		EndIf
	EndFunc
EndClass