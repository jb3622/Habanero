Using System
Using System.Text
Using System.Data
Using Disney.DA.IP400

BegClass Class Access(*Public)

	DclFld PgmDB    Type(ASNA.VisualRPG.Runtime.Database) Access(*Private)
	DclFld AllClassTbl Type(DataTable) Access(*Private)
	DclFld FilteredClasses Type(DataTable) Access(*Private)
	
	BegConstructor Access(*Public)
		DclSrParm PgmDB Type(ASNA.VisualRPG.Runtime.Database)
		
		*this.PgmDB = PgmDB
		
		GetAllClassTbl()
	EndConstructor
	
	DclFld pClass       Type(Int16)   Access(*Private)
	DclFld pClassName   Type(String)  Access(*Private)
	DclFld pDivision    Type(Int16)   Access(*Private)
	DclFld pDepartment  Type(Int16)   Access(*Private)
	DclFld pClassStatus Type(Boolean) Access(*Private)
	
	/Region Methods
	BegSR GetAllClassTbl Type(DataTable) Access(*Private)
	
		DclFld IPClass Type(IPCLASScls)
		
		If IPClass = *Nothing
			IPClass = *New IPCLASScls(PgmDB)
		EndIf
			
		AllClassTbl = IPClass.GetClassTbl()
	EndFunc
	
	BegFunc GetClassTbl Type(DataTable) Access(*Public)

		DclArray drClass Type(DataRow)  Rank(1)
		DclFld   dv      Type(DataView)

		If Not SpiceDS.Tables.Contains("Class")
			GetAllClassTbl()
		EndIf
		
		If Not SpiceDS.Tables.Contains("FilteredClasses")
			FilteredClasses = SpiceDS.Tables("Class").Clone()
			FilteredClasses.TableName = "FilteredClasses"
		
			dv = *New DataView(SpiceDS.Tables("AuthorisedDepts"))
			ForEach Name(drv) Collection(dv) Type(DataRowView)
				drClass = SpiceDS.Tables("Class").Select("Department = " + drv.Item("Department") *As String)
				ForEach Name(drClassRecord) Collection(drClass) Type(DataRow)
					FilteredClasses.ImportRow(drClassRecord)
				EndFor
			EndFor
			
			SpiceDS.Tables.Add(FilteredClasses)
		EndIf
		
		LeaveSR SpiceDS
	EndFunc
	
	BegFunc GetClassTbl Type(DataTable) Access(*Public)
		DclSrParm Dept Type(Int16)
	
		DclFld FilteredClasses Type(DataTable)

		DclArray drClass Type(DataRow)  Rank(1)

		If Not SpiceDS.Tables.Contains("Class")
			GetAllClassTbl()
		EndIf
		
		If Not SpiceDS.Tables.Contains("DeptClasses")
			FilteredClasses = SpiceDS.Tables("Class").Clone()
			FilteredClasses.TableName = "DeptClasses"

			drClass = SpiceDS.Tables("Class").Select("Department = " + Dept.ToString('00'))
			ForEach Name(drClassRecord) Collection(drClass) Type(DataRow)
				FilteredClasses.ImportRow(drClassRecord)
			EndFor
			
			SpiceDS.Tables.Add(FilteredClasses)
		EndIf
		
		LeaveSR SpiceDS
	EndFunc
	
	BegFunc GetClass Type(Boolean) Access(*Public)
		DclSrParm Class Type(Int16)

		DclFld dr Type(DataRow)
		
		If Not SpiceDS.Tables.Contains("FilteredClasses")
			GetClassTbl()
		EndIf
		
		dr = SpiceDS.Tables("FilteredClasses").Rows.Find(Class)
		If dr <> *Nothing And (dr["Status"] *As Boolean = *true)
			pClass      = dr["ClassCode"]  *As Int16
			pClassName  = dr["ClassName"]  *As String
			pDivision   = dr["Division"]   *As Int16
			pDepartment = dr["Department"] *As Int16
			pClassStatus= dr["Status"]     *As Boolean
			
			LeaveSR *True
		Else
			LeaveSR *False
		EndIf
	EndFunc
	
	BegFunc GetClass Type(Boolean) Access(*Public)
		DclSrParm Class Type(Int16)
		DclSrParm Dept  Type(Int16)
		
		DclArray dr Type(DataRow) Rank(1)
		
		If Not SpiceDS.Tables.Contains("Class")
			GetAllClassTbl()
		EndIf
		
		dr = SpiceDS.Tables("Class").Select("Department = " + Dept.ToString('00') + " and ClassCode = " + Class.ToString('0000'))
		ForEach drClass Collection(dr) Type(DataRow)
			If drClass["Status"] *As Boolean = *true
				pClass      = drClass["ClassCode"]  *As Int16
				pClassName  = drClass["ClassName"]  *As String
				pDivision   = drClass["Division"]   *As Int16
				pDepartment = drClass["Department"] *As Int16
				pClassStatus= drClass["Status"]     *As Boolean
			
				LeaveSR *True
			EndIf
		EndFor
		
		LeaveSR *False
	EndFunc
	/EndRegion
EndClass