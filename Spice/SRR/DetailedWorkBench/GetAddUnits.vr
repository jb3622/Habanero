Using System
Using System.Data
Using System.Text

DclNameSpace Disney.SRR

BegClass GetAddUnits Access(*Public)
	
	DclDB Name(PgmDB) DBname("TDST")
	DclDiskFile Name(DSSRDTL1) Type(*Input) Org(*Indexed) File('DSSRDTL1') Db(PgmDB) ImpOpen(*No)
	DclDiskFile Name(IPITHDR)  Type(*Input) Org(*Indexed) File('IPITHDR')  Db(PgmDB) ImpOpen(*No)
	DclDiskFile Name(DSCONSP)  Type(*Input) Org(*Indexed) File('DSCONSP')  DB(PgmDB) ImpOpen(*No)
	
	DclFld Member          Type(*String)
	DclFld INIRoundUpValue Type(*Decimal)
	DclFld RPLRoundUpValue Type(*Decimal)
		
	BegConstructor Access(*Public)
		DclSrParm PgmDB  Type(ASNA.VisualRPG.Runtime.Database)
		DclSrParm Member Type(*String)
		
		*this.PgmDB  = PgmDB
		*this.Member = Member
	EndConstructor
	
	BegSr Dispose Access(*Public)
	
		//DclFld CmdString Type(StringBuilder)
		
		If IPITHDR.IsOpen
			Close IPITHDR
		EndIf
		
		If DSSRDTL1.IsOpen
			Close DSSRDTL1
		EndIf
	EndSR
	
	BegFunc GetAddUnits Access(*Public) Type(System.Int32)
		DclSrParm SetData Type(DataSet)
		DclSrParm Store   Type(System.Int16)
		DclSrParm RlsQty  Type(System.Int32)
		
		DclFld dv    Type(DataView)
		DclFld drv   Type(DataRowView)
		
		DclFld AddUnits     Type(Int32)
		DclFld ShortFall    Type(Int32)
		DclFld IntShortFall Type(Int32)
		DclFld Rounding     Type(*Packed) Len(3,2)
		
		DclFld Dept   Type(*Zoned) Len(3,0)
		DclFld Class  Type(*Zoned) Len(4,0)
		DclFld Vendor Type(*Zoned) Len(5,0)
		DclFld Style  Type(*Zoned) Len(4,0)
		DclFld Colour Type(*Zoned) Len(3,0)
		DclFld Size   Type(*Zoned) Len(4,0)
		DclFld Ratio  Type(Int32)
		
		// Member name obtained from Constructor parms
		If Not DSSRDTL1.IsOpen
			DSSRDTL1.MemberName = Member
			Open DSSRDTL1
		EndIf
		
		If Not IPITHDR.IsOpen
			Open IPITHDR
		EndIf
		
		If Not DSCONSP.IsOpen
			Open DSCONSP
		EndIf
		
		Chain From(DSCONSP) Key('DISTRO_ROUND','INI')
		If DSCONSP.isFound
			INIRoundUpValue = CONVAL3
		Else
			INIRoundUpValue = *Zero
		EndIf
		
		Chain From(DSCONSP) Key('DISTRO_ROUND','RPL')
		If DSCONSP.isFound
			RPLRoundUpValue = CONVAL3
		Else
			RPLRoundUpValue = *Zero
		EndIf
		
		Close DSCONSP		
		
		AddUnits = *Zero
		dv = *New DataView(SetData.Tables["Set"])
		ForEach drv Collection(dv) Type(DataRowView)
			Dept   = Convert.ToInt16(drv.Item["Department"])
			Class  = Convert.ToInt16(drv.Item["Class"])
			Vendor = Convert.ToInt32(drv.Item["Vendor"])
			Style  = Convert.ToInt16(drv.Item["Style"])
			Colour = Convert.ToInt16(drv.Item["Colour"])
			Size   = Convert.ToInt16(drv.Item["Size"])
			Ratio  = Convert.ToInt32(drv.Item["Ratio"])
			
			Chain From(DSSRDTL1) Key(Dept,Class,Vendor,Style,Colour,Size,Store)
			If DSSRDTL1.IsFound
				ShortFall = SRSTRQ - (RlsQty * Ratio)
				If ShortFall > *Zero
				
					// Round to nearest Distro quantity
					Chain From(IPITHDR) Key(Class,Vendor,Style,Colour,Size)
					If IPITHDR.IsFound
						If IMLT > 1
							IntShortFall = ShortFall/IMLT
							IntShortFall = IntShortFall * IMLT
							Rounding = (ShortFall-IntShortfall) / IMLT
							
							If RlsQty = *Zero	// If releasing zero units App's, use the Initial Rounding factor
								If Rounding >= INIRoundUpValue
									ShortFall = IntShortFall + IMLT
								Else
									ShortFall = IntShortFall
								EndIf							
							Else
								If Rounding >= RPLRoundUpValue
									ShortFall = IntShortFall + IMLT
								Else
									ShortFall = IntShortFall
								EndIf
							EndIf
						EndIf
					Else
						Throw *New System.Exception('IPITHDR record missing for conponent')
					EndIf
					
					AddUnits += ShortFall
				EndIf
			Else
				Throw *New System.Exception('DSSRDTL record is missing, call support')
			EndIf
		EndFor
	
		LeaveSR AddUnits
	EndFunc
EndClass