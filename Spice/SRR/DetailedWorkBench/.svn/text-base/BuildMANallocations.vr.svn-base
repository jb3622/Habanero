Using System
Using System.Text
Using System.Data

DclNameSpace Disney.SRR

BegClass BuildMANallocations Access(*Public)

	DclDB PgmDB DBName("TDST")
	
	DclDiskFile Name(DSSRMSG)   Type(*Input) Org(*Arrival) File('DSSRMSG')  Db(PgmDB) ImpOpen(*No)
	DclDiskFile Name(DSAPPALC)  Type(*Input) Org(*Indexed) File('DSAPPALC') Db(PgmDB) ImpOpen(*No)
	DclDiskFile Name(DSAPPALC_Output) Type(*Output) Org(*Arrival) File('DSAPPALC') Db(PgmDB) ImpOpen(*No) Rnmfmt(RDSSRALC:ALC_OUTPUT)
	DclDiskFile Name(IPITHDR)   Type(*Input) Org(*Indexed) File('IPITHDR') Db(PgmDB) ImpOpen(*No)

	BegConstructor Access(*Public)
		DclSrParm PgmDB Type(ASNA.VisualRPG.Runtime.Database)
		
		*this.PgmDB = PgmDB
	EndConstructor
	
	BegFunc BuildData Access(*Public) Type(DataSet)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Vendor Type(*Zoned) Len(5,0)
		DclSrParm Style  Type(*Zoned) Len(4,0)
		DclSrParm Colour Type(*Zoned) Len(3,0)
		DclSrParm Size   Type(*Zoned) Len(4,0)	
	
		DclFld ds Type(DataSet)
		DclFld StoreList Type(DataTable)
		DclFld dr Type(DataRow)
	
		If Not DSSRMSG.IsOpen
			Open DSSRMSG
		EndIf	
	
		ds = *New DataSet("MANalloc")
	
		StoreList = *New DataTable("StoreList")
		//ds.Tables.Add(dt)	
	
		StoreList.Columns.Add(*New DataColumn("Market", *TypeOf(System.String)))
		StoreList.Columns["Market"].ReadOnly = *True
	
		StoreList.Columns.Add(*New DataColumn("Store", *TypeOf(System.Int16)))
		StoreList.Columns["Store"].ReadOnly = *True
		
		StoreList.Columns.Add(*New DataColumn("StoreName", *TypeOf(System.String)))
		StoreList.Columns["StoreName"].ReadOnly = *True
		
		StoreList.Columns.Add(*New DataColumn("StoreGrade", *TypeOf(System.String)))
		StoreList.Columns["StoreGrade"].ReadOnly = *True
			
		StoreList.Columns.Add(*New DataColumn("ReleaseQty", *TypeOf(System.Int32)))
		
		StoreList.Columns.Add(*New DataColumn("SRRallocation", *TypeOf(System.Boolean)))
		StoreList.Columns["SRRallocation"].ReadOnly = *True
		
		If Not DSAPPALC.IsOpen
			Open DSAPPALC
		EndIf
	
		SetLL DSSRMSG Key(1)
		DoUntil DSSRMSG.IsEof
			Read DSSRMSG
			If Not DSSRMSG.IsEof
			
				dr = StoreList.NewRow()
			
				dr.Item["Market"]     = SGMKT
				dr.Item["Store"]      = SGSTR
				dr.Item["StoreName"]  = SGSNAM
				dr.Item["StoreGrade"] = SGGRD
				dr.Item["ReleaseQty"] = 0
				
				Chain From(DSAPPALC) Key('P',Class,Vendor,Style,Colour,Size,SGSTR,'S')
				If DSAPPALC.IsFound
					dr.Item["SRRallocation"] = *True
				Else
					dr.Item["SRRallocation"] = *False
				EndIf
				
				StoreList.Rows.Add(dr)			
			EndIf
		EndDo
		
		Close DSSRMSG
		
		ds.Tables.Add(StoreList)
		
		LeaveSR ds
	EndFunc
	
	BegSr Update_DB Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Vendor Type(*Zoned) Len(5,0)
		DclSrParm Style  Type(*Zoned) Len(4,0)
		DclSrParm Colour Type(*Zoned) Len(3,0)
		DclSrParm Size   Type(*Zoned) Len(4,0)
		DclSrParm dv     Type(DataView)
		
		If Not IPITHDR.IsOpen
			Open IPITHDR
		EndIf
		
		Chain From(IPITHDR) Key(Class,Vendor,Style,Colour,Size)
		If Not IPITHDR.IsFound
			Throw *New System.Exception('Missing IPITHDR')
			LeaveSR
		EndIf
		
		Close IPITHDR
					
		If Not DSAPPALC_Output.IsOpen
			Open DSAPPALC_Output
		EndIf		

		ForEach drv Collection(dv) Type(DataRowView)
			IASTS    = *Blank
			IAORIGIN = 'M'
			IADEPT   = IDPT
			IACLS    = Class
			IAVEN    = Vendor
			IASTY    = Style
			IACLR    = Colour
			IASIZ    = Size
			IAUPC    = IUPD
			IASTR    = drv.Item["Store"] *As System.Int16
			IASTRDSC = drv.Item["StoreName"] *as System.String
			IAMKT    = drv.Item["Market"] *as System.String
			IAGRADE  = drv.Item["StoreGrade"] *as System.String
			IASYSQTY = *Zero
			IARLSQTY = drv.Item["ReleaseQty"] *as System.Int32
			IARLSYN  = 'Y'
			IASRRUNT = *Zero
			IARLSDAT = DateTime.Now
			IARLSUSR = PgmDB.User.ToUpper()
				
			Write ALC_OUTPUT
		EndFor
		
		Close DSAPPALC_Output
	EndSr
EndClass
