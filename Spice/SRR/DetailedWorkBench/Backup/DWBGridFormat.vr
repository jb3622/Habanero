Using System
Using System.Text
Using System.Drawing
Using System.Security.Policy
Using System.Windows.Forms

DclNameSpace Disney.SRR

BegClass DWBGridFormat Access(*Public)
	
	BegConstructor Access(*Public)
	EndConstructor
	
	/Region Apply Grid Formatting	
	// --------------------------------------------------------------------------
	// Apply formatting to the grid -  DataGridview1 
	// --------------------------------------------------------------------------
	BegFunc ApplyGrid1Formatting Type(*Boolean)  Access(*Public)
		DclSrParm Grid1      Type(System.Windows.Forms.DataGridView)
		DclSrParm RowsLoaded Type(*Integer4)
				
		// Temp variable to hold the value we are going to test, you may
		// or may not need this
		DclFld PropUL       Type(*String)
		DclFld IdealUL      Type(*String)
		DclFld IdealAllocU  Type(*Zoned)  Len(7,0)
		DclFld PropAllocU   Type(*Zoned)  Len(7,0)
		DclFld CurLevelUL   Type(*String)
		DclFld oldUL#       Type(*String)
		DclFld DltLevelUL   Type(*String)
		DclFld UserLocked   Type(*String)
		DclFld PartOfSet    Type(*String)

		// Loop through each row in the DataGridView
        Do FromVal( 0 ) ToVal( RowsLoaded - 1 ) Index( dex ) Type(*Integer4)
			
			// Get Data from Grid
			oldUL#     = Grid1.Item[ 'dOldUplift',  dex ].Value.ToString()
			UserLocked = Grid1.Item[ 'dLockUserUL', dex ].Value.ToString()
			CurLevelUL = Grid1.Item[ 'dCurLevelUL', dex ].Value.ToString()
			DltLevelUL = Grid1.Item[ 'dDltRcdUL',   dex ].Value.ToString()
			PartOfSet  = Grid1.Item[ 'dPackUL',     dex ].Value.ToString()
			
			If PartOfSet = 'Y'
				Grid1.Item[1,dex].Style.ForeColor = Color.White
				Grid1.Item[1,dex].Style.BackColor = Color.Red
				Grid1.Item[2,dex].Style.ForeColor = Color.White
				Grid1.Item[2,dex].Style.BackColor = Color.Red
				Grid1.Item[3,dex].Style.ForeColor = Color.White
				Grid1.Item[3,dex].Style.BackColor = Color.Red
				Grid1.Item[4,dex].Style.ForeColor = Color.White
				Grid1.Item[4,dex].Style.BackColor = Color.Red
				Grid1.Item[5,dex].Style.ForeColor = Color.White
				Grid1.Item[5,dex].Style.BackColor = Color.Red
				Grid1.Item[6,dex].Style.ForeColor = Color.White
				Grid1.Item[6,dex].Style.BackColor = Color.Red
//				Foreach GridCol Collection(Grid1.Columns) Type(System.Windows.Forms.DataGridViewColumn)
//					Grid1.Item[GridCol.Name,dex].Style.ForeColor = Color.White
//					Grid1.Item[GridCol.Name,dex].Style.BackColor = Color.Red
//				EndFor
			EndIf
			
            // Item is locked
            If UserLocked <> String.Empty
               Grid1.item['dItemUL',dex].Style.foreColor = Color.Firebrick
			   Grid1.Item['upliftfactor',dex].ReadOnly = *True
		    Endif
            
			// Highlight EDC stock cell if insuffecient stock...
			PropUL      = Grid1.Item[ 'dPropAlocUL', dex ].Value.toString()
			IdealUL     = Grid1.Item[ 'dModelReqU',  dex ].Value.toString()
			IdealAllocU = System.Convert.ToDecimal( IdealUL )
			PropAllocU  = System.Convert.ToDecimal( PropUL )
			        
			// Test the value and apply colour if it meets our criteria
			If (IdealAllocU > PropAllocU )
		 		Grid1.item['dSOHEDC1',dex].Style.BackColor = Color.LightSalmon 
			Else	
				Grid1.item['dSOHEDC1',dex].Style.BackColor = Grid1.item['dtotstkU',dex].style.BackColor	
	 		Endif
			
			// Has any cells been changed if so change font to Red
            // Uplift factor 
 			If  oldUL# = 'C'
 			   	Grid1.item['upliftfactor',dex].Style.ForeColor = Color.Red
		       	Grid1.item['dtotstkU',    dex].Style.ForeColor = Color.Red 
				Grid1.item['dModelReqU',  dex].Style.ForeColor = Color.Red 
				Grid1.item['dpropAlocUL', dex].Style.ForeColor = Color.Red
				Grid1.item['dNewSROSU',   dex].Style.ForeColor = Color.Red 
//			Else
//			   	Grid1.item['dtotstkU',   dex].Style.ForeColor = Color.Black 
//				Grid1.item['dModelReqU', dex].Style.ForeColor = Color.Black 
//				Grid1.item['dpropAlocUL',dex].Style.ForeColor = Color.Black
//				Grid1.item['dNewSROSU',  dex].Style.ForeColor = Color.Black 
			Endif
			
			If	CurLevelUL.Trim() = 'Y' And oldUL# = String.Empty 
				Grid1.item['upliftfactor',dex].Style.forecolor = Color.Black
			Endif
			
			// Uplift factor is not at current level
			If	CurLevelUL.Trim() = String.Empty  And oldUL# <> 'C'   
		      	Grid1.item['upliftfactor',dex].Style.forecolor = Color.Blue
			Endif
			
			// Delete current level
			If	DltLevelUL <> String.Empty   
		      	Grid1.item['upliftfactor',dex].Style.forecolor = Color.Blue
			Endif
			
			// Delete current level
			If	CurLevelUL.Trim() <> String.Empty  And DltLevelUL <> String.Empty   
		      	Grid1.item['upliftfactor',dex].Style.forecolor = Color.Blue
			Endif
        EndDo
	
	    LeaveSr *True
	EndFunc
	
	// --------------------------------------------------------------------------
	// Apply Formatting to the grid - DataGridView 2
	// --------------------------------------------------------------------------
	BegFunc ApplyGrid2Formatting Type(*Boolean)  Access(*Public)
		
		DclSrParm Grid2      Type(System.Windows.Forms.DataGridView)
		DclSrParm RowsLoaded Type(*Integer4)
				
		// Temp variable to hold the value we are going to test, you may
		// or may not need this
		DclFld PropCC type(*String)
		DclFld IdealCC type(*String)
		DclFld IdealAllocC  type(*Zoned)  Len(7,0)
		DclFld PropAllocC type(*Zoned)  Len(7,0)
		DclFld DltLevelCC type(*String)
		DclFld CurLevelCC type(*String)
		DclFld oldCC# type(*String)
		DclFld UserLocked Type(*String)
		DclFld PartOfSet  Type(*String)

		// Loop through each row in the DataGridView
        Do FromVal( 0 ) ToVal( RowsLoaded - 1 ) Index( dex ) Type(*Integer4)
			
			// Get Data from Grid
			oldCC# = Grid2.Item[ 'dOldCCO', dex ].Value.toString()	
			UserLocked  = Grid2.Item[ 'dLockUserCC', dex ].Value.toString()
			CurLevelCC  = Grid2.Item[ 'dCurLevelCC', dex ].Value.toString()
			DltLevelCC  = Grid2.Item[ 'dDltRcdCC', dex ].Value.toString()
			PartOfSet   = Grid2.Item[ 'dPackCC',dex].Value.ToString()
			
			If PartOfSet = 'Y'
				Grid2.Item[1,dex].Style.ForeColor = Color.White
				Grid2.Item[1,dex].Style.BackColor = Color.Red
				Grid2.Item[2,dex].Style.ForeColor = Color.White
				Grid2.Item[2,dex].Style.BackColor = Color.Red
				Grid2.Item[3,dex].Style.ForeColor = Color.White
				Grid2.Item[3,dex].Style.BackColor = Color.Red
				Grid2.Item[4,dex].Style.ForeColor = Color.White
				Grid2.Item[4,dex].Style.BackColor = Color.Red
				Grid2.Item[5,dex].Style.ForeColor = Color.White
				Grid2.Item[5,dex].Style.BackColor = Color.Red
				Grid2.Item[6,dex].Style.ForeColor = Color.White
				Grid2.Item[6,dex].Style.BackColor = Color.Red
			EndIf
			
            // Item is locked
            If UserLocked <> String.Empty
    		   Grid2.item['dItemCC',dex].Style.foreColor = Color.Firebrick
			   Grid2.Item['covercutoff',dex].ReadOnly = *True
	        Endif
           
           	// Highlight EDC stock cell if insuffecient stock...
			PropCC = Grid2.Item[ 'dPropAlocCC', dex ].Value.toString()
			IdealCC = Grid2.Item[ 'dmodlreqC', dex ].Value.toString()
			IdealAllocC  = System.Convert.ToDecimal( IdealCC )
			PropAllocC  = System.Convert.ToDecimal( PropCC )
		
			If (IdealAllocC > PropAllocC )	
				Grid2.item['dSOHEDC2',dex].Style.BackColor = Color.LightSalmon 
			  Else	
				Grid2.item['dSOHEDC2',dex].Style.BackColor = Grid2.item['dtotstckCC',dex].style.BackColor
			Endif
			
			// Cover Cutoff is not at current level
 			If  oldCC# = 'C'
		    	Grid2.item['covercutoff',dex].Style.forecolor = Color.Red
				Grid2.item['dtotstckCC',dex].Style.Forecolor = Color.Red 
				Grid2.item['dModlreqC',dex].Style.Forecolor = Color.Red 
				Grid2.item['dpropAlocCC',dex].Style.Forecolor = Color.Red 
				Grid2.item['dNewSmthROSC',dex].Style.Forecolor = Color.Red 
//		   	 Else
//		     	
//				Grid2.item['dtotstckCC',dex].Style.Forecolor = Color.Black
//				Grid2.item['dModlreqC',dex].Style.Forecolor = Color.Black
//				Grid2.item['dpropAlocCC',dex].Style.Forecolor = Color.Black
//				Grid2.item['dNewSmthROSC',dex].Style.Forecolor = Color.Black
			Endif
			
			If	CurLevelCC.Trim() = 'Y'  And oldCC# = String.Empty 
				Grid2.item['covercutoff',dex].Style.forecolor = Color.Black
			Endif
			
			// Cover Cutoff is not at current level
 			If	CurLevelCC.Trim() = String.Empty  And oldCC# <> 'C'  
		      	Grid2.item['covercutoff',dex].Style.forecolor = Color.Blue
			Endif
			
			// Delete current level
			If	DltLevelCC <> String.Empty   
		      	Grid2.item['covercutoff',dex].Style.forecolor = Color.Blue
			Endif
			
			// Delete current level
			If	CurLevelCC.Trim() <> String.Empty  And DltLevelCC <> String.Empty   
		      	Grid2.item['covercutoff',dex].Style.forecolor = Color.Blue
			Endif
			
        EndDo
	
	    LeaveSr *True
	
	EndFunc

	// --------------------------------------------------------------------------
	// Apply Formatting to the grid - DataGridView 3
	// --------------------------------------------------------------------------
	BegFunc ApplyGrid3Formatting Type(*Boolean)  Access(*Public)
		DclSrParm Grid3      Type(System.Windows.Forms.DataGridView)
		DclSrParm RowsLoaded Type(*Integer4)
		DclSrParm Level      Type(*String)
		
		DclFld PropAL type(*String)
		DclFld IdealAL type(*String)
		DclFld IdealAllocA Type(*Zoned) Len(7,0)
		DclFld PropAllocA  Type(*Zoned) Len(7,0)
		DclFld DltLevelAL type(*String)
		DclFld CurLevelAl type(*String)
		DclFld oldAL# type(*String)
		DclFld UserLocked Type(*String)
		DclFld PartOfSet  Type(*String)

		// Loop through each row in the DataGridView
        Do FromVal( 0 ) ToVal( RowsLoaded - 1 ) Index( dex ) Type(*Integer4)
			
			// Get Data from Grid
			oldAL#		= Grid3.Item[ 'dOldAllocFlg', dex ].Value.toString()
			UserLocked  = Grid3.Item[ 'dLockUserAL', dex ].Value.toString()
			CurLevelAl  = Grid3.Item[ 'dCurLevelAL', dex ].Value.toString()
			DltLevelAL  = Grid3.Item[ 'dDltRcdAL', dex ].Value.toString()
			PartOfSet   = Grid3.Item[ 'dPackAL',dex].Value.ToString()
			
			If PartOfSet = 'Y'
				Grid3.Item[1,dex].Style.ForeColor = Color.White
				Grid3.Item[1,dex].Style.BackColor = Color.Red
				Grid3.Item[2,dex].Style.ForeColor = Color.White
				Grid3.Item[2,dex].Style.BackColor = Color.Red
				Grid3.Item[3,dex].Style.ForeColor = Color.White
				Grid3.Item[3,dex].Style.BackColor = Color.Red
				Grid3.Item[4,dex].Style.ForeColor = Color.White
				Grid3.Item[4,dex].Style.BackColor = Color.Red
				Grid3.Item[5,dex].Style.ForeColor = Color.White
				Grid3.Item[5,dex].Style.BackColor = Color.Red
				Grid3.Item[6,dex].Style.ForeColor = Color.White
				Grid3.Item[6,dex].Style.BackColor = Color.Red
				
				If Level = "IS"
	        		Grid3.Item['AllocFlag',dex].ReadOnly = *True
	        	EndIf
			EndIf
			
            // Item is locked
            If UserLocked <> String.Empty
    		   Grid3.item['ditemAlc',dex].Style.foreColor = Color.Firebrick
			   Grid3.Item['AllocFlag',dex].ReadOnly = *True
	        Endif
	        
           	
			// Color EDC Stock Cell if Ideal Qty Greater the the proposed Qty  
			PropAL      = Grid3.Item[ 'dPropAlocAL', dex ].Value.toString()
			IdealAL     = Grid3.Item[ 'dModela', dex ].Value.toString()
			IdealAllocA = System.Convert.ToDecimal( IdealAL )
			PropAllocA  = System.Convert.ToDecimal( PropAL )
			
			If (IdealAllocA > PropAllocA)	
				Grid3.item['dSOHEDC3',dex].Style.BackColor = Color.LightSalmon 
			  Else
				Grid3.item['dSOHEDC3',dex].Style.BackColor = Grid3.item['dtotskal',dex].style.BackColor
			Endif
			
			// Allocation Flag Changed set font to Red
 		    If  oldAL# = 'C'
		       	Grid3.item['AllocFlag',dex].Style.forecolor = Color.Red
			 	Grid3.item['dtotskal',dex].Style.Forecolor = Color.Red 
				Grid3.item['dModela',dex].Style.Forecolor = Color.Red 
				Grid3.item['dpropAlocAL',dex].Style.Forecolor = Color.Red 
				Grid3.item['dNewSmthROSA',dex].Style.Forecolor = Color.Red 
			Endif
			
			If	CurLevelAL.Trim() = 'Y'	And oldAL# = String.Empty
				Grid3.item['AllocFlag',dex].Style.forecolor = Color.Black
			Endif
			
			// Allocation Flag is not at current level
 			If	CurLevelAL.Trim() = String.Empty  And oldAL# <> 'C'  
		      	Grid3.item['AllocFlag',dex].Style.forecolor = Color.Blue
			Endif
			
			// Delete current level
			If	DltLevelAL <> String.Empty   
		      	Grid3.item['AllocFlag',dex].Style.forecolor = Color.Blue
			Endif
			
			// Delete current level
			If	CurLevelAL.Trim() <> String.Empty  And DltLevelAL <> String.Empty   
		      	Grid3.item['AllocFlag',dex].Style.forecolor = Color.Blue
			Endif
			
        EndDo
	
	    LeaveSr *True
	EndFunc
	
	// --------------------------------------------------------------------------
	// Apply colours to the grid - Read the whole grid
	// --------------------------------------------------------------------------
	BegFunc ApplyGrid4Formatting Type(*Boolean)  Access(*Public)
		DclSrParm Grid4      Type(System.Windows.Forms.DataGridView)
		DclSrParm RowsLoaded Type(*Integer4)
		
		DclFld PropSF type(*String)
		DclFld IdealSF type(*String)
		DclFld IdealAllocS  type(*Zoned)  Len(7,0)
		DclFld PropAllocS type(*Zoned)  Len(7,0)
		DclFld DltLevelSF type(*String)
		DclFld CurLevelSF type(*String)
		DclFld oldSF# type(*String)
		DclFld UserLocked Type(*String)
		DclFld PartOfSet Type(*String)

		// Loop through each row in the DataGridView
        Do FromVal( 0 ) ToVal( RowsLoaded - 1 ) Index( dex ) Type(*Integer4)
			
			// Get Data from Grid
			oldSF#      = Grid4.Item[ 'dOldSmFct', dex ].Value.toString()
			UserLocked  = Grid4.Item[ 'dLockUsersm', dex ].Value.toString()
		    CurLevelSF  = Grid4.Item[ 'dCurLevelSmooth', dex ].Value.toString()
		    DltLevelSF  = Grid4.Item[ 'dDltRcdSF', dex ].Value.toString()
		    PartOfSet   = Grid4.Item[ 'dPackSF',dex].Value.ToString()
			
			If PartOfSet = 'Y'
				Grid4.Item[1,dex].Style.ForeColor = Color.White
				Grid4.Item[1,dex].Style.BackColor = Color.Red
				Grid4.Item[2,dex].Style.ForeColor = Color.White
				Grid4.Item[2,dex].Style.BackColor = Color.Red
				Grid4.Item[3,dex].Style.ForeColor = Color.White
				Grid4.Item[3,dex].Style.BackColor = Color.Red
				Grid4.Item[4,dex].Style.ForeColor = Color.White
				Grid4.Item[4,dex].Style.BackColor = Color.Red
				Grid4.Item[5,dex].Style.ForeColor = Color.White
				Grid4.Item[5,dex].Style.BackColor = Color.Red
				Grid4.Item[6,dex].Style.ForeColor = Color.White
				Grid4.Item[6,dex].Style.BackColor = Color.Red
			EndIf
			
            // Item is locked
            If UserLocked <> String.Empty
               Grid4.item['dItemSm',dex].Style.foreColor = Color.Firebrick
			   Grid4.Item['smoothFactor',dex].ReadOnly = *True
            Endif
            
			// Color EDC Stock Cell if Ideal Qty Greater the the proposed Qty  
			PropSF = Grid4.Item[ 'dPropAlocSF', dex ].Value.toString()
			IdealSF = Grid4.Item[ 'dModelReqS', dex ].Value.toString()
			IdealAllocS  = System.Convert.ToDecimal( IdealSF )
			PropAllocS  = System.Convert.ToDecimal( PropSF )
			
			If (IdealAllocS > PropAllocS )	
				Grid4.item['dSOHEDC4',dex].Style.BackColor = Color.LightSalmon 	
			Else
				Grid4.item['dSOHEDC4',dex].Style.BackColor = Grid4.item['dtotstks',dex].style.BackColor	
			Endif  
		
			// Has any cells been changed if so change font to Red
            If  oldSF# = 'C'
		       	Grid4.item['smoothFactor',dex].Style.forecolor = Color.Red
				Grid4.item['dtotstks',dex].Style.Forecolor = Color.Red    
				Grid4.item['dModelReqS',dex].Style.Forecolor = Color.Red    
				Grid4.item['dpropAlocSF',dex].Style.Forecolor = Color.Red 
				Grid4.item['NewROSS',dex].Style.Forecolor = Color.Red 
//			 Else
//				Grid4.item['dtotstks',dex].Style.Forecolor = Color.Black  
//				Grid4.item['dModelReqS',dex].Style.Forecolor = Color.Black  
//				Grid4.item['dpropAlocSF',dex].Style.Forecolor = Color.Black
//				Grid4.item['NewROSS',dex].Style.Forecolor = Color.Black
			Endif
			
			If	CurLevelSF.Trim() = 'Y' And oldSF# = String.Empty   
				Grid4.item['smoothFactor',dex].Style.forecolor = Color.Black
			Endif
			
			// Smoothing Factor is not at current level
 			If	CurLevelSF.Trim() = String.Empty  And oldSF# <> 'C' 
		      	Grid4.item['smoothFactor',dex].Style.forecolor = Color.Blue
			Endif
			
			// Delete current level
			If	DltLevelSF <> String.Empty   
		      	Grid4.item['smoothFactor',dex].Style.forecolor = Color.Blue
			Endif
			
			// Delete current level
			If	CurLevelSF.Trim() <> String.Empty  And DltLevelSF <> String.Empty   
		      	Grid4.item['smoothFactor',dex].Style.forecolor = Color.Blue
			Endif
        EndDo
	
	    LeaveSr *True
	EndFunc
	/EndRegion
EndClass