Using System
Using System.Text

Using Disney.SRR

DclNameSpace Disney.SRR

BegClass SRRcutOff Access(*Public)

	/Region Declare DataBase
	DclDB Name(SRR) DBName("TDST")
	
	DclDiskFile Name(DSSRCCO) Type(*Input) Org(*Arrival) +
		DB(SRR) File('*Libl/DSSRCCO') ImpOpen(*No)
		
	DclDiskFile Name(DSSRCCO1) Type(*Update) Org(*indexed) +
		DB(SRR) File('*Libl/DSSRCCO1') AddRec(*Yes) ImpOpen(*No) +
		RnmFmt(RDSSRCCO, UDSSRCCO)
		
	DclMemoryFile Name(Mem) DBdesc(SRR) Filedesc('*Libl/DSSRCCO') +
		RnmFmt(RDSSRCCO, MDSSRCCO) ImpOpen(*No)
	/EndRegion
	
	DclFld MemberName Type(*Char)  Len(10)
	DclFld Department Type(*Zoned) Len(3,0)
	DclFld memRecords Type(*Integer4)
	DclFld UserProfile Type(*Char) Len(10)
	DclFld TimeStamp   Type(*TimeStamp) TimFmt(*ISO)
	
	DclFld _CutOff Type(*Zoned) Len(5,2)
	DclFld _Below  Type(*Boolean)
	DclFld _Found  Type(*Boolean)
	DclFld _Changed Type(*Boolean)

	/Region Constructor & Destructor
	BegConstructor Access(*Public)
		DclSrParm SRR        Type(ASNA.VisualRPG.Runtime.Database)
		DclSrParm MemberName Type(*Char)  Len(10)
		DclSrParm Department Type(*Zoned) Len(3,0)
		DclSrParm UserProfile Type(*Char) Len(10)
		DclSrParm TimeStamp   Type(*TimeStamp) TimFmt(*ISO)

		*this.SRR = SRR
		*this.MemberName = MemberName
		*this.Department = Department
		*this.UserProfile = UserProfile
		*this.TimeStamp = TimeStamp
		
		If DSSRCCO.IsOpen
			Close DSSRCCO
		EndIf
		
		DSSRCCO.MemberName = MemberName.Trim()
		Open DSSRCCO
		
		If Not Mem.IsOpen
			Open Mem
		EndIf
		
		// Create the dataset from the iSeries file
		memRecords = *Zero
		SetLL DSSRCCO Key(*Start)
		DoUntil DSSRCCO.IsEof
			Read DSSRCCO
			If (Not DSSRCCO.IsEof) And CCWFLG = ' ' And CCkey > 4 And CCkey < 13
				memRecords += 1
				Write Mem
			EndIf
		EndDo
		
		Close DSSRCCO
	EndConstructor
	/EndRegion

	/Region Properties
	BegProp NoOfRecords Type(*Integer4) Access(*Public)
		BegGet
			LeaveSR memRecords
		EndGet
	EndProp
	
	BegProp ExceptionsBelow Type(*Boolean) Access(*Public)
		BegGet
			LeaveSR _Below
		EndGet
	EndProp
	
	BegProp Value Type(*Zoned) Len(5,2) Access(*Public)
		BegGet
			LeaveSR _CutOff
		EndGet
	EndProp
	
	BegProp IsFound Type(*Boolean) Access(*Public)
		BegGet
			LeaveSR _Found
		EndGet
	EndProp
	
	BegProp IsChanged Type(*Boolean) Access(*Public)
		BegGet
			LeaveSR _Changed
		EndGet
	EndProp
	/EndRegion
	
	/Region Methods
	// Dept
	BegSr GetCutOff Access(*Public)
				
		_Below  = *False
		_CutOff = *Zero
		_Found  = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCKey < 12 And CCkey > 4 And CCWFLG = *Blank
				_Below = *True
			EndIf
				
			If CCKEY = 12 And CCWFLG = *Blank
				_CutOff = CCCCO
				_Found  = *True
				
				If CCCHGD = TimeStamp
					_Changed = *On
				EndIf
			EndIf
			
			If _Found And _Below
				Leave
			EndIf
		EndDo
	EndSr
	
	// Dept Market
	BegSr GetCutOff Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
				
		_Below  = *False
		_CutOff = *Zero
		_Found  = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If (CCkey < 11 And CCkey > 4 And CCkey <> 8) And CCMKT = Market And CCWFLG = *Blank
				_Below = *True
			EndIf
				
			If CCkey = 11 And CCMKT = Market And CCWFLG = *Blank
				_CutOff = CCCCO
				_Found  = *True
				
				If CCCHGD = TimeStamp
					_Changed = *On
				EndIf
			EndIf
			
			If _Found And _Below
				Leave
			EndIf
		EndDo
	EndSr
	
	// Dept Market Grade
	BegSr GetCutOff Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade Type(*Char) Len(3)
				
		_Below  = *False
		_CutOff = *Zero
		_Found  = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If (CCkey = 9 Or CCkey = 6 Or CCkey = 5) And CCMKT = Market And CCgrd = Grade +
					 And CCWFLG = *Blank
				_Below = *True
			EndIf
				
			If CCKEY = 10 And CCMKT = Market And CCGRD = Grade +
					 And CCWFLG = *Blank
				_CutOff = CCCCO
				_Found  = *True
				
				If CCCHGD = TimeStamp
					_Changed = *On
				EndIf
			EndIf
			
			If _Found And _Below
				Leave
			EndIf
		EndDo
	EndSr
	
	// Dept Market Grade Store
	BegSr GetCutOff Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade  Type(*Char) Len(3)
		DclSrParm Store  Type(*Zoned) Len(3,0)
				
		_Below  = *False
		_CutOff = *Zero
		_Found  = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCKey = 5 And CCMKT = Market And CCGRD = Grade +
					  And CCSTR = Store And CCWFLG = *Blank
				_Below = *True
			EndIf
				
			If CCKEY = 9 And CCMKT = Market And CCGRD = Grade And CCSTR = Store +
					 And CCWFLG = *Blank
				_CutOff = CCCCO
				_Found  = *True
				
				If CCCHGD = TimeStamp
					_Changed = *On
				EndIf
			EndIf
			
			If _Found And _Below
				Leave
			EndIf
		EndDo
	EndSr
	
	// Class
	BegSr GetCutOff Access(*Public)
		DclSrParm Class Type(*Zoned) Len(4,0)
				
		_Below  = *False
		_CutOff = *Zero
		_Found  = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCKey < 8 And CCkey > 4 And CCcls = Class And CCWFLG = *Blank
				_Below = *True
			EndIf
				
			If CCKEY = 8 And CCcls = Class And CCWFLG = *Blank
				_CutOff = CCCCO
				_Found  = *True
				
				If CCCHGD = TimeStamp
					_Changed = *On
				EndIf
			EndIf
			
			If _Found And _Below
				Leave
			EndIf
		EndDo
	EndSr
	
	// Class Market
	BegSr GetCutOff Access(*Public)
		DclSrParm Class Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char) Len(2)
				
		_Below  = *False
		_CutOff = *Zero
		_Found  = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCKey < 7 And CCkey > 4 And CCcls = Class And CCmkt = Market And CCWFLG = *Blank
				_Below = *True
			EndIf
				
			If CCKEY = 7 And CCcls = Class And CCmkt = Market And CCWFLG = *Blank
				_CutOff = CCCCO
				_Found  = *True
				
				If CCCHGD = TimeStamp
					_Changed = *On
				EndIf
			EndIf
			
			If _Found And _Below
				Leave
			EndIf
		EndDo
	EndSr
	
	// Class Market Grade
	BegSr GetCutOff Access(*Public)
		DclSrParm Class Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade  Type(*Char) Len(3)
				
		_Below  = *False
		_CutOff = *Zero
		_Found  = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCKey = 5 And CCcls = Class And CCmkt = Market And CCgrd = Grade +
					 And CCWFLG = *Blank
				_Below = *True
			EndIf
				
			If CCKEY = 6 And CCcls = Class And CCmkt = Market And CCgrd = Grade And CCWFLG = *Blank
				_CutOff = CCCCO
				_Found  = *True
				
				If CCCHGD = TimeStamp
					_Changed = *On
				EndIf
			EndIf
			
			If _Found And _Below
				Leave
			EndIf
		EndDo
	EndSr
	
	// Class Market Grade Store
	BegSr GetCutOff Access(*Public)
		DclSrParm Class Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade  Type(*Char) Len(3)
		DclSrParm Store  Type(*Zoned) Len(3,0)
				
		_Below  = *False
		_CutOff = *Zero
		_Found  = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
				
			If CCKEY = 5 And CCcls = Class And CCmkt = Market And CCgrd = Grade And CCstr = Store +
					 And CCWFLG = *Blank
				_CutOff = CCCCO
				_Found  = *True
				
				If CCCHGD = TimeStamp
					_Changed = *On
				EndIf
				
				Leave
			EndIf
		EndDo
	EndSr
	
	
	//------------------------------------------------------------------------------
	// Dept level (12)
	BegSR UpdateCutOff Access(*Public)
		DclSrParm CutOff Type(*Zoned) Len(5,2)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCKey = 12 And CCWFLG = *Blank
				CCCCO = CutOff
				CCCHGU = UserProfile
				CCCHGD = TimeStamp

				Update MDSSRCCO
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRCCO
		
		CCKEY  = 12
		CCDEPT = Department
		CCCCO  = CutOff
		CCKYVL = Department.ToString('000')
		CCCHGU = UserProfile
		CCCHGD = TimeStamp

		memRecords += 1
		Write MDSSRCCO
	EndSr
	
	// Dept Market level (11)
	BegSR UpdateCutOff Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm CutOff Type(*Zoned) Len(5,2)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCkey = 11 And CCmkt = Market And CCWFLG = *Blank
				CCCCO = CutOff
				CCCHGU = UserProfile
				CCCHGD = TimeStamp

				Update MDSSRCCO
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRCCO
		
		CCKEY  = 11
		CCDEPT = Department
		CCMKT  = Market
		CCCCO  = CutOff
		CCKYVL = Market
		CCCHGU = UserProfile
		CCCHGD = TimeStamp
				
		memRecords += 1
		Write MDSSRCCO
	EndSr

	// Dept Market Grade level (10)
	BegSR UpdateCutOff Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade  Type(*Char) Len(3)
		DclSrParm CutOff Type(*Zoned) Len(5,2)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCkey = 10 And CCmkt = Market And CCGRD = Grade And CCWFLG = *Blank
				CCCCO = CutOff
				CCCHGU = UserProfile
				CCCHGD = TimeStamp

				Update MDSSRCCO
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRCCO
		
		CCKEY  = 10
		CCDEPT = Department
		CCMKT  = Market
		CCGRD  = Grade
		CCCCO  = CutOff
		CCKYVL = Grade
		CCCHGU = UserProfile
		CCCHGD = TimeStamp

		memRecords += 1
		Write MDSSRCCO
	EndSr

	// Dept Market Grade and Store level (9)
	BegSR UpdateCutOff Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade  Type(*Char) Len(3)
		DclSrParm Store  Type(*Zoned) Len(3,0)
		DclSrParm CutOff Type(*Zoned) Len(5,2)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCkey = 9 And CCmkt = Market And CCGRD = Grade And CCSTR = Store +
					 And CCWFLG = *Blank
				CCCCO = CutOff
				CCCHGU = UserProfile
				CCCHGD = TimeStamp

				Update MDSSRCCO
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRCCO
		
		CCKEY  = 9
		CCDEPT = Department
		CCMKT  = Market
		CCGRD  = Grade
		CCSTR  = Store
		CCCCO  = CutOff
		CCKYVL = Store.ToString('000')
		CCCHGU = UserProfile
		CCCHGD = TimeStamp
				
		memRecords += 1
		Write MDSSRCCO
	EndSr
	
	// Dept Class level (8)
	BegSR UpdateCutOff Access(*Public)
		DclSrParm Class Type(*Zoned) Len(4,0)
		DclSrParm CutOff Type(*Zoned) Len(5,2)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCkey = 8 And CCcls = Class And CCWFLG = *Blank
				CCCCO = CutOff
				CCCHGU = UserProfile
				CCCHGD = TimeStamp

				Update MDSSRCCO
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRCCO
		
		CCKEY  = 8
		CCDEPT = Department
		CCCLS  = Class
		CCCCO  = CutOff
		CCKYVL = Class.ToString('0000')
		CCCHGU = UserProfile
		CCCHGD = TimeStamp
				
		memRecords += 1
		Write MDSSRCCO
	EndSr
	
	// Dept Class Market level (7)
	BegSR UpdateCutOff Access(*Public)
		DclSrParm Class Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm CutOff Type(*Zoned) Len(5,2)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCkey = 7 And CCcls = Class And CCmkt = Market And CCWFLG = *Blank
				CCCCO = CutOff
				CCCHGU = UserProfile
				CCCHGD = TimeStamp

				Update MDSSRCCO
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRCCO
		
		CCKEY  = 7
		CCDEPT = Department
		CCCLS  = Class
		CCMKT  = Market
		CCCCO  = CutOff
		CCKYVL = Market
		CCCHGU = UserProfile
		CCCHGD = TimeStamp
				
		memRecords += 1
		Write MDSSRCCO
	EndSr
	
	// Dept Class Market Grade level (6)
	BegSR UpdateCutOff Access(*Public)
		DclSrParm Class Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade  Type(*Char) Len(3)
		DclSrParm CutOff Type(*Zoned) Len(5,2)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCkey = 6 And CCcls = Class And CCmkt = Market And CCgrd = Grade And CCWFLG = *Blank
				CCCCO = CutOff
				CCCHGU = UserProfile
				CCCHGD = TimeStamp

				Update MDSSRCCO
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRCCO
		
		CCKEY  = 6
		CCDEPT = Department
		CCCLS  = Class
		CCMKT  = Market
		CCGRD  = Grade
		CCCCO  = CutOff
		CCKYVL = Grade
		CCCHGU = UserProfile
		CCCHGD = TimeStamp
				
		memRecords += 1
		Write MDSSRCCO
	EndSr
	
	// Dept Class Market Grade Store level (5)
	BegSR UpdateCutOff Access(*Public)
		DclSrParm Class Type(*Zoned)  Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
		DclSrParm Grade  Type(*Char)  Len(3)
		DclSrParm Store  Type(*Zoned) Len(3,0)
		DclSrParm CutOff Type(*Zoned) Len(5,2)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCkey = 5 And CCcls = Class And CCmkt = Market And CCgrd = Grade And CCstr = Store +
					 And CCWFLG = *Blank
				CCCCO  = CutOff
				CCCHGU = UserProfile
				CCCHGD = TimeStamp

				Update MDSSRCCO
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRCCO
		
		CCKEY  = 5
		CCDEPT = Department
		CCCLS  = Class
		CCMKT  = Market
		CCGRD  = Grade
		CCSTR  = Store
		CCCCO  = CutOff
		CCKYVL = Store.ToString('000')
		CCCHGU = UserProfile
		CCCHGD = TimeStamp
				
		memRecords += 1
		Write MDSSRCCO
	EndSr
	
	
	//------------------------------------------------------------------------------
	// Get Default for Dept level
	BegFunc GetDftCutOff Type(*Zoned) Len(5,2) Access(*Public)
				
		GetCutOff()
		LeaveSR _CutOff
		
	EndFunc
	
	// Get Default for Dept Market
	BegFunc GetDftCutOff Type(*Zoned) Len(5,2) Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
				
		GetCutOff(Market)
		If _Found
			LeaveSR _CutOff
		Else
			// Dept level default
			GetCutOff()
			LeaveSR _CutOff
		EndIf
		
	EndFunc

	// Get Default for Dept Market Grade
	BegFunc GetDftCutOff Type(*Zoned) Len(5,2) Access(*Public)
		DclSrParm Market    Type(*Char) Len(2)
		DclSrParm DeptGrade Type(*Char) Len(3)
				
		GetCutOff(Market, DeptGrade)
		If _Found
			LeaveSR _CutOff
		Else
			GetCutOff(Market)
			If _Found
				LeaveSR _CutOff
			Else
				GetCutOff()
				LeaveSR _CutOff
			EndIf
		EndIf
	EndFunc
		
	// Get Default for Class Market
	BegFunc GetDftCutOff Type(*Zoned) Len(5,2) Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
				
		GetCutOff(Class)			// Class
		If _Found
			LeaveSR _CutOff
		Else
			GetCutOff(Market)		// Dept Market
			If _Found
				LeaveSR _CutOff
			Else
				GetCutOff()			// Dept
				LeaveSR _CutOff
			EndIf
		EndIf
	EndFunc
	
	// Get Default for Class Market Grade
	BegFunc GetDftCutOff Type(*Zoned) Len(5,2) Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
		DclSrParm Grade  Type(*Char)  Len(3)
				
		GetCutOff(Class, Market)			// Class Market
		If _Found
			LeaveSR _CutOff
		Else
			GetCutOff(Class)				// Class
			If _Found
				LeaveSR _CutOff
			Else
				GetCutOff(Market, Grade)	// Dept Market Grade
				If _Found
					LeaveSR _CutOff
				Else
					GetCutOff(Market)		// Dept Market
					If _Found
						LeaveSR _CutOff
					Else
						GetCutOff()			// Dept
						LeaveSR _CutOff
					EndIf
				EndIf
			EndIf
		EndIf
	EndFunc

	// Get Default for Class Market Grade Store
	BegFunc GetDftCutOff Type(*Zoned) Len(5,2) Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
		DclSrParm Grade  Type(*Char)  Len(3)
		DclSrParm Store  Type(*Zoned) Len(3,0)
				
		GetCutOff(Class, Market, Grade)				// Class Market Grade
		If _Found
			LeaveSR _CutOff
		Else
			GetCutOff(Class, Market)				// Class Market
			If _Found
				LeaveSR _CutOff
			Else
				GetCutOff(Class)					// Class
				If _Found
					LeaveSR _CutOff
				Else
					GetCutOff(Market, Grade, Store)	// Dept Market Grade Store
					If _Found
						LeaveSR _CutOff
					Else
						GetCutOff(Market, Grade)	// Dept Market Grade
						If _Found
							LeaveSR _CutOff
						Else
							GetCutOff(Market)		// Dept Market
							If _Found
								LeaveSR _CutOff
							Else
								GetCutOff()			// Dept
								LeaveSR _CutOff
							EndIf
						EndIf
					EndIf
				EndIf
			EndIf
		EndIf
	EndFunc


	//------------------------------------------------------------------------------
	// Delete Dept Market (11)
	BegSr DeleteCutOff Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
	
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCkey = 11 And CCmkt = Market And CCWFLG = *Blank
				CCWFLG = 'D'
				CCCHGU = UserProfile
				CCCHGD = TimeStamp

				Update MDSSRCCO
				LeaveSR
			EndIf
		EndDo
	EndSr

	// Delete Dept Market and Grade (10)
	BegSr DeleteCutOff Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade  Type(*Char) Len(3)
	
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCkey = 10 And CCmkt = Market And CCGRD = Grade And CCWFLG = *Blank
				CCWFLG = 'D'
				CCCHGU = UserProfile
				CCCHGD = TimeStamp

				Update MDSSRCCO
				LeaveSR
			EndIf
		EndDo
	EndSr
	
	// Delete Dept Market Grade and Store (9)
	BegSr DeleteCutOff Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade  Type(*Char) Len(3)
		DclSrParm Store  Type(*Zoned) Len(3,0)
	
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCkey = 9 And CCmkt = Market And CCGRD = Grade And CCSTR = Store +
					 And CCWFLG = *Blank
				CCWFLG = 'D'
				CCCHGU = UserProfile
				CCCHGD = TimeStamp

				Update MDSSRCCO
				LeaveSR
			EndIf
		EndDo
	EndSr

	// Delete Class (8)
	BegSr DeleteCutOff Access(*Public)
		DclSrParm Class Type(*Zoned) Len(4,0)
	
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCkey = 8 And CCcls = Class And CCWFLG = *Blank
				CCWFLG = 'D'
				CCCHGU = UserProfile
				CCCHGD = TimeStamp

				Update MDSSRCCO
				LeaveSR
			EndIf
		EndDo
	EndSr

	// Delete Class Market (7)
	BegSr DeleteCutOff Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
	
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCkey = 7 And CCcls = Class And CCmkt = Market And CCWFLG = *Blank
				CCWFLG = 'D'
				CCCHGU = UserProfile
				CCCHGD = TimeStamp

				Update MDSSRCCO
				LeaveSR
			EndIf
		EndDo
	EndSr

	// Delete Class Market Grade (6)
	BegSr DeleteCutOff Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
		DclSrParm Grade  Type(*Char)  Len(3)
	
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCkey = 6 And CCcls = Class And CCmkt = Market And CCgrd = Grade +
					 And CCWFLG = *Blank
				CCWFLG = 'D'
				CCCHGU = UserProfile
				CCCHGD = TimeStamp

				Update MDSSRCCO
				LeaveSR
			EndIf
		EndDo
	EndSr

	// Delete Class Market Grade Store (5)
	BegSr DeleteCutOff Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
		DclSrParm Grade  Type(*Char)  Len(3)
		DclSrParm Store  Type(*Zoned) Len(3,0)
	
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If CCkey = 5 And CCcls = Class And CCmkt = Market And CCgrd = Grade +
					 And CCstr = Store And CCWFLG = *Blank
				CCWFLG = 'D'
				CCCHGU = UserProfile
				CCCHGD = TimeStamp

				Update MDSSRCCO
				LeaveSR
			EndIf
		EndDo
	EndSr


	//------------------------------------------------------------------------------
	BegSr Save_WorkingModel Access(*Public)
		DclSrParm SaveToMember Type(*Char) Len(10)
		
		If DSSRCCO1.IsOpen
			Close DSSRCCO1
		EndIf
		
		DSSRCCO1.MemberName = SaveToMember.Trim()			
		Open DSSRCCO1
		
		DeleteRange DSSRCCO1 FirstKey(1) LastKey(12)
		
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			If CCWFLG = *Blank
				Write UDSSRCCO
			EndIf
		EndDo	
		
		Close DSSRCCO1
	EndSr
	
	BegSr Save_BaseModel Access(*Public)
		DclSrParm SaveToMember Type(*Char) Len(10)
		
		If DSSRCCO1.IsOpen
			Close DSSRCCO1
		EndIf
		
		DSSRCCO1.MemberName = SaveToMember.Trim()			
		Open DSSRCCO1
		
		DeleteRange DSSRCCO1 FirstKey(12, Department)
		DeleteRange DSSRCCO1 FirstKey(11, Department)
		DeleteRange DSSRCCO1 FirstKey(10, Department)
		DeleteRange DSSRCCO1 FirstKey(9,  Department)
		DeleteRange DSSRCCO1 FirstKey(8,  Department)
		DeleteRange DSSRCCO1 FirstKey(7,  Department)
		DeleteRange DSSRCCO1 FirstKey(6,  Department)
		DeleteRange DSSRCCO1 FirstKey(5,  Department)
		
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			If CCWFLG = *Blank
				Write UDSSRCCO
			EndIf
		EndDo	
		
		Close DSSRCCO1
	EndSr
	
	BegSr Rmv_Item_Rec Access(*Public)
		DclSrParm Member Type(*Char) Len(10)
		
		If DSSRCCO1.IsOpen
			Close DSSRCCO1
		EndIf
		
		DSSRCCO1.MemberName = Member.Trim()
		Open DSSRCCO1
		
		Do FromVal(1) ToVal(4) Index(KeyValue) Type(*Zoned) Len(2,0)
			DeleteRange DSSRCCO1 FirstKey(KeyValue)
		EndDo
		
		Close DSSRCCO1
	EndSr
	/EndRegion
EndClass