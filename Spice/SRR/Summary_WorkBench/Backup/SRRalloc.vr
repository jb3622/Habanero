Using System
Using System.Text

Using Disney.SRR

DclNameSpace Disney.SRR

BegClass SRRalloc Access(*Public)

	/Region Declare DataBase
	DclDB Name(SRR) DBName("TDST")
	
	DclDiskFile Name(DSSRALF) Type(*Input) Org(*Arrival) +
		DB(SRR) File('*Libl/DSSRALF') ImpOpen(*No)
		
	DclDiskFile Name(DSSRALF1) Type(*Update) Org(*Indexed) +
		DB(SRR) File('*Libl/DSSRALF1') AddRec(*Yes) ImpOpen(*No) +
		RnmFmt(RDSSRALF, UDSSRALF)

	DclMemoryFile Name(Mem) DBdesc(SRR) Filedesc('*Libl/DSSRALF') +
		RnmFmt(RDSSRALF, MDSSRALF) ImpOpen(*No)
	/EndRegion
	
	DclFld MemberName Type(*Char) Len(10)
	DclFld Department Type(*Zoned) Len(3,0)
	DclFld memRecords Type(*Integer4)
	DclFld UserProfile Type(*Char) Len(10)
	DclFld TimeStamp   Type(*TimeStamp) TimFmt(*ISO)
	
	DclFld _Alloc   Type(*Char)     Len(1)
	DclFld _Below   Type(*Boolean)
	DclFld _Found   Type(*Boolean)
	DclFld _Changed Type(*Boolean)

	
	/Region Constructor & Destructor
	BegConstructor Access(*Public)
		DclSrParm SRR        Type(ASNA.VisualRPG.Runtime.Database)
		DclSrParm MemberName Type(*Char)  Len(10)
		DclSrParm Department Type(*Zoned) Len(3,0)
		DclSrParm UserProfile Type(*Char) Len(10)
		DclSrParm TimeStamp   Type(*TimeStamp) TimFmt(*ISO)
		
		*this.SRR = SRR
		*this.MemberName = MemberName
		*this.Department = Department
		*this.UserProfile = UserProfile
		*this.TimeStamp   = TimeStamp
		
		If DSSRALF.IsOpen
			Close DSSRALF
		EndIf
		
		DSSRALF.MemberName = MemberName.Trim()
		Open DSSRALF
		
		If Not Mem.IsOpen
			Open Mem
		EndIf
		
		// Create the dataset from the iSeries file
		memRecords = *Zero
		SetLL DSSRALF Key(*Start)
		DoUntil DSSRALF.IsEof
			Read DSSRALF
			If (Not DSSRALF.IsEof) And AFWFLG = ' ' And AFKey > 4 And AFKey < 13
				memRecords += 1
				Write Mem
			EndIf
		EndDo
		
		Close DSSRALF
	EndConstructor
	/EndRegion

	/Region Properties
	BegProp NoOfRecords Type(*Integer4) Access(*Public)
		BegGet
			LeaveSR memRecords
		EndGet
	EndProp
	
	BegProp ExceptionsBelow Type(*Boolean) Access(*Public)
		BegGet
			LeaveSR _Below
		EndGet
	EndProp
	
	BegProp Value Type(*Char) Len(1) Access(*Public)
		BegGet
			LeaveSR _Alloc
		EndGet
	EndProp
	
	BegProp IsFound Type(*Boolean) Access(*Public)
		BegGet
			LeaveSR _Found
		EndGet
	EndProp
	
	BegProp IsChanged Type(*Boolean) Access(*Public)
		BegGet
			LeaveSR _Changed
		EndGet
	EndProp
	/EndRegion
	
	/Region Methods
	// Get Dept
	BegSr GetAlloc Access(*Public)
				
		_Below = *False
		_Alloc = *Blank
		_Found = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If AFkey < 12 And AFkey > 4 And AFWFLG = *Blank
				_Below = *True
			EndIf
				
			If AFkey = 12 And AFWFLG = *Blank
				_Alloc = AFAFLG
				_Found  = *True
				
				If AFCHGD = TimeStamp
					_Changed = *On
				EndIf
			EndIf
			
			If _Found And _Below
				Leave
			EndIf
		EndDo
	EndSr
	
	// Get Dept Market
	BegSr GetAlloc Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
				
		_Below  = *False
		_Alloc  = *Blank
		_Found  = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If (AFkey < 11 And AFkey > 4 And AFkey <> 8) And AFMKT = Market And AFWFLG = *Blank
				_Below = *True
			EndIf
				
			If AFkey = 11 And AFMKT = Market And AFWFLG = *Blank
				_Alloc = AFAFLG
				_Found  = *True
				
				If AFCHGD = TimeStamp
					_Changed = *On
				EndIf
			EndIf
			
			If _Found And _Below
				Leave
			EndIf
		EndDo
	EndSr
	
	// Get Dept Market Grade
	BegSr GetAlloc Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade  Type(*Char) Len(3)
				
		_Below = *False
		_Alloc = *Blank
		_Found = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If (AFkey = 9 Or AFkey = 6 Or AFkey = 5) +
					 And AFMKT = Market And AFGRD = Grade And AFWFLG = *Blank
				_Below = *True
			EndIf
				
			If AFkey = 10 And AFMKT = Market And AFGRD = Grade And AFWFLG = *Blank
				_Alloc = AFAFLG
				_Found  = *True
				
				If AFCHGD = TimeStamp
					_Changed = *On
				EndIf
			EndIf
			
			If _Found And _Below
				Leave
			EndIf
		EndDo
	EndSr

	// Get Dept Market Grade and Store
	BegSr GetAlloc Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade Type(*Char) Len(3)
		DclSrParm Store Type(*Zoned) Len(3,0)
				
		_Below = *False
		_Alloc = *Blank
		_Found = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If AFkey = 5 And AFMKT = Market And AFGRD = Grade +
					And AFSTR = Store And AFWFLG = *Blank
				_Below = *True
			EndIf
				
			If AFkey = 9 And AFmkt = Market And AFGRD = Grade +
					And AFSTR = Store And AFWFLG = *Blank
				_Alloc = AFAFLG
				_Found = *True
				
				If AFCHGD = TimeStamp
					_Changed = *On
				EndIf				
			EndIf
			
			If _Found And _Below
				Leave
			EndIf
		EndDo
	EndSr
	
	// Get Class
	BegSr GetAlloc Access(*Public)
		DclSrParm Class Type(*Zoned) Len(4,0)
				
		_Below = *False
		_Alloc = *Blank
		_Found = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If AFkey < 8 And AFkey > 4 And AFcls = Class And AFWFLG = *Blank
				_Below = *True
			EndIf
				
			If AFKEY = 8 And AFcls = Class And AFWFLG = *Blank
				_Alloc = AFAFLG
				_Found = *True
				
				If AFCHGD = TimeStamp
					_Changed = *On
				EndIf
			EndIf
			
			If _Found And _Below
				Leave
			EndIf
		EndDo
	EndSr
	
	// Get Class Market
	BegSr GetAlloc Access(*Public)
		DclSrParm Class Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char) Len(2)
				
		_Below  = *False
		_Alloc  = *Blank
		_Found  = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If AFkey < 7 And AFkey > 4 And AFcls = Class And AFmkt = Market And AFWFLG = *Blank
				_Below = *True
			EndIf
				
			If AFKEY = 7 And AFcls = Class And AFmkt = Market And AFWFLG = *Blank
				_Alloc = AFAFLG
				_Found = *True
				
				If AFCHGD = TimeStamp
					_Changed = *On
				EndIf
			EndIf
			
			If _Found And _Below
				Leave
			EndIf
		EndDo
	EndSr
	
	// Get Class Market Grade
	BegSr GetAlloc Access(*Public)
		DclSrParm Class Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade  Type(*Char) Len(3)
				
		_Below = *False
		_Alloc = *Blank
		_Found = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If AFkey = 5 And AFcls = Class And AFmkt = Market And AFgrd = Grade +
					 And AFWFLG = *Blank
				_Below = *True
			EndIf
				
			If AFKEY = 6 And AFcls = Class And AFmkt = Market And AFgrd = Grade And AFWFLG = *Blank
				_Alloc = AFAFLG
				_Found = *True
				
				If AFCHGD = TimeStamp
					_Changed = *On
				EndIf
			EndIf
			
			If _Found And _Below
				Leave
			EndIf
		EndDo
	EndSr
	
	// Get Class Market Grade Store
	BegSr GetAlloc Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
		DclSrParm Grade  Type(*Char)  Len(3)
		DclSrParm Store  Type(*Zoned) Len(3,0)
				
		_Below = *False
		_Alloc = *Blank
		_Found = *False
		_Changed = *False
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
				
			If AFKEY = 5 And AFcls = Class And AFmkt = Market And AFgrd = Grade And AFstr = Store +
					And AFWFLG = *Blank
				_Alloc = AFAFLG
				_Found  = *True
				
				If AFCHGD = TimeStamp
					_Changed = *On
				EndIf
				
				Leave
			EndIf
		EndDo
	EndSr
	
	
	//------------------------------------------------------------------------------
	// Update Dept level (12)
	BegSR UpdateAlloc Access(*Public)
		DclSrParm Alloc Type(*Char) Len(1)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If AFKey = 12 And AFWFLG = *Blank
				AFAFLG = Alloc
				AFCHGU = UserProfile
				AFCHGD = TimeStamp

				Update MDSSRALF
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRALF
		
		AFKEY  = 12
		AFDEPT = Department
		AFAFLG = Alloc
		AFKYVL = Department.ToString('000')
		AFCHGU = UserProfile
		AFCHGD = TimeStamp

		memRecords += 1
		Write MDSSRALF
	EndSr
	
	// Update Dept Market level (11)
	BegSR UpdateAlloc Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Alloc Type(*Char) Len(1)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If AFKey = 11 And AFmkt = Market And AFWFLG = *Blank
				AFAFLG = Alloc
				AFCHGU = UserProfile
				AFCHGD = TimeStamp

				Update MDSSRALF
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRALF
		
		AFKEY  = 11
		AFDEPT = Department
		AFMKT  = Market
		AFAFLG = Alloc
		AFKYVL = Market
		AFCHGU = UserProfile
		AFCHGD = TimeStamp
		
		memRecords += 1
		Write MDSSRALF
	EndSr

	// Update Dept Market Grade level (10)
	BegSR UpdateAlloc Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade Type(*Char) Len(3)
		DclSrParm Alloc Type(*Char) Len(1)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If AFKey = 10 And AFmkt = Market And AFGRD = Grade +
					 And AFWFLG = *Blank
				AFAFLG = Alloc
				AFCHGU = UserProfile
				AFCHGD = TimeStamp

				Update MDSSRALF
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRALF
		
		AFKEY  = 10
		AFDEPT = Department
		AFMKT  = Market
		AFGRD  = Grade
		AFAFLG = Alloc
		AFKYVL = Grade
		AFCHGU = UserProfile
		AFCHGD = TimeStamp
		
		memRecords += 1
		Write MDSSRALF
	EndSr

	// Update Dept Market Grade and Store level (9)
	BegSR UpdateAlloc Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade Type(*Char) Len(3)
		DclSrParm Store Type(*Zoned) Len(3,0)
		DclSrParm Alloc Type(*Char) Len(1)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If AFKey = 9 And AFmkt = Market And AFGRD = Grade +
					 And AFSTR = Store And AFWFLG = *Blank
				AFAFLG = Alloc
				AFCHGU = UserProfile
				AFCHGD = TimeStamp

				Update MDSSRALF
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRALF
		
		AFKEY  = 9
		AFDEPT = Department
		AFMKT  = Market
		AFGRD  = Grade
		AFSTR  = Store
		AFAFLG = Alloc
		AFKYVL = Store.ToString('000')
		AFCHGU = UserProfile
		AFCHGD = TimeStamp
				
		memRecords += 1
		Write MDSSRALF
	EndSr
	
	// Update Class level (8)
	BegSR UpdateAlloc Access(*Public)
		DclSrParm Class Type(*Zoned) Len(4,0)
		DclSrParm Alloc Type(*Char) Len(1)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If AFKey = 8 And AFcls = Class And AFWFLG = *Blank
				AFAFLG = Alloc
				AFCHGU = UserProfile
				AFCHGD = TimeStamp

				Update MDSSRALF
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRALF
		
		AFKEY  = 8
		AFDEPT = Department
		AFCLS  = Class
		AFAFLG = Alloc
		AFKYVL = Class.ToString('0000')
		AFCHGU = UserProfile
		AFCHGD = TimeStamp
				
		memRecords += 1
		Write MDSSRALF
	EndSr
	
	// Update Class Market level (7)
	BegSR UpdateAlloc Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
		DclSrParm Alloc  Type(*Char)  Len(1)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If AFKey = 7 And AFcls = Class And AFmkt = Market And AFWFLG = *Blank
				AFAFLG = Alloc
				AFCHGU = UserProfile
				AFCHGD = TimeStamp

				Update MDSSRALF
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRALF
		
		AFKEY  = 7
		AFDEPT = Department
		AFCLS  = Class
		AFMKT  = Market
		AFAFLG = Alloc
		AFKYVL = Market
		AFCHGU = UserProfile
		AFCHGD = TimeStamp

		memRecords += 1
		Write MDSSRALF
	EndSr
	
	// Update Class Market Grade level (6)
	BegSR UpdateAlloc Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
		DclSrParm Grade  Type(*Char)  Len(3)
		DclSrParm Alloc  Type(*Char)  Len(1)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If AFKey = 6 And AFcls = Class And AFmkt = Market And AFgrd = Grade And AFWFLG = *Blank
				AFAFLG = Alloc
				AFCHGU = UserProfile
				AFCHGD = TimeStamp

				Update MDSSRALF
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRALF
		
		AFKEY  = 6
		AFDEPT = Department
		AFCLS  = Class
		AFMKT  = Market
		AFGRD  = Grade
		AFAFLG = Alloc
		AFKYVL = Grade
		AFCHGU = UserProfile
		AFCHGD = TimeStamp
		
		memRecords += 1
		Write MDSSRALF
	EndSr
	
	// Update Class Market Grade level (5)
	BegSR UpdateAlloc Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
		DclSrParm Grade  Type(*Char)  Len(3)
		DclSrParm Store  Type(*Zoned) Len(3,0)
		DclSrParm Alloc  Type(*Char)  Len(1)
				
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			
			If AFKey = 5 And AFcls = Class And AFmkt = Market And AFgrd = Grade +
					And AFstr = Store And AFWFLG = *Blank
				AFAFLG = Alloc
				AFCHGU = UserProfile
				AFCHGD = TimeStamp

				Update MDSSRALF
				LeaveSR
			EndIf
		EndDo
		
		Clear MDSSRALF
		
		AFKEY  = 5
		AFDEPT = Department
		AFCLS  = Class
		AFMKT  = Market
		AFGRD  = Grade
		AFSTR  = Store
		AFAFLG = Alloc
		AFKYVL = Store.ToString('000')
		AFCHGU = UserProfile
		AFCHGD = TimeStamp
		
		memRecords += 1
		Write MDSSRALF
	EndSr
	
	
	//------------------------------------------------------------------------------
	// Get Default for Dept
	BegFunc GetDftAlloc Type(*Char) Len(1) Access(*Public)
				
		GetAlloc()
		LeaveSr _Alloc
		
	EndFunc
	
	// Get Default for Dept Market
	BegFunc GetDftAlloc Type(*Char) Len(1) Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
				
		GetAlloc(Market)
		If _Found
			LeaveSR _Alloc
		Else
			// Dept level default
			GetAlloc()
			LeaveSR _Alloc
		EndIf
		
	EndFunc

	// Get Default for Dept Market Grade
	BegFunc GetDftAlloc Type(*Char) Len(1) Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm DeptGrade Type(*Char) Len(3)
				
		GetAlloc(Market, DeptGrade)
		If _Found
			LeaveSR _Alloc
		Else
			GetAlloc(Market)
			If _Found
				LeaveSR _Alloc
			Else
				GetAlloc()
				LeaveSR _Alloc
			EndIf
		EndIf
	EndFunc

	// Get Default for Class Market
	BegFunc GetDftAlloc Type(*Char) Len(1) Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
				
		GetAlloc(Class)				// Class
		If _Found
			LeaveSR _Alloc
		Else
			GetAlloc(Market)		// Dept Market
			If _Found
				LeaveSR _Alloc
			Else
				GetAlloc()			// Dept
				LeaveSR _Alloc
			EndIf
		EndIf
	EndFunc

	// Get Default for Class Market Grade
	BegFunc GetDftAlloc Type(*Char) Len(1) Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
		DclSrParm Grade  Type(*Char)  Len(3)
				
		GetAlloc(Class, Market)				// Class Market
		If _Found
			LeaveSR _Alloc
		Else
			GetAlloc(Class)					// Class
			If _Found
				LeaveSR _Alloc
			Else
				GetAlloc(Market, Grade)		// Dept Market Grade
				If _Found
					LeaveSR _Alloc
				Else
					GetAlloc(Market)		// Dept Market
					If _Found
						LeaveSR _Alloc
					Else
						GetAlloc()			// Dept
						LeaveSR _Alloc
					EndIf
				EndIf
			EndIf
		EndIf
	EndFunc

	// Get Default for Class Market Grade Store
	BegFunc GetDftAlloc Type(*Char) Len(1) Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
		DclSrParm Grade  Type(*Char)  Len(3)
		DclSrParm Store  Type(*Zoned) Len(3,0)
				
		GetAlloc(Class, Market, Grade)				// Class Market Grade
		If _Found
			LeaveSR _Alloc
		Else
			GetAlloc(Class, Market)					// Class Market
			If _Found
				LeaveSR _Alloc
			Else
				GetAlloc(Class)						// Class
				If _Found
					LeaveSR _Alloc
				Else
					GetAlloc(Market, Grade, Store)	// Dept Market Grade Store
					If _Found
						LeaveSR _Alloc
					Else
						GetAlloc(Market, Grade)		// Dept Market Grade
						If _Found
							LeaveSR _Alloc
						Else
							GetAlloc(Market)		// Dept Market
							If _Found
								LeaveSR _Alloc
							Else
								GetAlloc()			// Dept
								LeaveSR _Alloc
							EndIf
						EndIf
					EndIf
				EndIf
			EndIf
		EndIf
	EndFunc


	//------------------------------------------------------------------------------
	// Delete Dept Market (11)
	BegSr DeleteAlloc Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
	
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*integer4)
			Chain Mem Key(RRN)
			
			If AFkey = 11 And AFmkt = Market And AFWFLG = *Blank
				AFWFLG = 'D'
				AFCHGU = UserProfile
				AFCHGD = TimeStamp

				Update MDSSRALF
				LeaveSR
			EndIf
		EndDo
	EndSr

	// Delete Dept Market Grade (10)
	BegSr DeleteAlloc Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade  Type(*Char) Len(3)
	
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*integer4)
			Chain Mem Key(RRN)
			
			If AFkey = 10 And AFmkt = Market And AFGRD = Grade And AFWFLG = *Blank
				AFWFLG = 'D'
				AFCHGU = UserProfile
				AFCHGD = TimeStamp

				Update MDSSRALF
				LeaveSR
			EndIf
		EndDo
	EndSr

	// Delete Dept Market Grade and Store (9)
	BegSr DeleteAlloc Access(*Public)
		DclSrParm Market Type(*Char) Len(2)
		DclSrParm Grade  Type(*Char) Len(3)
		DclSrParm Store  Type(*Zoned) Len(3,0)
	
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*integer4)
			Chain Mem Key(RRN)
			
			If AFkey = 9 And AFmkt = Market And AFGRD = Grade And AFSTR = Store +
					 And AFWFLG = *Blank
				AFWFLG = 'D'
				AFCHGU = UserProfile
				AFCHGD = TimeStamp

				Update MDSSRALF
				LeaveSR
			EndIf
		EndDo
	EndSr
	
	// Delete Class (8)
	BegSr DeleteAlloc Access(*Public)
		DclSrParm Class Type(*Zoned) Len(4,0)
	
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*integer4)
			Chain Mem Key(RRN)
			
			If AFkey = 8 And AFcls = Class And AFWFLG = *Blank
				AFWFLG = 'D'
				AFCHGU = UserProfile
				AFCHGD = TimeStamp

				Update MDSSRALF
				LeaveSR
			EndIf
		EndDo
	EndSr
	
	// Delete Class Market (7)
	BegSr DeleteAlloc Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
	
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*integer4)
			Chain Mem Key(RRN)
			
			If AFkey = 7 And AFcls = Class And AFmkt = Market And AFWFLG = *Blank
				AFWFLG = 'D'
				AFCHGU = UserProfile
				AFCHGD = TimeStamp

				Update MDSSRALF
				LeaveSR
			EndIf
		EndDo
	EndSr
	
	// Delete Class Market Grade (6)
	BegSr DeleteAlloc Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
		DclSrParm Grade  Type(*Char)  Len(3)
	
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*integer4)
			Chain Mem Key(RRN)
			
			If AFkey = 6 And AFcls = Class And AFmkt = Market And AFgrd = Grade +
					 And AFWFLG = *Blank
				AFWFLG = 'D'
				AFCHGU = UserProfile
				AFCHGD = TimeStamp

				Update MDSSRALF
				LeaveSR
			EndIf
		EndDo
	EndSr
	
	// Delete Class Market Grade Store (5)
	BegSr DeleteAlloc Access(*Public)
		DclSrParm Class  Type(*Zoned) Len(4,0)
		DclSrParm Market Type(*Char)  Len(2)
		DclSrParm Grade  Type(*Char)  Len(3)
		DclSrParm Store  Type(*Zoned) Len(3,0)
	
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*integer4)
			Chain Mem Key(RRN)
			
			If AFkey = 5 And AFcls = Class And AFmkt = Market And AFgrd = Grade +
					 And AFstr = Store And AFWFLG = *Blank
				AFWFLG = 'D'
				AFCHGU = UserProfile
				AFCHGD = TimeStamp

				Update MDSSRALF
				LeaveSR
			EndIf
		EndDo
	EndSr
	
	
	//------------------------------------------------------------------------------
	BegSr Save_WorkingModel Access(*Public)
		DclSrParm SaveToMember Type(*Char) Len(10)
		
		If DSSRALF1.IsOpen
			Close DSSRALF1
		EndIf
	
		DSSRALF1.MemberName = SaveToMember.Trim()
		Open DSSRALF1
		
		DeleteRange DSSRALF1 FirstKey(1) LastKey(12)
		
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			If AFWFLG = *Blank
				Write UDSSRALF
			EndIf
		EndDo
		
		Close DSSRALF1
	EndSr
	
	BegSr Save_BaseModel Access(*Public)
		DclSrParm SaveToMember Type(*Char) Len(10)
		
		If DSSRALF1.IsOpen
			Close DSSRALF1
		EndIf
	
		DSSRALF1.MemberName = SaveToMember.Trim()
		Open DSSRALF1
		
		DeleteRange DSSRALF1 FirstKey(12, Department)
		DeleteRange DSSRALF1 FirstKey(11, Department)
		DeleteRange DSSRALF1 FirstKey(10, Department)
		DeleteRange DSSRALF1 FirstKey(9,  Department)
		DeleteRange DSSRALF1 FirstKey(8,  Department)
		DeleteRange DSSRALF1 FirstKey(7,  Department)
		DeleteRange DSSRALF1 FirstKey(6,  Department)
		DeleteRange DSSRALF1 FirstKey(5,  Department)
		
		Do FromVal(1) ToVal(memRecords) Index(RRN) Type(*Integer4)
			Chain Mem Key(RRN)
			If AFWFLG = *Blank
				Write UDSSRALF
			EndIf
		EndDo
		
		Close DSSRALF1
	EndSr
	
	BegSr Rmv_Item_Rec Access(*Public)
		DclSrParm Member Type(*Char) Len(10)
		
		If DSSRALF1.IsOpen
			Close DSSRALF1
		EndIf
		
		DSSRALF1.MemberName = Member.Trim()
		Open DSSRALF1
		
		Do FromVal(1) ToVal(4) Index(KeyValue) Type(*Zoned) Len(2,0)
			DeleteRange DSSRALF1 FirstKey(KeyValue)
		EndDo
		
		Close DSSRALF1
	EndSr
	/EndRegion
EndClass