// ===============================================
// Joseph Urbina
// 11th June 2010
// CopyItem Class
// Primer for the Copy Item Function. Selected from the Copy button off the Item Selection Form
//------------------------------------------------
// Modification
//================================================

Using System
Using System.Text
Using System.Data
Using System.Collections

BegClass CopyItem Access(*Public)

/Region Declares

	DclFld PgmDB            Type(ASNA.VisualRPG.Runtime.Database) Access(*Private)
	DclFld User             Type(Disney.Menu.Users)               Access(*Private)
	DclFld Environment      Type(Disney.Menu.Environments)        Access(*Private)
	DclFld ItemStyle        Type(Disney.DA.IP400.ItemStyle)       Access(*Private)
	DclFld ItemSize         Type(Disney.DA.IP400.ItemSize)        Access(*Private)
	DclFld ItemsBO          Type(Disney.Spice.ItemsBO.Items)      Access(*Private)
	DclFld CopyStyleDetails Type(CopyStyleDetails)                 Access(*Private)
	DclFld SelectMarket     Type(SelectMarket)		    		  Access(*Private)
	DclFld AddSizeGroup     Type(AddSizeGroup)		    		  Access(*Private)
	DclFld SelectSize		Type(SelectSize)					  Access(*Private)
	DclFld AddMarketSize    Type(AddMarketSize)                   Access(*Private)	
	DclFld qNextForm        Type(System.Collections.Stack)        Access(*Private)
	DclFld Class			Type(Int16)							  Access(*Private)	
	DclFld Vendor			Type(Int32)							  Access(*Private)
	DclFld Style			Type(Int16)							  Access(*Private)
	DclFld Colour			Type(Int16)							  Access(*Private)
	DclFld Size				Type(Int16)							  Access(*Private)
	DclFld AddOnlineEcomDetails   Type(AddOnlineEcomDetails)      Access(*Private)
	DclFld SelectSizeBandM      Type(SelectSizeBandM)             Access(*Private)
	
/EndRegion

/Region Contructor	

	BegConstructor Access(*Public)
		DclSrParm PgmDB       Type(ASNA.VisualRPG.Runtime.Database)
		DclSrParm User        Type(Disney.Menu.Users)
		DclSrParm Environment Type(Disney.Menu.Environments)
		
		*this.PgmDB = PgmDB
		*this.User  = User
		*this.Environment = Environment
	EndConstructor
	
/EndRegion
	
/Region Methods
	 
	BegSr Copy Access(*Public)
		DclSrParm Class  Type(Int16)
		DclSrParm Vendor Type(Int32)
		DclSrParm Style  Type(Int16)
		DclSrParm Colour Type(Int16)
		DclSrParm Size   Type(Int16)
				
		*This.Class   = Class
		*This.Vendor  = Vendor
		*This.Style   = Style
		*This.Colour  = Colour
		*This.Size    = Size
		
		DclFld NextForm Type(String)
										
		If ItemsBO = *Nothing
			ItemsBO = *New Disney.Spice.ItemsBO.Items(PgmDB,User,Environment)
		EndIf
		
		//Retrieve Item Style Details and save
		ItemStyle = ItemsBO.GetItemStyle(Class,Vendor,Style,Colour)
		ItemsBO.SaveStyleDetails(ItemStyle)
		
		//Retrieve Item Size Details
		ItemSize = ItemsBo.GetItemSize(Class, Vendor, Style, Colour, Size)
		
		Try 
			qNextForm = *New System.Collections.Stack()
			qNextForm.Push('SelectMarkets')
			
			DoUntil NextForm = 'End'
				NextForm = qNextForm.Peek() *As String
				
				Select
				When NextForm = 'SelectMarkets'
					SelectMarkets()
				When NextForm = 'ItemDetails'
					ItemDetails()
				When NextForm = 'AddOnlineEcomDetails'
					AddOnlineEcomDetail(Class,Vendor,Style,Colour)
				When NextForm = 'SizeGroups'
					SizeGroups()
				When NextForm = 'SizesBandM'
					SizesBandM()
				When NextForm = 'Sizes'
					Sizes()
				When NextForm = 'MarketSizes'
					MarketSizes()
				When NextForm = 'WriteItem'
					WriteItem()
				EndSL
			EndDo
		Catch Name(exc) Type(Exception)
			//MsgBox TITLE('Error') Msg(exc.Message)  ICON(*Stop)
		EndTry
	EndSr
		
	BegSr SelectMarkets Access(*Private)
		
		DclFld MktList Type(StringBuilder)
		DclFld dv      Type(DataView)
		DclFld Markets Type(ArrayList)
		
		// Retrieve Authorised Markets ...
		Markets = ItemsBO.GetItemMarkets(Class,Vendor,Style,Colour,Size)
		ItemsBO.GetAuthorisedMarketsTbl()
		
		// Select previously Selected Markets ...
		dv = *New DataView(ItemsBO.SpiceDataSet.Tables("DomainMarkets"))
		ForEach MarketRow Collection(dv) Type(DataRowView)
			If Markets.Contains(MarketRow["IPMarket"])
				MarketRow.Item("Select")  = *True
			Else
				MarketRow.Item("Protect") = *False
				MarketRow.Item("Select")  = *False
			EndIf
		EndFor		
								
		If SelectMarket = *Nothing
			SelectMarket = *New SelectMarket(User,Environment,ItemsBO)
		EndIf
				
		SelectMarket.SelectMarkets()
		If SelectMarket.DialogResult = System.Windows.Forms.DialogResult.Abort
			qNextForm.Push('End')
			LeaveSR
		EndIf
		
		// Generate list of Selected countries for the Copy Item Style Form
		MktList = *New StringBuilder()
		
		dv = *New DataView(ItemsBO.SpiceDataSet.Tables("DomainMarkets"))
		dv.RowFilter = "Select = true"
		ForEach TickedMarket Collection(dv) Type(DataRowView)
			MktList.Append(TickedMarket["IPMarket"] *As String)
			MktList.Append(",")
		EndFor
		
		If MktList.Length > *Zero
			MktList.Remove(MktList.Length-1,1)
			ItemsBO.SelectedMarkets = MktList.ToString()
		EndIf
		
		// Generate the price matrix table. This will generate a table from existing IMI records
		// If they don't exist default retail prices will be generated.
		ItemsBO.GenerateCopyRetailPriceTbl(ItemStyle.Retail,Class,Vendor,Style,Colour,Size)
		
		// Proceed to next form
		qNextForm.Push('ItemDetails')
	EndSr
	
	BegSr ItemDetails Access(*Private)
	
		//qNextForm.Pop()    // Car'nt go back from here
		CopyStyleDetails = *Nothing
		CopyStyleDetails = *New CopyStyleDetails(PgmDB,User,Environment,ItemsBO, ItemStyle)
				
		Try
			CopyStyleDetails.ShowDialog()
					
			If CopyStyleDetails.DialogResult = System.Windows.Forms.DialogResult.Abort
				qNextForm.Push('End')
				LeaveSR
			EndIf
			
			If CopyStyleDetails.DialogResult = System.Windows.Forms.DialogResult.Retry
				qNextForm.Pop()
				LeaveSR
			EndIf
			
			If(ItemForOnlineEcom() = *True)
				qNextForm.Push('AddOnlineEcomDetails')
			Else
				qNextForm.Push('SizeGroups')
			EndIf	
					
		Catch Name(exc) Type(Exception)
			//MsgBox TITLE('Error') Msg(exc.Message)  ICON(*Stop)
		EndTry
	EndSr
	
	BegSr AddOnlineEcomDetail Access(*Private)			
		DclSrParm Class  Type(Int16)
		DclSrParm Vendor Type(Int32)
		DclSrParm Style  Type(Int16)
		DclSrParm Colour Type(Int16)
		
		AddOnlineEcomDetails = *Nothing
		AddOnlineEcomDetails = *New AddOnlineEcomDetails(PgmDB,User,Environment,ItemsBO, ItemStyle)
				
		AddOnlineEcomDetails.ShowDialog()
		If AddOnlineEcomDetails.DialogResult = System.Windows.Forms.DialogResult.Abort
			qNextForm.Push('End')
			LeaveSR
		EndIf
		
		If AddOnlineEcomDetails.DialogResult = System.Windows.Forms.DialogResult.Retry
			qNextForm.Pop()
			LeaveSR
		EndIf
		
		// Next Form
		qNextForm.Push('SizeGroups')
	EndSr
	
	BegSr SizeGroups Access(*Private)
		
		DclFld dv Type(DataView)
		
		Select
		When ItemsBO.SpiceDataSet.Tables["FilteredSizeGroups"].Rows.Count = *Zero
			
			//Settings for NO sizes
			ItemsBO.GetNoSizeTbl()
			qNextForm.Pop()
			qNextForm.Push('MarketSizes')
			LeaveSR
	
		When ItemsBO.SpiceDataSet.Tables["FilteredSizeGroups"].Rows.Count = 1		
			
			// Only one size group, so automatically select it
			dv = *New DataView(ItemsBO.SpiceDataSet.Tables["FilteredSizeGroups"])
			ForEach dvr Collection(dv) Type(DataRowView)
				dvr["Select"] = *True
			EndFor
			
			qNextForm.Pop()

			If(ItemForOnlineEcom() = *True)
				qNextForm.Push('Sizes')
			Else
				qNextForm.Push('SizesBandM')
			EndIf			
			LeaveSR
		
		Other
			// Show SizeGroup form for selection of Groups
			If AddSizeGroup = *Nothing
				AddSizeGroup = *New AddSizeGroup(PgmDB,ItemsBO)
			EndIf
			AddSizeGroup.ShowDialog()
			
			If AddSizeGroup.DialogResult = System.Windows.Forms.DialogResult.Abort
				qNextForm.Push('End')
				LeaveSR
			EndIf
			
			If AddSizeGroup.DialogResult = System.Windows.Forms.DialogResult.Retry
				qNextForm.Pop()
				LeaveSR
			EndIf
		
			If(ItemForOnlineEcom() = *True)
				qNextForm.Push('Sizes')
			Else
				qNextForm.Push('SizesBandM')
			EndIf	
				
			LeaveSR
		EndSL
	EndSr
	
	BegSr Sizes Access(*Private)
			
		If SelectSize = *Nothing
			SelectSize = *New SelectSize(PgmDB,ItemsBO)
		EndIf
		
		SelectSize.ShowDialog()
		
		If SelectSize.DialogResult = System.Windows.Forms.DialogResult.Abort
			qNextForm.Push('End')
			LeaveSR
		EndIf
				
		If SelectSize.DialogResult = System.Windows.Forms.DialogResult.Retry
			qNextForm.Pop()
			LeaveSR
		EndIf
		
		qNextForm.Push('MarketSizes')
	EndSr

	BegSr SizesBandM Access(*Private)
						
		SelectSizeBandM = *Nothing
		SelectSizeBandM = *New SelectSizeBandM(PgmDB,ItemsBO)
				
		SelectSizeBandM.ShowDialog()
		
		If SelectSizeBandM.DialogResult = System.Windows.Forms.DialogResult.Abort
			qNextForm.Push('End')
			LeaveSR
		EndIf
				
		If SelectSizeBandM.DialogResult = System.Windows.Forms.DialogResult.Retry
			qNextForm.Pop()
			LeaveSR
		EndIf
		
		qNextForm.Push('MarketSizes')
	EndSr
	
	BegSr MarketSizes Access(*Private)
			
		If AddMarketSize = *Nothing
			AddMarketSize = *New AddMarketSize(PgmDB,ItemsBO,Environment)
		EndIf
		
		AddMarketSize.ShowDialog()
		
		If AddMarketSize.DialogResult = System.Windows.Forms.DialogResult.Abort
			qNextForm.Push('End')
			LeaveSR
		EndIf
		
		If AddMarketSize.DialogResult = System.Windows.Forms.DialogResult.Retry
			qNextForm.Pop()
			LeaveSR
		EndIf
		
		qNextForm.Push('WriteItem')
	EndSr
	
	BegSr WriteItem Access(*Private)
		
		DclFld ReturnValue Type(Boolean)
		
		ReturnValue = ItemsBO.WriteItem()
		
		If ReturnValue = *True
			MsgBox 'Item has been written' Title("Success") Icon(*Information)
		Else
			MsgBox 'Item has NOT been written' Icon(*Exclamation)
		EndIf
		
		qNextForm.Push('End')
	EndSR
/EndRegion
	
	BegFunc ItemForOnlineEcom Type(Boolean) Access(*Private) 		
		DclFld result Type(Boolean) Inz(*False)		
		DclFld dataRow Type(DataRow)
		DclFld forOnlineEcom Type(String)
		
		Try
			dataRow = ItemsBO.SpiceDataSet.Tables("SellingChannelTable").Rows.Find(ItemsBO.SellingChannel.ToString())
			If (dataRow <> *Nothing)		
				forOnlineEcom = dataRow["OnlineECOM"] *AS String				
				If (forOnlineEcom <> *Nothing)
					If (forOnlineEcom.Trim() = "Y")
						result = *True
					Else
						result = *False
					EndIf
				EndIf
			EndIf
		Catch Name(exc) Type(Exception)
			//MsgBox TITLE('Error') Msg(exc.Message)  ICON(*Stop)
		EndTry		
		LeaveSR result
	EndFunc
	
EndClass