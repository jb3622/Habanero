// Joseph Urbina
// 17th December 2009
// DSSPARE	Approval Request
// Data Access Layer - Spice EAS
//------------------------------------------------
// Modification
//================================================
Using System
Using System.Text
Using System.Data
Using System.Collections
Using System.Diagnostics
Using IBM.Data.DB2.iSeries

BegClass DSSPARE Access(*Public)

/Region Declares
	DclFld User Type(Disney.Menu.Users) Access(*Private)
	DclFld DB2Connection Type(IBM.Data.DB2.iSeries.iDB2Connection)

	DclDB Name(PgmDB) DbName("TDST") Access(*Private)
	DclDiskFile Name(DSSPAREL1) Type(*Input) Org(*Indexed) ImpOpen(*No) DB(PgmDB) Access(*Private)
		
	DclDiskFile Name(DSSPAPPL1) Type(*Input) Org(*Indexed) ImpOpen(*No) DB(PgmDB) Access(*Private)
	DclDiskFile Name(DSSPMODL2) Type(*Input) Org(*Indexed) ImpOpen(*No) DB(PgmDB) Access(*Private)
	DclDiskFile Name(DSSPFCTL2) Type(*Input) Org(*Indexed) ImpOpen(*No) DB(PgmDB) Access(*Private)
	
	BegConstructor Access(*Public)
		DclSrParm PgmDB         Type(ASNA.VisualRPG.Runtime.Database)
		DclSrParm DB2Connection Type(IBM.Data.DB2.iSeries.iDB2Connection)
		DclSrParm User          Type(Disney.Menu.Users)
					
		*this.PgmDB = PgmDB
		*this.DB2Connection = DB2Connection
		*this.User  = User
	EndConstructor
	/EndRegion
			
/Region DSSPARE Properties
	//Approval Request ID
	DclFld pApprovalRequestID Type(Int64) Access(*Private)
	BegProp ApprovalRequestID Type(Int64) Access(*Public)
		BegGet
			LeaveSR pApprovalRequestID
		EndGet
		
		BegSet
			pApprovalRequestID = *PropVal
		EndSet
	EndProp
	
	//Application ID
	DclFld pApplicationID Type(Int32) Access(*Private)
	BegProp ApplicationID Type(Int32) Access(*Public)
		BegGet
			LeaveSR pApplicationID
		EndGet
		
		BegSet
			pApplicationID = *PropVal
		EndSet
	EndProp
	
	DclFld pApplicationDesc Type(String) Access(*Private)
	BegProp ApplicationDesc Type(String) Access(*Public)
		BegGet
			LeaveSR pApplicationDesc
		EndGet
	EndProp
	
	//Module ID
	DclFld pModuleID Type(Int32) Access(*Private)
	BegProp ModuleID Type(Int32) Access(*Public)
		BegGet
			LeaveSR pModuleID
		EndGet
		
		BegSet
			pModuleID = *PropVal
		EndSet
	EndProp
	
	DclFld pModuleName Type(String) Access(*Private)
	BegProp ModuleName Type(String) Access(*Public)
		BegGet
			LeaveSR pModuleName
		EndGet
	EndProp
	
	//Function ID
	DclFld pFunctionID Type(Int32) Access(*Private)
	BegProp FunctionID Type(Int32) Access(*Public)
		BegGet
			LeaveSR pFunctionID
		EndGet
		
		BegSet
			pFunctionID = *PropVal
		EndSet
	EndProp
	
	DclFld pFunctionName Type(String) Access(*Private)
	BegProp FunctionName Type(String) Access(*Public)
		BegGet
			LeaveSR pFunctionName
		EndGet
	EndProp
			
	//Function Code
	DclFld pFunctionCode Type(String) Access(*Private)
	BegProp FunctionCode Type(String) Access(*Public)
		BegGet
			LeaveSR pFunctionCode
		EndGet
		
		BegSet
			pFunctionCode = *PropVal
		EndSet
	EndProp
	
	DclFld pAutoApproved Type(String) Access(*Private)
	BegProp AutoApproved Type(String) Access(*Public)
		BegGet
			LeaveSR pAutoApproved
		EndGet
	EndProp
	
	DclFld pCreateReqPgm Type(String) Access(*Private)
	BegProp CreateReqPgm Type(String) Access(*Public)
		BegGet
			LeaveSR pCreateReqPgm
		EndGet
	EndProp

	DclFld pUpdateReqPgm Type(String) Access(*Private)
	BegProp UpdateReqPgm Type(String) Access(*Public)
		BegGet
			LeaveSR pUpdateReqPgm
		EndGet
	EndProp
	
	//Approval Request Status
	DclFld pApprovalRequestStatus Type(String) Access(*Private)
	BegProp ApprovalRequestStatus Type(String) Access(*Public)
		BegGet
			LeaveSR pApprovalRequestStatus
		EndGet
		
		BegSet
			pApprovalRequestStatus = *PropVal
		EndSet
	EndProp
	
	//Request Details
	DclFld pRequestDetails Type(String) Access(*Private)
	BegProp RequestDetails Type(String) Access(*Public)
		BegGet
			LeaveSR pRequestDetails
		EndGet
		
		BegSet
			pRequestDetails = *PropVal
		EndSet
	EndProp
	
	//Update Request Program
	DclFld pUpdateRequestPgm Type(String) Access(*Private)
	BegProp UpdateRequestPgm Type(String) Access(*Public)
		BegGet
			LeaveSR pUpdateRequestPgm
		EndGet
		
		BegSet
			pUpdateRequestPgm = *PropVal
		EndSet
	EndProp
	
	//Create User
	DclFld pCreateUser Type(String) Access(*Private)
	BegProp CreateUser Type(String) Access(*Public)
		BegGet
			LeaveSR pCreateUser
		EndGet
		
		BegSet
			pCreateUser = *PropVal
		EndSet
	EndProp
	
	//Create IP User
	DclFld pCreateIPUser Type(String) Access(*Private)
	BegProp CreateIPUser Type(String) Access(*Public)
		BegGet
			LeaveSR pCreateIPUser
		EndGet
		
		BegSet
			pCreateIPUser = *PropVal
		EndSet
	EndProp
	
	//Create Date
	DclFld pCreateDateTime Type(DateTime) Access(*Private)
	BegProp CreateDateTime Type(DateTime) Access(*Public)
		BegGet
			LeaveSR pCreateDateTime
		EndGet
		
		BegSet
			pCreateDateTime = *PropVal
		EndSet
	EndProp
	
	//Changed User
	DclFld pChangedUser Type(String) Access(*Private)
	BegProp ChangedUser Type(String) Access(*Public)
		BegGet
			LeaveSR pChangedUser
		EndGet
		
		BegSet
			pChangedUser = *PropVal
		EndSet
	EndProp
	
	//Changed IP User
	DclFld pChangedIPUser Type(String) Access(*Private)
	BegProp ChangedIPUser Type(String) Access(*Public)
		BegGet
			LeaveSR pChangedIPUser
		EndGet
		
		BegSet
			pChangedIPUser = *PropVal
		EndSet
	EndProp
	
	//Changed Date
	DclFld pChangedDateTime Type(DateTime) Access(*Private)
	BegProp ChangedDate Type(DateTime) Access(*Public)
		BegGet
			LeaveSR pChangedDateTime
		EndGet
		
		BegSet
			pChangedDateTime = *PropVal
		EndSet
	EndProp
	/EndRegion	
			
/Region Methods
		
	//Returns Approval Request Details 
	BegFunc GetApprovalDetails Type(Boolean) Access(*Public)
		DclSrParm ApprovalRequestID Type(Int64) 
											
		If Not DSSPAREL1.IsOpen
			Open DSSPAREL1
		EndIf
		
		Chain From(DSSPAREL1) Key(ApprovalRequestID)
		If %Found
			pApprovalRequestID     = AREID
			pApplicationID	       = AREAPP
			pModuleID		       = AREMOD
			pFunctionID	           = AREFCT
			pFunctionCode          = AREFCD
			pApprovalRequestStatus = ARESTS
			pRequestDetails        = AREDET
			pUpdateRequestPgm      = AREUPG
			pCreateUser            = ARECRU
			pCreateIPUser          = ARECRI
			pCreateDateTime        = CvtToDateTime(ARECRD,ARECRT)
			pChangedUser           = ARECHU
			pChangedIPUser         = ARECHI
			pChangedDateTime       = CvtToDateTime(ARECHD,ARECHT)
			
			GetApplicationDetails(ApplicationID)
			GetModuleDetails(pModuleID)
			GetFunctionDetails(pFunctionID)
			
			LeaveSR *On
		Else
			LeaveSR *Off
		EndIf
	EndFunc
	
	BegFunc GetApplicationDetails Type(Boolean) Access(*Public)
		DclSrParm ApplicationID Type(Int32) 
											
		If Not DSSPAPPL1.IsOpen
			Open DSSPAPPL1
		EndIf
		
		Chain From(DSSPAPPL1) Key(ApplicationID)
		If DSSPAPPL1.IsFound
			pApplicationDesc = APPNAM
			
			LeaveSR *On
		Else
		
			pApplicationDesc = String.Empty
			LeaveSR *Off
		EndIf
	EndFunc
	
	BegFunc GetModuleDetails Type(Boolean) Access(*Public)
		DclSrParm ModuleID Type(Int32) 
											
		If Not DSSPMODL2.IsOpen
			Open DSSPMODL2
		EndIf
		
		Chain From(DSSPMODL2) Key(ModuleID) Access(*NoLock)
		If %Found
			pModuleName	= MODNAM	
			
			LeaveSR *On
		Else
			pModuleName = String.Empty
			
			LeaveSR *Off
		EndIf
	EndFunc
	
	BegFunc GetFunctionDetails Type(Boolean) Access(*Public)
		DclSrParm FunctionID Type(Int32) 
											
		If Not DSSPFCTL2.IsOpen
			Open DSSPFCTL2
		EndIf
		
		Chain From(DSSPFCTL2) Key(FunctionID)
		If %Found
			pFunctionName  = FCTNAM
			pFunctionCode  = FCTCOD
			pAutoApproved  = FCTAUT
			pCreateReqPgm  = FCTCPG
			pUpdateReqPgm  = FCTUPG

			LeaveSR *On
		Else
			LeaveSR *Off
		EndIf
	EndFunc
	
	BegFunc GetApplicationTbl Type(DataTable) Access(*Public)
		
		DclFld AppTbl Type(DataTable)
		DclFld dr     Type(DataRow)
	
		AppTbl = *New DataTable("Applications")
		
		AppTbl.Columns.Add(*New DataColumn('ApplicationID', *TypeOf(Int32)))
		AppTbl.Columns.Add(*New DataColumn('Application',   *TypeOf(String)))
	
		If Not DSSPAPPL1.IsOpen
			Open DSSPAPPL1
		EndIf
	
		DoUntil DSSPAPPL1.IsEof
			Read DSSPAPPL1
			If Not DSSPAPPL1.IsEof
				dr = AppTbl.NewRow()
				
				dr['ApplicationID'] = APPID
				dr['Application']   = APPNAM.Trim()
				
				AppTbl.Rows.Add(dr)
			EndIf
		EndDo
	
		LeaveSR AppTbl
	EndFunc
	
	BegFunc GetModuleTbl Type(DataTable) Access(*Public)
	
		DclFld ModuleTbl Type(DataTable)
		DclFld dr        Type(DataRow)
	
		ModuleTbl = *New DataTable("Modules")
		ModuleTbl.Columns.Add(*New dataColumn('ApplicationID', *TypeOf(Int32)))
		ModuleTbl.Columns.Add(*New DataColumn('ModuleID',    *TypeOf(Int32)))
		ModuleTbl.Columns.Add(*New DataColumn('ModuleName',  *TypeOf(String)))
		ModuleTbl.Columns.Add(*New DataColumn('ModuleIDname',*TypeOf(String)))
		
		If Not DSSPMODL2.IsOpen
			Open DSSPMODL2
		EndIf
		
		DoUntil DSSPMODL2.IsEof
			Read DSSPMODL2
			If Not DSSPMODL2.IsEof
				dr = ModuleTbl.NewRow()
				
				dr['ApplicationID'] = MODAPP
				dr['ModuleID']      = MODID
				dr['ModuleName']    = MODNAM.Trim()
				dr['ModuleIDname']  = MODID.ToString('00000') + ' - ' + MODNAM.Trim()
				
				ModuleTbl.Rows.Add(dr)
			EndIf
		EndDo
		
		LeaveSR ModuleTbl
	EndFunc
	
	BegFunc GetFunctionTbl Type(DataTable) Access(*Public)
	
		DclFld FuncTbl Type(DataTable)
		DclFld dr      Type(DataRow)
		
		FuncTbl = *New DataTable("Functions")
		
		FuncTbl.Columns.Add(*New DataColumn('ApplicationID',*TypeOf(Int32)))
		FuncTbl.Columns.Add(*New DataColumn('ModuleID',     *TypeOf(Int32)))
		FuncTbl.Columns.Add(*New DataColumn('FunctionID',   *TypeOf(Int32)))
		FuncTbl.Columns.Add(*New DataColumn('FunctionName', *TypeOf(String)))
		FuncTbl.Columns.Add(*New DataColumn('FunctionCode', *TypeOf(String)))
		FuncTbl.Columns.Add(*New DataColumn('AutoApproved', *TypeOf(String)))
		FuncTbl.Columns.Add(*New DataColumn('CreateReqPgm', *TypeOf(String)))
		FuncTbl.Columns.Add(*New DataColumn('UpdateReqPgm', *TypeOf(String)))

		FuncTbl.Columns.Add(*New DataColumn('FunctionCodeName',*TypeOf(String)))
		
		If Not DSSPFCTL2.IsOpen
			Open DSSPFCTL2
		EndIf
		
		Setll DSSPFCTL2 Key(*Start)
		DoUntil DSSPFCTL2.IsEof
			Read DSSPFCTL2
			If not DSSPFCTL2.IsEof
				dr = FuncTbl.NewRow()
				
				dr["ApplicationID"] = FCTAPP
				dr["ModuleID"]      = FCTMOD
				dr["FunctionID"]    = FCTID
				dr["FunctionName"]  = FCTNAM.Trim()
				dr["FunctionCode"]  = FCTCOD.Trim()
				dr["AutoApproved"]  = FCTAUT.Trim()
				dr["CreateReqPgm"]  = FCTCPG.Trim()
				dr["UpdateReqPgm"]  = FCTUPG.Trim()
				dr["FunctionCodeName"] = FCTID.ToString('00000') + ' - ' + FCTNAM.Trim()

				FuncTbl.Rows.Add(dr)				
			Endif
		Enddo
		
		LeaveSR FuncTbl
	EndFunc
	
	BegFunc SearchForApprovalRequests Type(DataTable) Access(*Public)
		DclSrParm Application   Type(Int32)
		DclSrParm Modules       Type(System.Windows.Forms.CheckedListBox)
		DclSrParm Functions     Type(System.Windows.Forms.CheckedListBox)
		DclSrParm ApproveStatus Type(System.Windows.Forms.CheckedListBox)
		DclSrParm FromID        Type(Int32)
		DclSrParm ToID          Type(Int32)
		DclSrParm Details       Type(String)
		DclSrParm DisplayAll    Type(Boolean)
		
		DclFld DtaAdaptor Type(iDB2DataAdapter)
		DclFld QryString  Type(StringBuilder)
		DclFld ds         Type(DataSet)
		DclFld dr         Type(DataRow)
		DclFld X          Type(Int16)
		DclFld RequestTbl Type(DataTable)
		DclFld DSSPAAR    Type(Disney.DA.EAS.DSSPAAR)
		DclFld ApproversTbl Type(DataTable)
		DclFld ApproversDV  Type(DataView)
		
		DSSPAAR  = *New Disney.DA.EAS.DSSPAAR(PgmDB,User)
		ApproversTbl = DSSPAAR.GetApprovalRequests(ApproveStatus, FromID, ToID, DisplayAll)
				
		QryString = *New StringBuilder()
		QryString.Append("Select AREID,AREAPP,AREMOD,AREFCT,AREDET,ARECRU,ARECRD,ARECRT,APPNAM,MODNAM,FCTNAM from DSSPARE,DSSPAPP,DSSPMOD,DSSPFCT ")
		QryString.Append("Where AREAPP = APPID And AREMOD = MODID And AREFCT = FCTID ")
		
		QryString.Append("And (AREAPP =")
		QryString.Append(Application.ToString())
		//QryString.Append(Order by ARECRD, AREID)
		
		// Select Modules
	    If Modules.CheckedItems.Count <> *Zero
			For Index(X = 0) To(Modules.CheckedItems.Count - 1)
				If X = *Zero
					If QryString.Length <> *Zero
						QryString.Append(") And ")
					EndIf
				
					QryString.Append("(AREMOD = ")
					QryString.Append(Modules.CheckedItems.Item[X].ToString().SubString(0,5))
				Else
					QryString.Append(" Or AREMOD = ")
					QryString.Append(Modules.CheckedItems.Item[X].ToString().SubString(0,5))
				EndIf
			EndFor
		EndIf
				
		// Select functions
	    If Functions.CheckedItems.Count <> *Zero
			For Index(X = 0) To(Functions.CheckedItems.Count - 1)
				If X = *Zero
					If QryString.Length <> *Zero
						QryString.Append(") And ")
					EndIf
				
					QryString.Append("(AREFCT = ")
					QryString.Append(Functions.CheckedItems.Item[X].ToString().SubString(0,5))
				Else
					QryString.Append(" Or AREFCT = ")
					QryString.Append(Functions.CheckedItems.Item[X].ToString().SubString(0,5))
				EndIf
			EndFor
		EndIf
	    	    
	    If Details <> String.Empty
			QryString.Append(") And ")
			
			QryString.Append("(AREDET Like'%")
			QryString.Append(Details)
			
			QryString.Append("%'")
	    Endif
	    	    
	    // Close brackets
		QryString.Append(")")
		
		
		//Get 
		DtaAdaptor = *New iDB2DataAdapter(QryString.ToString(),DB2Connection)
		ds = *New DataSet("DB2")
		DtaAdaptor.Fill(ds)		
		
		ApproversDV  = *New DataView(ApproversTbl)
		
		RequestTbl = CreateRequestTbl()
		ForEach Request Collection(ds.Tables["Table"].Rows) Type(DataRow)
		
			ApproversDV.RowFilter = "RequestID = " + Request["AREID"].ToString()
			If ApproversDV.Count <> 0
			
				dr = RequestTbl.NewRow()
			
				dr["RequestID"]       = Request["AREID"]
				dr["ApplicationName"] = Request["APPNAM"].ToString().Trim()
				dr["ModuleName"]      = Request["MODNAM"].ToString().Trim()
				dr["FunctionName"]    = Request["FCTNAM"].ToString().Trim()
				dr["Details"]         = Request["AREDET"].ToString().Trim()
				dr["Submitted"]       = Request["ARECRU"].ToString()
				dr["CreateDateTime"]  = CvtToDateTime(Request["ARECRD"] *As Decimal, Request["ARECRT"] *As Decimal)
				dr["FunctionID"]      = Request["AREFCT"]
			
				ForEach RequestID Collection(ApproversDV) Type(DataRowView)					
					dr["Status"] = RequestID["Status"]
							
					If RequestID["ActiveFlag"].ToString() = 'Y'
						dr["ActiveFlag"] = 'Active'
					Else
						dr["ActiveFlag"] = 'Inactive'
					Endif
				EndFor
			
				RequestTbl.Rows.Add(dr)
			EndIf
		EndFor
		
		LeaveSR RequestTbl
	EndFunc
	
	BegFunc SearchForSubmittersData Type(DataTable) Access(*Public)
		DclSrParm Application   Type(Int32)
		DclSrParm Modules       Type(System.Windows.Forms.CheckedListBox)
		DclSrParm Functions     Type(System.Windows.Forms.CheckedListBox)
		DclSrParm ApproveStatus Type(System.Windows.Forms.CheckedListBox)
		DclSrParm FromID        Type(Int32)
		DclSrParm ToID          Type(Int32)
		DclSrParm Details       Type(String)
		DclSrParm DisplayAll    Type(Boolean)
		
		DclFld DtaAdaptor   Type(iDB2DataAdapter)
		DclFld UserID       Type(String)
		DclFld ds           Type(DataSet)
		DclFld RequestDR    Type(DataRow)
		Dclfld QryString    Type(StringBuilder)
		DclFld RequestTbl   Type(DataTable)
	    DclFld X            Type(Int16)
	    DclFld ItemCount    Type(Int16)

	    	
		//Get User Profile
		UserID = User.UserID.ToUpper()
								
		QryString = *New StringBuilder()
		QryString.Append("Select AREID,AREFCT,AREDET,ARECRU,ARECRD,ARECRT,ARESTS,APPNAM,MODNAM,FCTNAM from DSSPARE,DSSPAPP,DSSPMOD,DSSPFCT ")
		QryString.Append("Where AREAPP = APPID And AREMOD = MODID And AREFCT = FCTID ")
		
		// Select application
		QryString.Append("And (AREAPP = ")
		QryString.Append(Application.ToString())
		
		// Select Modules
	    If Modules.CheckedItems.Count <> *Zero
			For Index(X = 0) To(Modules.CheckedItems.Count - 1)
				If X = *Zero
					If QryString.Length <> *Zero
						QryString.Append(") And ")
					EndIf
				
					QryString.Append("(AREMOD = ")
					QryString.Append(Modules.CheckedItems.Item[X].ToString().SubString(0,5))
				Else
					QryString.Append(" Or AREMOD = ")
					QryString.Append(Modules.CheckedItems.Item[X].ToString().SubString(0,5))
				EndIf
			EndFor
		EndIf
				
		// Select functions
	    If Functions.CheckedItems.Count <> *Zero
			For Index(X = 0) To(Functions.CheckedItems.Count - 1)
				If X = *Zero
					If QryString.Length <> *Zero
						QryString.Append(") And ")
					EndIf
				
					QryString.Append("(AREFCT = ")
					QryString.Append(Functions.CheckedItems.Item[X].ToString().SubString(0,5))
				Else
					QryString.Append(" Or AREFCT = ")
					QryString.Append(Functions.CheckedItems.Item[X].ToString().SubString(0,5))
				EndIf
			EndFor
		EndIf
	    
	    If Details <> String.Empty
			QryString.Append(") And ")
			
			QryString.Append("(AREDET Like'%")
			QryString.Append(Details)
			
			QryString.Append("%'")
	    Endif
	    
	    // Select Approval Status
	    If ApproveStatus.CheckedItems.Count <> *Zero
			For Index(ItemCount = 0) To(ApproveStatus.CheckedItems.Count - 1)
				If ItemCount = *Zero
					If QryString.Length <> *Zero
						QryString.Append(") And ")
					EndIf
				
					Select
					When ApproveStatus.CheckedItems[ItemCount].ToString() = "Outstanding"
						QryString.Append("(ARESTS = ' '")

					When ApproveStatus.CheckedItems[ItemCount].ToString() = "Approved"
						QryString.Append("(ARESTS = 'A'")

					When ApproveStatus.CheckedItems[ItemCount].ToString() = "Rejected"
						QryString.Append("(ARESTS = 'R'")

					EndSL
				Else
					Select
					When ApproveStatus.CheckedItems[ItemCount].ToString() = "Outstanding"
						QryString.Append(" Or ARESTS = ' '")

					When ApproveStatus.CheckedItems[ItemCount].ToString() = "Approved"
						QryString.Append(" Or ARESTS = 'A'")

					When ApproveStatus.CheckedItems[ItemCount].ToString() = "Rejected"
						QryString.Append(" Or ARESTS = 'R'")

					EndSL
				EndIf
			EndFor
	    EndIf
	    
	    //Request ID Range
	    If FromID <> 0
			If QryString.Length <> *Zero
				QryString.Append(") And ")
			EndIf
		
			QryString.Append("(AREID >= '")
			QryString.Append(FromID)
			QryString.Append("'  And ")
			QryString.Append("AREID <= '")
			QryString.Append(ToID)
			QryString.Append("'")
			
	    Endif
	    
	    //Display All Flag
	    If DisplayAll = *True
	    
			If QryString.Length <> *Zero
				QryString.Append(") And ")
			EndIf
			
			QryString.Append("(ARECRU = '")
			QryString.Append(UserID)
			QryString.Append("'")
		    		    
		Endif
	    
	    // Close brackets
	    If QryString.Length <> *Zero
			QryString.Append(")")
		EndIf
		
		DtaAdaptor = *New iDB2DataAdapter(QryString.ToString(),DB2Connection)
		ds = *New DataSet("DB2")
		DtaAdaptor.Fill(ds)		
	    	    
		RequestTbl = CreateRequestTbl()
		
		ForEach Request Collection(ds.Tables["Table"].Rows) Type(DataRow)
								
			RequestDR = RequestTbl.NewRow()
				
			RequestDR["RequestID"]       = Request["AREID"].ToString().Trim()
			RequestDR["ApplicationName"] = Request["APPNAM"].ToString().Trim()
			RequestDR["ModuleName"]      = Request["MODNAM"].ToString().Trim()
			RequestDR["FunctionName"]    = Request["FCTNAM"]
							
			Select
			When Request["ARESTS"].ToString()   = String.Empty
				 RequestDR["Status"]			= "OutStanding"
			When Request["ARESTS"].ToString()   = 'R'
				 RequestDR["Status"]            = "Rejected"
			When Request["ARESTS"].ToString()   = 'A'
				 RequestDR["Status"]            = "Approved"
			When Request["ARESTS"].ToString()   = 'O'
				 RequestDR["Status"]            = "Overridden"	 
			When Request["ARESTS"].ToString()   = 'L'
				 RequestDR["Status"]            = "Overridden"	
			EndSL
								
			RequestDR["FunctionID"] = Request["AREFCT"]
			RequestDR["Details"]    = Request["AREDET"].ToString().Trim()
			RequestDR["Submitted"]  = Request["ARECRU"].ToString().Trim()
												
			RequestDR["CreateDateTime"]  = CvtToDateTime(Request["ARECRD"] *As Decimal, Request["ARECRT"] *As Decimal)
			
			RequestTbl.Rows.Add(RequestDR)
		EndFor
				
		LeaveSR RequestTbl
	EndFunc
	
				
	BegFunc CreateRequestTbl Type(DataTable) Access(*Private)
	
		DclFld RequestTbl Type(DataTable)
	
		RequestTbl = *New DataTable("RequestTbl")
		RequestTbl.Columns.Add(*New DataColumn('RequestID',      *TypeOf(Int64)))
		RequestTbl.Columns.Add(*New DataColumn('ApplicationName',*TypeOf(String)))
		RequestTbl.Columns.Add(*New DataColumn('ModuleName',     *TypeOf(String)))
		RequestTbl.Columns.Add(*New DataColumn('FunctionName',   *TypeOf(String)))
		RequestTbl.Columns.Add(*New DataColumn('Details',        *TypeOf(String)))
		RequestTbl.Columns.Add(*New DataColumn('Submitted',      *TypeOf(String)))
		RequestTbl.Columns.Add(*New DataColumn('Status',         *TypeOf(String)))
		RequestTbl.Columns.Add(*New DataColumn('CreateDateTime', *TypeOf(DateTime)))
		RequestTbl.Columns.Add(*New DataColumn('FunctionID',     *TypeOf(Int32)))
		RequestTbl.Columns.Add(*New DataColumn('ActiveFlag',     *TypeOf(String)))  
		
		LeaveSR RequestTbl
	EndFunc
	
	BegFunc CvtToDateTime Type(DateTime) Access(*Private)
		DclSrParm IPDate Type(Int32)
		DclSrParm IPTime Type(Int32)
		
		DclFld DTstring   Type(String)
		DclFld ConvertedDateTime Type(DateTime)
		DclFld dtfi Type(System.Globalization.DateTimeFormatInfo)
		
		If IPDate = *Zero
			IPdate = 00010101
		EndIf
		
		DTstring = IPDate.ToString("0000/00/00") + ' ' + IPTime.ToString("00:00:00")
		
		dtfi = *New System.Globalization.DateTimeFormatInfo()
		ConvertedDateTime = DateTime.ParseExact(DTstring,"yyyy/MM/dd HH:mm:ss",dtfi)
		
		LeaveSR ConvertedDateTime
	EndFunc
	
	BegFunc CvtToDateTime Type(DateTime) Access(*Private)
		DclSrParm IPDate Type(Decimal)
		DclSrParm IPTime Type(Decimal)
		
		DclFld DTstring   Type(String)
		DclFld ConvertedDateTime Type(DateTime)
		DclFld dtfi Type(System.Globalization.DateTimeFormatInfo)
		
		If IPDate = *Zero
			IPdate = 00010101
		EndIf
		
		DTstring = IPDate.ToString("0000/00/00") + ' ' + IPTime.ToString("00:00:00")
		
		dtfi = *New System.Globalization.DateTimeFormatInfo()
		ConvertedDateTime = DateTime.ParseExact(DTstring,"yyyy/MM/dd HH:mm:ss",dtfi)
		
		LeaveSR ConvertedDateTime
	EndFunc
	/EndRegion
EndClass