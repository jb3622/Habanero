<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Az+E0cvsBp8uBYbmaX7xGV+EO8LxExEQADs=
</value>
  </data>
</root>