Using System
Using System.Text
Using System.Xml

DclNameSpace Disney.Menu

BegClass MenuOption Access(*Internal)

	DclFld XmlOptionName   Type(String)
	DclFld XmlOptionText   Type(String)
	DclFld XmlEnabled	   Type(Boolean)
	DclFld XmlAssemblyName Type(String)
	DclFld XmlClassName    Type(String)
	DclFld XmlOptionAut    Type(String)
	DclFld XmlApplication  Type(String)
	
	BegConstructor Access(*Public)

	EndConstructor
	
	BegProp OptionName Type(*String) Access(*Public)
		BegGet
			LeaveSR XmlOptionName
		EndGet
	EndProp
	
	BegProp OptionText Type(*String) Access(*Public)
		BegGet
			LeaveSR XmlOptionText
		EndGet
	EndProp
	
	BegProp Enabled Type(*Boolean) Access(*Public)
		BegGet
			LeaveSR XmlEnabled
		EndGet
	EndProp
	
	BegProp AssemblyName Type(*String) Access(*Public)
		BegGet
			LeaveSR XmlAssemblyName
		EndGet
	EndProp
	
	BegProp ClassName Type(*String) Access(*Public)
		BegGet
			LeaveSR XmlClassName
		EndGet
	EndProp
	
	BegProp Authority Type(*String) Access(*Public)
		BegGet
			LeaveSR XmlOptionAut
		EndGet
	EndProp
	
	BegProp Application Type(String) Access(*Public)
		BegGet
			LeaveSR XmlApplication
		EndGet
	EndProp
	
	BegFunc GetMenuOption Type(*String) Access(*Public)
		DclSrParm OptionName Type(*String)
			
		DclFld objXML      Type(System.Xml.XmlDocument)
		DclFld Node        Type(System.Xml.XmlNode)
		
		DclFld XMLMenuFile Type(*String) 
		
		XMLMenuFile = System.Environment.CurrentDirectory.Trim() + "\" + Environments.menuXmlFolderName + "\MenuOptions.xml"
	
		objXML = *New Xml.XmlDocument()
		Try
			objXML.Load(XMLMenuFile)
		Catch Err Exception
			LeaveSR 'D'
		EndTry
	
		If objXML.HasChildNodes = *True
            Node = objXML.SelectSingleNode("/MenuOptions/Option[@Name = '" + OptionName + "']")
            
            If Node <> *Nothing
				XmlOptionName = Node.Attributes("Name").Value
				
				If Node.Attributes("OptionText") <> *Nothing
					XmlOptionText = Node.Attributes("OptionText").Value
				Else
					XmlOptionText = XmlOptionName
				EndIf
				
				If Node.Attributes("Enabled") <> *Nothing
					XmlEnabled = Node.Attributes("Enabled").Value *As *Boolean
				Else
					Throw *New System.Exception('Enabled is not configured for this option')
				EndIf
				
				If Node.Attributes("AssemblyName") <> *Nothing
					XmlAssemblyName = Node.Attributes("AssemblyName").Value
				Else
					Throw *New System.Exception('Assembly Name is missing for this option')
				EndIf
				
				If Node.Attributes("ClassName") <> *Nothing
					XmlClassName = Node.Attributes("ClassName").Value
				Else
					Throw *New System.Exception('Class Name is missing for this option')
				EndIf
				
				If Node.Attributes("Authority") <> *Nothing
					XmlOptionAut = Node.Attributes("Authority").Value
				Else
					Throw *New System.Exception('Authority is not configured for this option')
				EndIf
				
				If Node.Attributes("Application") <> *Nothing
					XmlApplication = Node.Attributes("Application").Value
				Else
					Throw *New System.Exception('Application is not configured for this option')
				EndIf
			Else
				LeaveSR 'O'
            EndIf
            
            LeaveSR *Blank
        Else
			LeaveSR 'O'
		EndIf
	EndFunc
EndClass
