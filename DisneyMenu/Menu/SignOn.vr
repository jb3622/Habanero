Using System
Using System.Collections
Using System.Collections.Specialized
Using System.ComponentModel
Using System.Data
Using System.Drawing
Using System.Text
Using System.Windows.Forms
Using System.Configuration
Using System.Reflection
Using IBM.Data.DB2.iSeries

DclNameSpace Disney.Menu

BegClass SignOn Extends(System.Windows.Forms.Form) Access(*Public)

	DclFld DisneyStorePicture Type(System.Windows.Forms.PictureBox) Access(*Private) WithEvents(*Yes)
	DclFld LogOutTimer  Type(System.Windows.Forms.Timer)    Access(*Private) WithEvents(*Yes)
	DclFld ServerName   Type(System.Windows.Forms.ComboBox) Access(*Private) WithEvents(*Yes)
	DclFld errorProvider System.Windows.Forms.ErrorProvider Access(*Private) WithEvents(*Yes)
	DclFld DomainName   Type(*String)
	
	DclFld Environment  Type(Disney.Menu.Environments)
	DclFld LibraryList  Type(Disney.Menu.LibraryLists)
	DclFld User         Type(Disney.Menu.Users)
	DclFld MDIcontainer Type(Disney.Menu.MDIcontainer)
	
	DclDB Name(PgmDB)
	
	/region Default Constructor and Windows Form Designer generated code
	
	DclFld buttonLogIn System.Windows.Forms.Button Access(*Private) WithEvents(*Yes)
	DclFld buttonExit System.Windows.Forms.Button Access(*Private) WithEvents(*Yes)
	DclFld UserName System.Windows.Forms.TextBox Access(*Private) WithEvents(*Yes)
	DclFld Password System.Windows.Forms.TextBox Access(*Private) WithEvents(*Yes)
	DclFld UserNameLabel System.Windows.Forms.Label Access(*Private) WithEvents(*Yes)
	DclFld PasswordLabel System.Windows.Forms.Label Access(*Private) WithEvents(*Yes)
	DclFld ServerLabel System.Windows.Forms.Label Access(*Private) WithEvents(*Yes)
	DclFld components Type(System.ComponentModel.IContainer) Inz(*Nothing)
	
	BegConstructor Access(*Public)
						
		InitializeComponent()

	EndConstructor

	BegSr InitializeComponent
		*this.components = *new System.ComponentModel.Container()
		DclFld resources System.ComponentModel.ComponentResourceManager New(*typeof(SignOn))
		*this.buttonLogIn = *new System.Windows.Forms.Button()
		*this.buttonExit = *new System.Windows.Forms.Button()
		*this.UserName = *new System.Windows.Forms.TextBox()
		*this.Password = *new System.Windows.Forms.TextBox()
		*this.UserNameLabel = *new System.Windows.Forms.Label()
		*this.PasswordLabel = *new System.Windows.Forms.Label()
		*this.ServerLabel = *new System.Windows.Forms.Label()
		*this.DisneyStorePicture = *new System.Windows.Forms.PictureBox()
		*this.LogOutTimer = *new System.Windows.Forms.Timer(*this.components)
		*this.ServerName = *new System.Windows.Forms.ComboBox()
		*this.errorProvider = *new System.Windows.Forms.ErrorProvider(*this.components)
		(*this.DisneyStorePicture *As System.ComponentModel.ISupportInitialize).BeginInit()
		(*this.errorProvider *As System.ComponentModel.ISupportInitialize).BeginInit()
		*this.SuspendLayout()
		//
		//buttonLogIn
		//
		*this.buttonLogIn.Location = *new System.Drawing.Point(115, 439)
		*this.buttonLogIn.Name = "buttonLogIn"
		*this.buttonLogIn.Size = *new System.Drawing.Size(75, 23)
		*this.buttonLogIn.TabIndex = 3
		*this.buttonLogIn.Text = "Log In"
		*this.buttonLogIn.UseVisualStyleBackColor = *True
		//
		//buttonExit
		//
		*this.buttonExit.DialogResult = System.Windows.Forms.DialogResult.Cancel
		*this.buttonExit.Location = *new System.Drawing.Point(237, 439)
		*this.buttonExit.Name = "buttonExit"
		*this.buttonExit.Size = *new System.Drawing.Size(75, 23)
		*this.buttonExit.TabIndex = 4
		*this.buttonExit.Text = "Exit"
		*this.buttonExit.UseVisualStyleBackColor = *True
		//
		//UserName
		//
		*this.UserName.BackColor = System.Drawing.SystemColors.Info
		*this.UserName.Location = *new System.Drawing.Point(115, 308)
		*this.UserName.Name = "UserName"
		*this.UserName.Size = *new System.Drawing.Size(121, 20)
		*this.UserName.TabIndex = 0
		//
		//Password
		//
		*this.Password.BackColor = System.Drawing.SystemColors.Info
		*this.Password.Location = *new System.Drawing.Point(115, 349)
		*this.Password.Name = "Password"
		*this.Password.Size = *new System.Drawing.Size(121, 20)
		*this.Password.TabIndex = 1
		*this.Password.UseSystemPasswordChar = *True
		//
		//UserNameLabel
		//
		*this.UserNameLabel.AutoSize = *True
		*this.UserNameLabel.Font = *new System.Drawing.Font("Microsoft Sans Serif", 9.75, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, (0 *As System.Byte))
		*this.UserNameLabel.Location = *new System.Drawing.Point(22, 309)
		*this.UserNameLabel.Name = "UserNameLabel"
		*this.UserNameLabel.Size = *new System.Drawing.Size(77, 16)
		*this.UserNameLabel.TabIndex = 5
		*this.UserNameLabel.Text = "User Name"
		//
		//PasswordLabel
		//
		*this.PasswordLabel.AutoSize = *True
		*this.PasswordLabel.Font = *new System.Drawing.Font("Microsoft Sans Serif", 9.75, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, (0 *As System.Byte))
		*this.PasswordLabel.Location = *new System.Drawing.Point(22, 350)
		*this.PasswordLabel.Name = "PasswordLabel"
		*this.PasswordLabel.Size = *new System.Drawing.Size(68, 16)
		*this.PasswordLabel.TabIndex = 6
		*this.PasswordLabel.Text = "Password"
		//
		//ServerLabel
		//
		*this.ServerLabel.AutoSize = *True
		*this.ServerLabel.Font = *new System.Drawing.Font("Microsoft Sans Serif", 9.75, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, (0 *As System.Byte))
		*this.ServerLabel.Location = *new System.Drawing.Point(22, 393)
		*this.ServerLabel.Name = "ServerLabel"
		*this.ServerLabel.Size = *new System.Drawing.Size(48, 16)
		*this.ServerLabel.TabIndex = 7
		*this.ServerLabel.Text = "Server"
		//
		//DisneyStorePicture
		//
		*this.DisneyStorePicture.Location = *new System.Drawing.Point(-1, -1)
		*this.DisneyStorePicture.Name = "DisneyStorePicture"
		*this.DisneyStorePicture.Size = *new System.Drawing.Size(424, 286)
		*this.DisneyStorePicture.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage
		*this.DisneyStorePicture.TabIndex = 8
		*this.DisneyStorePicture.TabStop = *False
		//
		//LogOutTimer
		//
		*this.LogOutTimer.Interval = 60000
		//
		//ServerName
		//
		*this.ServerName.BackColor = System.Drawing.SystemColors.Info
		*this.ServerName.DropDownHeight = 140
		*this.ServerName.FormattingEnabled = *True
		*this.ServerName.IntegralHeight = *False
		*this.ServerName.Location = *new System.Drawing.Point(115, 392)
		*this.ServerName.Name = "ServerName"
		*this.ServerName.Size = *new System.Drawing.Size(197, 21)
		*this.ServerName.TabIndex = 2
		//
		//errorProvider
		//
		*this.errorProvider.BlinkStyle = System.Windows.Forms.ErrorBlinkStyle.NeverBlink
		*this.errorProvider.ContainerControl = *this
		//
		//SignOn
		//
		*this.AcceptButton = *this.buttonLogIn
		*this.AutoScaleDimensions = *new System.Drawing.SizeF(6, 13)
		*this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
		*this.CancelButton = *this.buttonExit
		*this.ClientSize = *new System.Drawing.Size(419, 488)
		*this.Controls.Add(*this.ServerName)
		*this.Controls.Add(*this.DisneyStorePicture)
		*this.Controls.Add(*this.UserNameLabel)
		*this.Controls.Add(*this.PasswordLabel)
		*this.Controls.Add(*this.ServerLabel)
		*this.Controls.Add(*this.UserName)
		*this.Controls.Add(*this.Password)
		*this.Controls.Add(*this.buttonLogIn)
		*this.Controls.Add(*this.buttonExit)
		*this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.Fixed3D
		*this.Icon = (resources.GetObject("$this.Icon") *As System.Drawing.Icon)
		*this.MaximizeBox = *False
		*this.MinimizeBox = *False
		*this.Name = "SignOn"
		*this.ShowInTaskbar = *False
		*this.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
		*this.Text = "Sign On"
		(*this.DisneyStorePicture *As System.ComponentModel.ISupportInitialize).EndInit()
		(*this.errorProvider *As System.ComponentModel.ISupportInitialize).EndInit()
		*this.ResumeLayout(*False)
		*this.PerformLayout()
	EndSr
	
	// "disposing" is true if managed resources should be disposed; otherwise, false.
	BegSr Dispose Access(*Protected) Modifier(*Overrides)
		DclSrParm disposing Type(*Boolean)

		If (disposing *And (components *NE *Nothing))
			components.Dispose()
		EndIf
			
		*Base.Dispose(disposing)
	EndSr

	/endregion
	
	BegSr SignOn_Load Access(*Private) Event(*this.Load)
		DclSrParm sender *Object
		DclSrParm e System.EventArgs
		
		DclFld ObjectPath Type(System.IO.DirectoryInfo)
		DclFld exeAssem   Type(System.Reflection.Assembly)
		DclFld ShowUserID Type(String)
                        
//        ShowUserID = ConfigurationSettings.AppSettings("ShowUserName")
//       
//        If ShowUserID = "1"
//			UserName.Text = System.Environment.UserName
//		EndIf

		DomainName = System.Environment.UserDomainName
		
		// Set Current Directory equal to Directory of executing Assembly
		exeAssem = System.Reflection.Assembly.GetExecutingAssembly()
		objectpath = *New System.IO.DirectoryInfo(exeAssem.Location)
		
		System.Environment.CurrentDirectory = objectpath.Parent.FullName
		
		// Load Environments from Xml
		Environment = *New Disney.Menu.Environments()
		ServerName  = Environment.GetEnvironmentsIntoComboBox(ServerName)
		
		// Load Image for Sign-on display
		DisneyStorePicture.Image = *New Bitmap("SignOnImage.jpg")
		
		LogOutTimer.Start()
	EndSr

	BegSr buttonExit_Click Access(*Private) Event(*this.buttonExit.Click)
		DclSrParm sender *Object
		DclSrParm e System.EventArgs
		
		ExitApp
	EndSr

	BegFunc SetDataCache Type(Boolean) Access(*Private)
		DclFld configSetting Type(String) Inz (String.Empty)
		DclFld settingValue Type(String)
		DclFld error Type(System.Exception)
		DclFld domainFeatureSwitches Type(System.Collections.Specialized.NameValueCollection)	
		DclFld domainDateFormats Type(System.Collections.Specialized.NameValueCollection)				
		DclFld result Type(Boolean) Inz(*False)
		DclFld zMsg Type(String)
		
		error = *New Exception('Configuration Problem: A domain feature switch has been incorrectly specified.')
		
		Try
			// Get all the domain-related date formats		
			domainDateFormats = System.Configuration.ConfigurationManager.GetSection("DateFormats/" + Environment.Domain.Trim()) *AS NameValueCollection
			// Get all the domain-related feature switches
			domainFeatureSwitches = System.Configuration.ConfigurationManager.GetSection("DomainSpecificSettings/" + Environment.Domain.Trim()) *AS NameValueCollection
			
			configSetting = "IsVATRequired"
			settingValue = domainFeatureSwitches[configSetting]
			SELECT
			  WHEN settingValue = 'Yes'
				DataCache.IsVATRequired = *True
			  WHEN settingValue = 'No'
				DataCache.IsVATRequired = *False
			  OTHER
				Throw error
			ENDSL
	   		
	   		configSetting = "AreStageSetDatesChangeable"
			settingValue = domainFeatureSwitches["AreStageSetDatesChangeable"]
			SELECT
			  WHEN settingValue = 'Yes'
				DataCache.AreStageSetDatesChangeable  = *True
			  WHEN settingValue = 'No'
				DataCache.AreStageSetDatesChangeable = *False
			  OTHER
				Throw error
			ENDSL
			
			configSetting = "IsLandingFactorRequiredForRoadDelivery"
			settingValue = domainFeatureSwitches["IsLandingFactorRequiredForRoadDelivery"]
			SELECT
			  WHEN settingValue = 'Yes'
				DataCache.IsLandingFactorRequiredForRoadDelivery  = *True
			  WHEN settingValue = 'No'
				DataCache.IsLandingFactorRequiredForRoadDelivery = *False
			  OTHER
				Throw error
			ENDSL
			
			configSetting = "IsStyleNumberInputRequired"
			settingValue = domainFeatureSwitches["IsStyleNumberInputRequired"]
			SELECT
			  WHEN settingValue = 'Yes'
				DataCache.IsStyleNumberInputRequired = *True
			  WHEN settingValue = 'No'
				DataCache.IsStyleNumberInputRequired = *False
			  OTHER
				Throw error
			ENDSL
			
			configSetting = "IsPromoCodeMandatory"
			settingValue = domainFeatureSwitches["IsPromoCodeMandatory"]
			SELECT
			  WHEN settingValue = 'Yes'
				DataCache.IsPromoCodeMandatory = *True
			  WHEN settingValue = 'No'
				DataCache.IsPromoCodeMandatory = *False
			  OTHER
				Throw error
			ENDSL
			
			configSetting = "IsCompositionCodeEditable"
			settingValue = domainFeatureSwitches["IsCompositionCodeEditable"]
			SELECT
			  WHEN settingValue = 'Yes'
				DataCache.IsCompositionCodeEditable = *True
			  WHEN settingValue = 'No'
				DataCache.IsCompositionCodeEditable = *False
			  OTHER
				Throw error
			ENDSL
			
			configSetting = "IsCommodityCodeEditable"
			settingValue = domainFeatureSwitches["IsCommodityCodeEditable"]
			SELECT
			  WHEN settingValue = 'Yes'
				DataCache.IsCommodityCodeEditable = *True
			  WHEN settingValue = 'No'
				DataCache.IsCommodityCodeEditable = *False
			  OTHER
				Throw error
			ENDSL
			
			configSetting = "PreSelectAllMarkets"
			settingValue = domainFeatureSwitches["PreSelectAllMarkets"]
			SELECT
			  WHEN settingValue = 'Yes'
				DataCache.PreSelectAllMarkets = *True
			  WHEN settingValue = 'No'
				DataCache.PreSelectAllMarkets = *False
			  OTHER
				Throw error
			ENDSL
			
			configSetting = "ShowListPrice"
			settingValue = domainFeatureSwitches["ShowListPrice"] 
			SELECT
			  WHEN settingValue = 'Yes'
				DataCache.ShowListPrice = *True
			  WHEN settingValue = 'No'
				DataCache.ShowListPrice = *False
			  OTHER
				Throw error
			ENDSL
			
			configSetting = "AllowUPCInput"
			settingValue = domainFeatureSwitches["AllowUPCInput"] 
			SELECT
			  WHEN settingValue = 'Yes'
				DataCache.AllowUPCInput = *True
			  WHEN settingValue = 'No'
				DataCache.AllowUPCInput = *False
			  OTHER
				Throw error
			ENDSL

			configSetting = "DisplayFreightCharges"
			settingValue = domainFeatureSwitches["DisplayFreightCharges"] 
			SELECT
			  WHEN settingValue = 'Yes'
				DataCache.DisplayFreightCharges = *True
			  WHEN settingValue = 'No'
				DataCache.DisplayFreightCharges = *False
			  OTHER
				Throw error
			ENDSL
						
			configSetting = "DisplayPOHitsCancelDateWithDayFormat"
			settingValue = domainFeatureSwitches["DisplayPOHitsCancelDateWithDayFormat"] 
			SELECT
			  WHEN settingValue = 'Yes'
				DataCache.DisplayPOHitsCancelDateWithDayFormat = *True
			  WHEN settingValue = 'No'
				DataCache.DisplayPOHitsCancelDateWithDayFormat = *False
			  OTHER
				Throw error
			ENDSL
			
			configSetting = "DaysBetweenShipDateAndCancelDate"
			settingValue = domainFeatureSwitches["DaysBetweenShipDateAndCancelDate"] 
			If Not Int32.TryParse(settingValue,*ByRef DataCache.DaysBetweenShipDateAndCancelDate)
				DataCache.DaysBetweenShipDateAndCancelDate = 0
			EndIf
			
			configSetting = "LocalLanguage"
			settingValue = domainFeatureSwitches["LocalLanguage"] 
			DataCache.LocalLanguage = settingValue.Trim()
			
			configSetting = "DefaultVATCode"
			settingValue = domainFeatureSwitches["DefaultVATCode"]
			DataCache.DefaultVATCode = settingValue.Trim()
						
			/*** Date formats ***/		
			configSetting = "ItemManagement_DatePickerFormat"		
			settingValue = domainDateFormats["ItemManagement_DatePickerFormat"]
			DateFormats.DatePickerFormat = settingValue.Trim()
			
			configSetting = "PO_CancelDate"
			settingValue = domainDateFormats["PO_CancelDate"]
			DateFormats.PO_CancelDate = settingValue.Trim()
			
			configSetting = "PO_ShipDate"
			settingValue = domainDateFormats["PO_ShipDate"]
			DateFormats.PO_ShipDate = settingValue.Trim()
			
			configSetting = "PO_AnticipateDate"
			settingValue = domainDateFormats["PO_AnticipateDate"]
			DateFormats.PO_AnticipateDate = settingValue.Trim()
			
			configSetting = "PO_OrderDate"
			settingValue = domainDateFormats["PO_OrderDate"]
			DateFormats.PO_OrderDate = settingValue.Trim()

			configSetting = "DefaultVATCode"
			settingValue = System.Configuration.ConfigurationSettings.AppSettings("DefaultVATCode")
			DataCache.DefaultVATCode = settingValue
			
			
			result = *True
			
		Catch exc Type(Exception)
		    zMsg = 'Please check configuration setting - [' + configSetting + ']'
			MsgBox TITLE('Setup Error') Msg(zMsg)  ICON(*Stop)
		EndTry
		LeaveSR result
	EndFunc
				
	BegSr buttonLogIn_Click Access(*Private) Event(*this.buttonLogIn.Click)
		DclSrParm sender *Object
		DclSrParm e System.EventArgs

		DclFld ObjectPath Type(System.IO.DirectoryInfo)
		DclFld exeAssem   Type(System.Reflection.Assembly)
		DclFld UserFound Type(*Boolean)
		errorProvider.Clear()
		
		// Validate Environment details and determine server name
		If Environment = *Nothing
			Environment = *New Environments()
		EndIf
		
		If ServerName.SelectedItem = *Nothing
			Try
				Environment.GetEnvironmentDetails(DomainName)
			Catch Err Exception
				errorProvider.SetError(ServerName,"Please select Server")
				LeaveSR
			EndTry
		Else
			Environment.GetEnvironmentDetails(ServerName)
		EndIf
		
		Environments.menuXmlFolderName = Environment.MenuSettingsFolderName
			
		// Validate Sign On credentials
		If String.IsNullOrEmpty(UserName.Text)
			errorProvider.SetError(UserName,'Please enter a User Name')
			LeaveSR
		EndIf
		
		User = *New Users()
		
		If (SetDataCache() = *False)
			LeaveSR
		EndIf
		
		UserFound =	User.GetUserDetails(UserName.Text)
		If UserFound = *False
			errorProvider.SetError(UserName,'User not found')
			LeaveSR
		EndIf
		
		If User.UserEnabled = *Off
			errorProvider.SetError(UserName,'User is not Enabled')
			LeaveSR
		EndIf
		
		If User.IPinitials = *Blank
			errorProvider.SetError(UserName,'User is not configured for IP, Initials are missing')
			LeaveSR
		EndIf
		
		// Validate password
		If String.IsNullOrEmpty(Password.Text)
			errorProvider.SetError(Password,'Please enter a password')
			LeaveSR
		EndIf
		
		// Cross Validate server name with User authorised environments (Servers)
		If Not (User.ChkEnvironmentAuthority(Environment.Name))
			errorProvider.SetError(ServerName,'You are not authorised to this environment')
			User          = *Nothing
			Environment   = *Nothing
			Password.Text = String.Empty
			
			LeaveSR
		EndIf
		
		With PgmDB
			.User     = UserName.Text
			.Password = Password.Text

			.PoolingTimeout    = Environment.PoolingTimeOut
			.Port              = Environment.Port
			.Server            = Environment.Server
			.Label             = Environment.Label
			.PlatformAttribute = Environment.PlatformAttribute
		EndWith
				
		// Try and connect to database
		Try
			Connect PgmDB
		Catch Err exception
			If Err.Message.Contains('Password not correct for user profile')
				errorProvider.SetError(Password,'Password not correct')
			Else
				MsgBox Err.Message
			EndIf
			
			User          = *Nothing
			Environment   = *Nothing
			Password.Text = String.Empty
			
			LeaveSR
		EndTry
		
		// Stop AutoLogOut Timing
		LogOutTimer.Stop()
				
		// Set connections Library List
		If LibraryList = *Nothing
			LibraryList = *New LibraryLists()
		EndIf
		
		If LibraryList.GetDefaultLibraryList(Environment.Name) = *True
			Try
				PgmDB.CurrentUserLibl = LibraryList.LibraryList
			Catch Err Exception
				MsgBox 'Could not replace library list on DG connection' + Err.Message.ToString()
				LeaveSR
			EndTry
		EndIf
		
		DclFld DB2Connection Type(iDB2Connection)
		DclFld ConnectString Type(StringBuilder)
		
		ConnectString = *New StringBuilder()
		ConnectString.Append("DataSource=")
		ConnectString.Append(Environment.Server)
		ConnectString.Append("; Naming=SYSTEM; UserID=")
		ConnectString.Append(UserName.Text)
		ConnectString.Append("; Password=")
		ConnectString.Append(Password.Text)
		ConnectString.Append("; DataCompression=False; LibraryList=")
		
		ForEach Library Collection(LibraryList.LibraryList) Type(String)
			ConnectString.Append(Library)
			ConnectString.Append(",")
		EndFor
		ConnectString.Remove(ConnectString.Length-1,1)
		ConnectString.Append(";")
		DataCache.DBConnectionString = ConnectString.ToString()
		
		DB2Connection = *New iDB2Connection(DataCache.DBConnectionString)
		
		// Continue
		Password.Text = String.Empty
		*this.Hide()
		
		MDIcontainer = *New Disney.Menu.MDIcontainer(User, PgmDB, DB2Connection, Environment)
		MDIcontainer.DisplayMenu()
		MDIcontainer = *Nothing
				
		// Log Out of iSeries
		If PgmDB.IsOpen
			DisConnect PgmDB
		EndIf
		
		DB2Connection.Close()
		gc.SuppressFinalize(DB2Connection)

		// Redisplay Sign-On Form
		*this.Show()
		
		User        = *Nothing
		Environment = *Nothing
		LogOutTimer.Start()
	EndSr
	
	BegSr LogOnTimeExpired Access(*Private) Event(*this.LogOutTimer.Tick)
		DclSrParm sender *Object
		DclSrParm e System.EventArgs
		
		ExitApp
	EndSr
EndClass